ÄÄaxisDirection
controllerphysicsviewportBuilderincrementCalculatorexcludeFromSemanticssemanticChildCountdragStartBehaviorrestorationIdscrollBehaviorclipBehavioraxiscreateStatedebugFillPropertiesmaybeOfof"recommendDeferredLoadingForContextensureVisible
scrollablepositionupdateShouldNotify	_positionresolvedPhysics_physicsdeltaToScrollOrigin_effectiveScrollControllervsyncdevicePixelRatio_devicePixelRationotificationContextstorageContext_persistedScrollOffset_configuration_fallbackScrollController_mediaQueryGestureSettings_updatePositionrestoreState
saveOffset	initStatedidChangeDependencies_shouldUpdatePositiondidUpdateWidgetdispose_scrollSemanticsKeysetSemanticsActions_gestureDetectorKey_ignorePointerKey_gestureRecognizers_shouldIgnorePointer_lastCanDrag_lastAxisDirection
setCanDragsetIgnorePointer_drag_hold_handleDragDown_handleDragStart_handleDragUpdate_handleDragEnd_handleDragCancel_disposeHold_disposeDrag#_targetScrollOffsetForPointerScroll_pointerSignalEventDelta_receivedPointerSignal_handlePointerScroll _handleScrollMetricsNotification_buildChromebuildstatechild	registrar_selectionDelegate_kDefaultDragTargetSize%_kDefaultSelectToScrollVelocityScalar_autoScroller_scheduledLayoutChange _currentDragStartRelatedToOrigin_currentDragEndRelatedToOrigin_selectionStartsInScrollable_scheduleLayoutChange!_selectableStartEdgeUpdateRecords_selectableEndEdgeUpdateRecordsdidChangeSelectableshandleClearSelectionhandleSelectionEdgeUpdate_inferPositionRelatedToOrigin"_updateDragLocationsFromGeometrieshandleSelectAllhandleSelectWordhandleGranularlyExtendSelection"handleDirectionallyExtendSelection_jumpToEdge_globalPositionInScrollable_dragTargetFromEventdispatchSelectionEventToChildensureChildUpdatedallowImplicitScrollingcreateRenderObjectupdateRenderObject_allowImplicitScrolling_semanticChildCountdescribeSemanticsConfiguration
_innerNodeassembleSemanticsNodeclearSemanticscreateDefaultValuedidUpdateValuefromPrimitivestoPrimitivesenablednoneweightedEventweightedContinuousfreediagonalDragBehaviorhorizontalDetailsverticalDetails_verticalFallbackController_horizontalFallbackController_verticalOuterScrollableKey_horizontalInnerScrollableKeyverticalScrollablehorizontalScrollabletwoDimensionalScrollable
lockedAxislastDragOffset_evaluateLockedAxisViewportBuilderTwoDimensionalViewportBuilder
Scrollable_ScrollableScopeScrollableState_ScrollableSelectionHandler _ScrollableSelectionHandlerState%_ScrollableSelectionContainerDelegate_getDeltaToScrollOrigin_ScrollSemantics_RenderScrollSemantics_RestorableScrollOffsetDiagonalDragBehaviorTwoDimensionalScrollableTwoDimensionalScrollableState_TwoDimensionalScrollableScope_VerticalOuterDimension_VerticalOuterDimensionState_HorizontalInnerDimension_HorizontalInnerDimensionStateÅë	ToleranceWidgetBuildContextViewportOffsetViewportListViewGridViewCustomScrollViewofensureVisibleSingleChildScrollViewShrinkWrappingViewportScrollControllerScrollPositionPageViewPageController
ScrollViewScrollNotificationNotificationListenerStatefulWidgetAxisDirectiondownDragStartBehaviorstartCliphardEdgeaxisDirectionrightinitialScrollOffsetPageStoragekeepScrollOffsetoffset	animateToScrollConfigurationScrollBehaviorscrollBehaviorScrollPhysicsphysicsAlwaysScrollableScrollPhysicsScrollActionScrollIncrementTypepagelineScrollIncrementCalculatorGestureDetectorexcludeFromSemanticsbool	separatedSemanticsConfigurationscrollChildCountintDragGestureRecognizerdragStartBehaviorRestorationBucketRestorationScopeRestorationManagerStringScrollableDetailsclipBehaviorAxisaxisDirectionToAxisoverridevoidDiagnosticPropertiesBuilderdebugFillPropertiesaddEnumPropertyDiagnosticsPropertyStringPropertyInheritedElement'getElementForInheritedWidgetOfExactTypewidget
scrollabledependOnInheritedElementcontextmaybeOfaxisFlutterError	fromPartsDiagnosticsNodeErrorSummaryErrorDescription	ErrorHintrecommendDeferredLoadingactivityScrollActivityvelocitygetInheritedWidgetOfExactTypepositionFuturedoubleDurationzeroCurveCurveseaseScrollPositionAlignmentPolicyexplicitListRenderObjectfindRenderObject	alignmentdurationcurvealignmentPolicytargetRenderObjectisEmptyvaluelengthsinglewaitthenInheritedWidgetStateTickerProviderStateMixinRestorationMixinScrollContextcreateScrollPositionOffsetEdgeDraggingAutoScrollerpixelsupleft
controllerTickerProvidercurrentContextrestorationIdDeviceGestureSettingsgetScrollPhysicsapplyTodetachscheduleMicrotaskdisposeattachregisterForRestorationrestoreOffsetinitialRestore!debugIsSerializableForRestorationServicesBindinginstancerestorationManager	flushData	initState
MediaQuerymaybeGestureSettingsOfmaybeDevicePixelRatioOfViewdevicePixelRatiodidChangeDependenciesruntimeTypeparentdidUpdateWidget	GlobalKey	protectedSetSemanticsActioncurrentStatereplaceSemanticsActionsRawGestureDetectorStateMapTypeGestureRecognizerFactoryverticalVerticalDragGestureRecognizer$GestureRecognizerFactoryWithHandlerssupportedDevicesdragDevicesonDownonStartonUpdateonEndonCancelminFlingDistanceminFlingVelocitymaxFlingVelocityvelocityTrackerBuildergestureSettings
horizontalHorizontalDragGestureRecognizerreplaceGestureRecognizersRenderIgnorePointerignoringDragScrollHoldControllerDragDownDetailsholdDragStartDetailsdragDragUpdateDetailsupdateDragEndDetailsendcancelminmaxminScrollExtentmaxScrollExtentPointerScrollEventLogicalKeyboardKeyHardwareKeyboardlogicalKeysPressedanypointerAxisModifierscontainskindPointerDeviceKindmousescrollDeltadydxaxisDirectionIsReversedPointerSignalEventshouldAcceptUserOffsetGestureBindingpointerSignalResolverregisterPointerScrollInertiaCancelEventpointerScrollPointerEventScrollMetricsNotificationdepthmarkNeedsSemanticsUpdate	directiondecorationClipBehaviorbuildScrollbarbuildOverscrollIndicatorchildListeneronPointerSignalRawGestureDetectorkeygesturesbehaviorHitTestBehavioropaque	SemanticsexplicitChildNodesIgnorePointerviewportBuilderonNotificationallowImplicitScrollingsemanticChildCountSelectionRegistrarSelectionContainerstate	registrardelegate)MultiSelectableSelectionContainerDelegatevelocityScalaraddListenerremoveListenerSchedulerBindingaddPostFrameCallbacklayoutDidChangeSelectionEdgeUpdateEvent
SelectableselectablestoSetremoveWheredidChangeSelectablesSelectionResultClearSelectionEventclearhandleClearSelectionglobalPositiontypeSelectionEventTypeendEdgeUpdate	translateforEndforStarthandleSelectionEdgeUpdatependingstopAutoScrollstartAutoScrollIfNecessary	scrolling	RenderBoxglobalToLocallocalToGlobalsizeheightwidthinfiniteMatrix4getTransformTocurrentSelectionStartIndexforceUpdateStartSelectionGeometryhasSelectionSelectionPointstartSelectionPointMatrixUtilstransformPointlocalPosition
lineHeightcurrentSelectionEndIndexforceUpdateEndendSelectionPointSelectAllSelectionEventhandleSelectAllSelectWordSelectionEventhandleSelectWordGranularlyExtendSelectionEventhandleGranularlyExtendSelectionisEnd!DirectionallyExtendSelectionEvent"handleDirectionallyExtendSelectionRectfromLTRB
edgeBottombottomedgeToptopjumpTofromLTWH
fromCentercenterSelectionEventstartEdgeUpdategranularlyExtendSelectiondirectionallyExtendSelectionremove	selectAll
selectWorddispatchSelectionEventToChildabsprecisionErrorTolerancedispatchSelectionEventSemanticsNodeRenderViewportexcludeFromScrollingRenderAbstractViewportuseTwoPaneSemanticsdescribeSemanticsConfigurationSingleChildRenderObjectWidgetRenderProxyBoxisSemanticBoundaryhaveDimensionshasImplicitScrollingscrollPositionscrollExtentMaxscrollExtentMinIterablefirstisTaggedassembleSemanticsNodeshowOnScreenisMergedIntoParentisPartOfNodeMergingrecthasFlagSemanticsFlagisHiddenindexInParentscrollIndex
updateWithconfigchildrenInInversePaintOrderclearSemanticsRestorableValuenotifyListenersObject
kTouchSlopTwoDimensionalViewportTwoDimensionalScrollViewnoneverticalScrollablehorizontalScrollable"dependOnInheritedWidgetOfExactTypetwoDimensionalScrollableScrollMetricsverticalDetailshorizontalDetailsincrementCalculatordiagonalDragBehaviorverticalOffsethorizontalOffset
setCanDragweightedEventweightedContinuousfree_gestureRecognizers_handleDragCancel_lastCanDrag_lastAxisDirection_gestureDetectorKey_effectiveScrollController_configuration_handleDragDown_handleDragStartsourceTimeStampdeltaprimaryDelta_handleDragUpdatepixelsPerSecondVelocityprimaryVelocity_handleDragEndPanGestureRecognizer_physics_mediaQueryGestureSettingsStatefulWidgetInheritedWidgetStateTickerProviderStateMixinRestorationMixinScrollContext)MultiSelectableSelectionContainerDelegateSingleChildRenderObjectWidgetRenderProxyBoxRestorableValue
ScrollableScrollableStateèOÁ©k8xdœR‘8G Ñ
Ñ	Tolerance É‰package:flutter/physics.dart  Ä¶  
dart:async  Äª  ÄÕmathÄ–	dart:math  Äÿ  package:flutter/foundation.dart  Å  package:flutter/gestures.dart  Å*  package:flutter/rendering.dart  ÅS  package:flutter/scheduler.dart  Å|  package:flutter/services.dart  Å•  
basic.dart  Å∫  framework.dart  Å”  gesture_detector.dart  ÅÛ  media_query.dart  Ç  notification_listener.dart  Ç3  restoration.dart  ÇN  restoration_properties.dart  Çt  scroll_activity.dart  Çì  scroll_configuration.dart  Ç∑  scroll_context.dart  Ç’  scroll_controller.dart  Çˆ  scroll_physics.dart  É  scroll_position.dart  É3  scrollable_helpers.dart  ÉU  selectable_region.dart  Év  selection_container.dart  Éô  ticker_provider.dart  É∏  	view.dart  ÉÃ  viewport.dart    	dart:core¿ êc ¿`Vâ <ÄÜÄ§Ä•Ä∫Ä÷Ä◊ÅÅ)ÅRÅ{Å£Å§ÅπÅ“ÅÚÇÇ2ÇMÇsÇíÇ∂Ç‘ÇıÉÉ2ÉTÉuÉòÉ∑ÉÀÉ„É‰ÑÑÑ3ÑQÑRÑùÑ¬ÖÖÖlÖõÜ.Ü/ÜÜ®Ü¨Ü˜áEáâáçáﬁà.àyàëàïà·â0âBâFâáâãâÿä'äjä¥ä∏ããBãíãŸã›ãÎãÔå8åhå∏å’ç$ç=çãç©ç¯ééYéòé¬éÁéÌè9èNè]èäèüè±è‘èÚêê6êlêÑêùêƒë
ëëFëxë~ëÃííeí≤ììì%ìMìbìáìàì¿îî!î'îuî≈ïïWï¶ïÔñññiñ£ñ©ñπñøó
ó2óGómónó£ó◊ó›ò)òTòZò®ò—ò◊ôô]ôîôöôÁö7öàö—õ!õpõíõòõ®õÆõˇúMúüú¥ú‘ú’ù"ù(ùyù∏ùæùŒù‘ûûmû±û⁄û€üühüµüÀü—††n†•†´†„°1°j°°∑°∏°˙¢G¢d¢j¢∫££P£e£k£{£Å£“£Ê§	§
§R§X§®§Æ§˙•E•ë•ó•„¶*¶0¶@¶F¶ã¶Âßßß^ßùß€ß·®)®u®ø®ﬁ®‰©/©}©Æ©¥©¸™™™™g™â™è™§™—™“´´[´a´∞´Ì´Û¨>¨ä¨ê¨†¨¶¨Û≠≠≠9≠:≠o≠u≠∫ÆÆGÆ_ÆáÆàÆæÆƒÆÁÆÌØEØòØﬁØ˘Ø˙∞.∞4∞]∞î∞ï∞°∞◊∞ÿ∞‰±)±T±•±Ò≤5≤9≤:≤ä≤≥≤π≤‹≤‚≤≥1≥;≥A≥ç≥‘¥ ¥F¥L¥ö¥Íµ7µTµZµ¶µˆ∂∂∂'∂-∂s∂°∂Î∑2∑d∑…∑Á∏A∏î∏–ππ&π.πRπßπ≠πæπ¬π√∫∫"∫(∫K∫Q∫_∫ö∫§∫™∫ˆª=ªâªØªµººSºùº£ºÔΩ?ΩZΩ`Ω¨ΩÊΩÏΩ¸ææRæÄæƒøøøDø|øîøÂ¿ @¿ @¿ @0¿ @l¿ @±¿ A¿ AX¿ Aè¿ Aµ¿ Aœ¿ A‹¿ B¿ BW¿ BÉ¿ Bê¿ Bú¿ B§¿ B∑¿ B¡¿ Bﬁ¿ B‚¿ B„¿ C4¿ Cr¿ Cx¿ C∆¿ D¿ Dg¿ Dm¿ D∫¿ E	¿ ER¿ EX¿ E¶¿ EÔ¿ F9¿ F\¿ Fb¿ F±¿ FÕ¿ G&¿ GÄ¿ Gù¿ G˜¿ H9¿ HA¿ Hl¿ H∂¿ Hº¿ HŒ¿ H“¿ H”¿ I"¿ I?¿ Id¿ IÄ¿ Iú¿ I√¿ I‚¿ J>¿ JE¿ J~¿ J¿ J–¿ K¿ Km¿ KΩ¿ KË¿ L(¿ LN¿ Lç¿ LÆ¿ L„¿ M¿ M&¿ MB¿ MX¿ MÇ¿ M≤¿ Mº¿ MΩ¿ N
¿ N.¿ N^¿ Nd¿ Ne¿ Nù¿ N¿¿ N∆¿ NÂ¿ O¿ O¿ OR¿ OV¿ OX¿ OY¿ O™¿ OÎ¿ P¿ P7¿ PU¿ Pq¿ Pã¿ Pë¿ Pí¿ P∂¿ P◊¿ Pÿ¿ P‰¿ Q¿ Q;¿ Q?¿ QA¿ QB¿ Qn¿ Qr¿ Qº¿ QÁ¿ QÎ¿ R0¿ R}¿ RÅ¿ R“¿ S¿ Sg¿ SÜ¿ Sá¿ Sî¿ Sï¿ SŸ¿ Sﬂ¿ T-¿ Tz¿ T»¿ Tı¿ U¿ U¿ UP¿ UÇ¿ Uù¿ Uû¿ UÌ¿ V/¿ V5¿ VÜ¿ VΩ¿ V‡¿ V˝¿ W¿ WG¿ Wd¿ Wê¿ WØ¿ W€¿ W˚¿ X&¿ X,¿ X0¿ X1¿ Xó¿ Xò¿ X§¿ Xﬂ¿ X‡¿ XÏ¿ Y¿ Y¿ Y¿ YQ¿ Yr¿ Ys¿ Y¿ YŒ¿ Yœ¿ Y€¿ Z	¿ Z
¿ Z¿ ZK¿ Zü¿ Z†¿ Z∆¿ Zı¿ [*¿ [+¿ [s¿ [é¿ [›¿ \¿ \8¿ \l¿ \ú¿ \Ò¿ \˜¿ ]*¿ ]I¿ ]¿ ]Ã¿ ^¿ ^N¿ ^|¿ ^Ç¿ ^É¿ ^‚¿ _¿ _2¿ _6¿ _7¿ _C¿ _å¿ _ ¿ _È¿ `¿ `v¿ `|¿ `Ä¿ `Å¿ `ç¿ `∞¿ `Á¿ a¿ a]¿ a•¿ a‚¿ aÊ¿ aÁ¿ aÛ¿ b¿ b-¿ bc¿ bi¿ bÄ¿ bÑ¿ bÖ¿ bë¿ b≤¿ bˇ¿ ci¿ cÄ¿ c£¿ cß¿ c®¿ c›¿ dA¿ d´¿ d¥¿ dÙ¿ e	¿ e¿ e8¿ e_¿ eó¿ eò¿ eË¿ eÏ¿ eÌ¿ e˘¿ f(¿ fN¿ fO¿ fÑ¿ fÆ¿ f˚¿ g¿ gS¿ g~¿ g≥¿ g·¿ h¿ h¿ hN¿ h~¿ hß¿ hÚ¿ i¿ iK¿ iU¿ i]¿ iñ¿ i…¿ iœ¿ i–¿ i¸¿ j¿ j¿ j¿ j ¿ j,¿ j?¿ jd¿ jè¿ jú¿ jœ¿ j˚¿ k¿ k¿ k¿ k@¿ kU¿ kY¿ kZ¿ ki¿ kj¿ kü¿ k†¿ k¨¿ kπ¿ kÙ¿ l(¿ lr¿ lx¿ l|¿ l}¿ l´¿ l¨¿ m¿ mF¿ mG¿ mú¿ n¿ n'¿ n(¿ n>¿ nZ¿ n[¿ ng¿ nt¿ nî¿ nÊ¿ nÙ¿ n˙¿ o¿ oR¿ o†¿ oÍ¿ p(¿ pC¿ pP¿ pm¿ pâ¿ pÀ¿ q;¿ qú¿ q’¿ qÓ¿ r¿ rJ¿ r{¿ r¶¿ r◊¿ s¿ s[¿ sù¿ s˘¿ t:¿ t{¿ tæ¿ tœ¿ tﬁ¿ tÎ¿ u	¿ uK¿ uø¿ v"¿ v]¿ vv¿ v£¿ v“¿ w¿ w.¿ w_¿ w°¿ w„¿ x%¿ xÅ¿ x¬¿ y¿ yF¿ yW¿ yf¿ ys¿ y{¿ yÅ¿ yõ¿ y¡¿ yı¿ zM¿ zS¿ zW¿ zX¿ zd¿ zq¿ zó¿ z¿¿ zŒ¿ z‘¿ zˆ¿ {*¿ {§¿ {’¿ {€¿ {ﬂ¿ {‡¿ {Ù¿ {ı¿ |¿ |#¿ |$¿ |V¿ |q¿ |å¿ |µ¿ |π¿ |∫¿ |Ó¿ }8¿ }â¿ }≤¿ }Õ¿ }ˇ¿ ~¿ ~5¿ ~9¿ ~:¿ ~p¿ ~ø¿ ~Î¿ ¿ ¿ ¿ <¿ ã¿ ∑¿ –¿ Î¿ Ô¿ ¿ Ä¿ ÄC¿ Äë¿ Ä⁄¿ ÄÌ¿ Ä˚¿ Å¿ Å1¿ ÅÄ¿ Å¨¿ Å¡¿ Å÷¿ ÅÒ¿ Ç¿ Ç¿ Ç¿ Ç)¿ Ç;¿ Ç?¿ Ç@¿ ÇX¿ Çj¿ Çn¿ Ço¿ ÇÅ¿ ÇÇ¿ Ç“¿ É¿ ÉI¿ É^¿ É°¿ É¡¿ É»¿ ÉÃ¿ ÉÕ¿ Ñ¿ Ñe¿ Ñs¿ Ñ±¿ Ñ»¿ Ö"¿ Öy¿ Ö∏¿ Ü¿ ÜV¿ Ü§¿ ÜÒ¿ á ¿ á-¿ á.¿ áI¿ áe¿ á~¿ áü¿ á¡¿ á€¿ áÙ¿ à¿ à7¿ à=¿ à>¿ àw¿ àä¿ àê¿ à¢¿ à¶¿ àß¿ à·¿ â¿ âj¿ âz¿ âÇ¿ âæ¿ ä¿ äg¿ ä™¿ ã¿ ã¿ ãJ¿ ãk¿ ã√¿ ã…¿ ãÕ¿ ãŒ¿ å ¿ å)¿ åy¿ åÀ¿ ç¿ ç1¿ ç7¿ ç;¿ ç<¿ çé¿ ç±¿ é!¿ éR¿ éí¿ éö¿ é†¿ é≤¿ é∂¿ é∑¿ éÛ¿ è,¿ èS¿ èÅ¿ è¥¿ èª¿ èº¿ èÊ¿ èı¿ ê=¿ êL¿ êS¿ êW¿ êX¿ êi¿ êj¿ êv¿ êù¿ êº¿ ë¿ ëa¿ ëh¿ ëê¿ ëª¿ ë¬¿ í ¿ íd¿ íä¿ í¢¿ íº¿ í”¿ ì¿ ì'¿ ìK¿ ìt¿ ì†¿ ì›¿ ì˘¿ î7¿ îY¿ î¿ î≠¿ îÌ¿ î¸¿ ï	¿ ï¿ ï¿ ï$¿ ï%¿ ïM¿ ïç¿ ï«¿ ïË¿ ñ¿ ñ*¿ ñn¿ ñß¿ ñ¿¿ ñ ¿ ñ”¿ ñŸ¿ ñ⁄¿ ó¿ ó¿ óJ¿ óô¿ ó∂¿ ó‚¿ ó˜¿ ò¿ ò1¿ òH¿ òQ¿ òW¿ òX¿ òk¿ òo¿ òp¿ ò|¿ ò¡¿ òÏ¿ ô<¿ ôì¿ ôó¿ ôô¿ ôö¿ ôÕ¿ ô—¿ ö¿ öP¿ öã¿ ö±¿ ö ¿ öÊ¿ õ¿ õ¿ õ"¿ õ#¿ õB¿ õc¿ õy¿ õü¿ õ†¿ õ¨¿ ú¿ ú¿ ú¿ ú[¿ úú¿ úù¿ ú©¿ úæ¿ ú’¿ ù¿ ù0¿ ùQ¿ ùX¿ ù\¿ ù]¿ ùi¿ ù©¿ ùœ¿ û ¿ û5¿ û;¿ û?¿ û@¿ ûL¿ û_¿ ûÅ¿ ûñ¿ ûö¿ ûõ¿ ûß¿ ûŒ¿ ûÌ¿ ü¿ ü4¿ üO¿ üV¿ üZ¿ ü\¿ ü]¿ ü¨¿ ü◊¿ ü€¿ †+¿ †|¿ †«¿ †◊¿ °7¿ °a¿ °z¿ °ü¿ °º¿ ¢,¿ ¢^¿ ¢b¿ ¢c¿ ¢£¿ ¢÷¿ ¢◊¿ £¿ £P¿ £Q¿ £p¿ £†¿ £«¿ £Û¿ §¿ §¿ §o¿ §ú¿ §ù¿ §…¿ §Â¿ •¿ •*¿ •8¿ •>¿ •s¿ •ä¿ •º¿ •¿¿ •¡¿ ¶¿ ¶K¿ ¶l¿ ¶é¿ ¶ú¿ ¶¢¿ ¶≈¿ ß¿ ß4¿ ßD¿ ßL¿ ßr¿ ßã¿ ßì¿ ßó¿ ßò¿ ß€¿ ß˝¿ ®¿ ®O¿ ®q¿ ®w¿ ®«¿ ©¿ ©c¿ ©¥¿ ©≈¿ ©À¿ ™¿ ™i¿ ™∫¿ ™˘¿ ´U¿ ´Ø¿ ´∞¿ ´º¿ ´‹¿ ¨¿ ¨é¿ ¨ˇ¿ ≠!¿ ≠%¿ ≠&¿ ≠2¿ ≠v¿ ≠•¿ ≠“¿ ≠ˇ¿ Æ*¿ ÆT¿ ÆÇ¿ ÆÜ¿ Æá¿ Æì¿ Æ·¿ Ø?¿ Øl¿ Øƒ¿ Ø ¿ ∞¿ ∞E¿ ∞°¿ ±¿ ±[¿ ±h¿ ±∆¿ ≤:¿ ≤à¿ ≤é¿ ≤Ÿ¿ ≤⁄¿ ≥,¿ ≥}¿ ≥è¿ ≥º¿ ≥‚¿ ≥˜¿ ≥˝¿ ¥%¿ ¥r¿ ¥ó¿ ¥ø¿ ¥«¿ ¥Õ¿ ¥‡¿ ¥‰¿ ¥Â¿ µ%¿ µo¿ µ≥¿ µ‹¿ ∂-¿ ∂z¿ ∂ ¿ ∑¿ ∑T¿ ∑É¿ ∑ã¿ ∑‡¿ ∏ ¿ ∏¿ ∏¿ ∏O¿ ∏™¿ ∏Æ¿ ∏Ø¿ ∏Á¿ π!¿ π'¿ πv¿ π¨¿ π˙¿ ∫<¿ ∫§¿ ∫Â¿ ª/¿ ªg¿ ª’¿ º-¿ ºR¿ ºî¿ ºˆ¿ Ω6¿ ΩN¿ Ωè¿ Ωò¿ æ¿ æ¿ æv¿ æÃ¿ æÒ¿ ø/¿ øè¿ øÕ¿ øÂ¿ ¿"¿ ¿+¿ ¿ó¿ ¿ù¿ ¿°¿ ¿¢¿ ¿Æ¿ ¿Ò¿ ¡¿ ¡]¿ ¡±¿ ¡›¿ ¬	¿ ¬¿ ¬"¿ ¬&¿ ¬'¿ ¬3¿ ¬x¿ ¬Œ¿ √¿ √:¿ √M¿ √Q¿ √R¿ √^¿ √∏¿ ƒ	¿ ƒV¿ ƒ•¿ ƒ‰¿ ≈¿ ≈2¿ ≈U¿ ≈\¿ ≈Ñ¿ ≈§¿ ≈™¿ ≈Ω¿ ≈¡¿ ≈¬¿ ≈Œ¿ ∆.¿ ∆Ç¿ ∆œ¿ «¿ «]¿ «Ö¿ «´¿ «Œ¿ «’¿ «˝¿ »¿ »#¿ »6¿ »:¿ »;¿ »_¿ »Ä¿ »û¿ »æ¿ »“¿ …¿ …=¿ …Ä¿ …ç¿ ……¿ …¸¿  A¿  G¿  u¿  É¿  â¿  ›¿ À%¿ Àï¿ Àˇ¿ Ã"¿ Ã?¿ Ãá¿ ÃŸ¿ Õ-¿ Õ?¿ ÕI¿ Õ{¿ ÕÃ¿ Õﬁ¿ ÕË¿ Œ¿ Œ_¿ Œi¿ Œy¿ Œô¿ Œ€¿ œ&¿ œ8¿ œB¿ œm¿ œ∑¿ œ…¿ œ”¿ œ˝¿ –F¿ –P¿ –`¿ –¿ –«¿ —¿ —m¿ —¿ —â¿ —ª¿ “¿ “¿ “(¿ “T¿ “ü¿ “©¿ “π¿ “ÿ¿ ”¿ ”e¿ ”w¿ ”Å¿ ”¨¿ ”ˆ¿ ‘¿ ‘¿ ‘<¿ ‘Ö¿ ‘è¿ ‘ü¿ ‘•¿ ‘©¿ ‘™¿ ‘Ê¿ ’0¿ ’t¿ ’¿¿ ’È¿ ’Ì¿ ’Ó¿ ÷,¿ ÷ß¿ ÷´¿ ÷¨¿ ÷∏¿ ◊¿ ◊1¿ ◊`¿ ◊Ø¿ ◊◊¿ ÿ¿ ÿQ¿ ÿy¿ ÿ≤¿ ÿÓ¿ Ÿ¿ Ÿe¿ Ÿ≤¿ Ÿ◊¿ ⁄¿ ⁄Q¿ ⁄z¿ ⁄§¿ ⁄Ò¿ €@¿ €F¿ €â¿ €ç¿ €é¿ €ö¿ €Õ¿ ‹¿ ‹X¿ ‹å¿ ‹˙¿ ›3¿ ›v¿ ›Í¿ ﬁS¿ ﬁY¿ ﬁ¨¿ ﬁﬁ¿ ﬂH¿ ﬂÅ¿ ﬂƒ¿ ‡4¿ ‡ô¿ ‡ü¿ ‡£¿ ‡§¿ ‡∞¿ ‡√¿ ‡Ú¿ ·¿ ·C¿ ·g¿ ·|¿ ·Ä¿ ·Ç¿ ·É¿ ·≈¿ ·¿ ‚¿ ‚F¿ ‚a¿ ‚õ¿ ‚∏¿ ‚Ú¿ „¿ „I¿ „M¿ „O¿ „P¿ „í¿ „–¿ „‘¿ ‰¿ ‰]¿ ‰§¿ ‰œ¿ Â¿ Â¿ ÂV¿ Â§¿ ÂÙ¿ Ê<¿ ÊU¿ Êî¿ ÊØ¿ Êæ¿ Ê⁄¿ Á¿ Á*¿ Á;¿ ÁÅ¿ ÁÇ¿ Á£¿ Á»¿ ÁÈ¿ ÁÍ¿ Áˆ¿ Ë:¿ Ë]¿ Ëw¿ Ë≠¿ Ë€¿ Ë‚¿ ËÊ¿ ËÁ¿ ËÛ¿ ÈJ¿ È[¿ Èì¿ ÈØ¿ È‡¿ È‰¿ ÈÊ¿ ÈÁ¿ Í¿ Í8¿ Í^¿ Íà¿ ÍÆ¿ Íƒ¿ Í·¿ Î¿ ÎK¿ Îa¿ Îï¿ Îô¿ Îö¿ Îﬂ¿ Ï¿ Ï'¿ ÏN¿ Ïl¿ Ïz¿ ÏÄ¿ Ï∏¿ Ïœ¿ Ì¿ Ì$¿ Ì(¿ Ì)¿ Ì]¿ Ìõ¿ Ìª¿ ÌÊ¿ Ó¿ Ó ¿ Ó&¿ ÓK¿ Ók¿ Óo¿ Óp¿ Ó¶¿ Ó¬¿ ÓÈ¿ Ô¿ Ô¿ Ô$¿ ÔE¿ Ôe¿ Ôi¿ Ôj¿ Ôv¿ ÔΩ¿ ÔÔ¿ ¿ 8¿ E¿ ¿ ≠¿ Â¿ Ò¿ ÒP¿ ÒV¿ ÒZ¿ Ò[¿ Òx¿ Òy¿ ÒÖ¿ Ò˘¿ ÚU¿ Ún¿ Ú©¿ Ú∑¿ ÚΩ¿ Úæ¿ Ú¸¿ Û¿ ÛB¿ Û\¿ Û]¿ Ûy¿ Û¿¿ Û¸¿ Ù.¿ Ùp¿ Ù±¿ ÙŒ¿ Ù›¿ ı¿ ıH¿ ıR¿ ıo¿ ıw¿ ı}¿ ı©¿ ıÛ¿ ˆF¿ ˆJ¿ ˆK¿ ˆW¿ ˆq¿ ˆç¿ ˆ§¿ ˆ®¿ ˆ™¿ ˆ´¿ ˆ˝¿ ˜¿ ˜L¿ ˜X¿ ˜Ä¿ ˜Å¿ ˜ç¿ ˜∑¿ ˜Œ¿ ˜“¿ ˜”¿ ˜ﬂ¿ ¯¿ ¯#¿ ¯'¿ ¯(¿ ¯4¿ ¯O¿ ¯a¿ ¯e¿ ¯f¿ ¯r¿ ¯ó¿ ¯ô¿ ¯ö¿ ¯™¿ ¯´¿ ¯Ï¿ ˘¿ ˘_¿ ˘{¿ ˘∫¿ ˘¿¿ ˙¿ ˙0¿ ˙8¿ ˙9¿ ˙~¿ ˙ù¿ ˙£¿ ˙Û¿ ˚B¿ ˚S¿ ˚T¿ ˚ô¿ ˚”¿ ˚Ÿ¿ ¸%¿ ¸g¿ ¸{¿ ¸ë¿ ¸í¿ ¸⁄¿ ¸Í¿ ¸Ú¿ ¸Ù¿ ¸ı¿ ˝=¿ ˝á¿ ˝û¿ ˝¢¿ ˝Û¿ ˛:¿ ˛v¿ ˛Ω¿ ˛Œ¿ ˛“¿ ˇ¿ ˇl¿ ˇ§¿ ˇ®¿ ˇ∂¿ ˇ∫¿ ¿ <¿ ç¿ õ¿ ”¿
¿¿a¿p¿ì¿¢¿«¿Í¿¿+¿C¿j¿•¿€¿·¿‚¿/¿C¿v¿w¿Ø¿µ¿˝¿I¿v¿w¿≠¿≥¿˚¿E¿p¿q¿æ¿ƒ¿¿]¿c¿s¿y¿»¿Ì¿$¿%¿c¿i¿ê¿»¿…¿¿¿I¿ö¿ÿ¿˜¿¯¿	7¿	=¿	d¿	á¿	à¿	ƒ¿	 ¿	Ò¿
¿
¿
+¿
¿
Ä¿
–¿
˘¿
ˇ¿"¿(¿6¿ì¿ù¿£¿Â¿3¿Ñ¿ƒ¿ ¿¿?¿E¿U¿[¿ß¿›¿%¿¶¿”¿◊¿ÿ¿(¿7¿=¿`¿f¿t¿À¿’¿€¿¿k¿º¿¸¿¿R¿ñ¿ú¿Ì¿¿¿"¿(¿u¿¬¿¿Q¿a¿Ü¿æ¿÷¿'¿f¿s¿è¿‚¿4¿É¿”¿˘¿¿ ¿,¿4¿G¿Q¿n¿r¿t¿u¿Ø¿≥¿¿T¿b¿f¿≥¿˘¿A¿Ñ¿∂¿¿5¿h¿«¿(¿)¿[¿a¿ú¿¢¿¿¿:¿x¿Æ¿≤¿≥¿Á¿Ì¿(¿.¿~¿ù¿ ¿
¿B¿F¿G¿S¿h¿ù¿’¿€¿¿L¿R¿i¿m¿n¿z¿∑¿›¿¿ ¿0¿Ö¿ø¿ ¿ 0¿ e¿ †¿ –¿ ¸¿!:¿!É¿!†¿!’¿"¿"¿"¿"¿"0¿"â¿"≈¿#¿#6¿#n¿#´¿#›¿$¿$K¿$î¿$±¿$Ë¿%$¿%,¿%2¿%6¿%7¿%C¿%j¿%v¿%ƒ¿&¿&¿&¿&q¿&Ω¿&ƒ¿&≈¿&Ò¿'¿'B¿'l¿'•¿'€¿(¿(7¿(q¿(¨¿(»¿)¿)<¿)|¿)±¿)Ï¿*=¿*i¿*ô¿*ÿ¿+¿+E¿+|¿+º¿+˝¿,¿,Z¿,ô¿,ﬂ¿-¿-W¿-Æ¿.¿.¿."¿.,¿.4¿.;¿.<¿.Å¿.∫¿.ª¿.Ê¿/¿/!¿/(¿/,¿/-¿/9¿/L¿/x¿/¶¿/ª¿/ø¿/¡¿/¬¿/¯¿02¿0o¿0í¿0—¿0˙¿1&¿1@¿1F¿1G¿1á¿1à¿1î¿1‹¿1ﬁ¿1ﬂ¿2¿2?¿2a¿2p¿2î¿2∂¿2Ã¿2ﬂ¿2˜¿3¿36¿3S¿3l¿3ß¿4 ¿4¿44¿45¿4A¿4ë¿4ì¿4î¿4—¿5>¿5?¿5K¿5k¿5è¿5µ¿5¸¿6¿6<¿6L¿6{¿6Ø¿6’¿6Í¿75¿7Å¿7œ¿8¿8k¿8π¿8˚¿9¿9:¿9f¿9†¿9˛¿:
¿:¿:$¿:*¿:.¿:/¿:;¿:w¿:∞¿:◊¿;¿;.¿;5¿;{¿;°¿;Ó¿;Ú¿;Ù¿;ı¿<$¿<Y¿<}¿<å¿<∞¿<“¿<Ë¿<˚¿=¿=2¿=R¿=o¿=à¿=√¿>¿> ¿>S¿>T¿>`¿>¥¿>∂¿>∑¿>ˆ¿?!¿?5¿?O¿?P¿?ø¿?¿¿?Ã¿?Ì¿@¿@r¿@ï¿@ô¿@ö¿@∆¿@Í¿A#¿At¿A§¿A…¿B¿B#¿B<¿BB¿BF¿BG¿BS¿BÖ¿B©¿Bœ¿Bﬁ¿C¿CA¿Cg¿C≤¿CÃ¿D¿D¿D+¿D/¿D0¿D<¿Dp¿Dù¿D¡¿DÁ¿Dˆ¿E%¿EY¿EÉ¿E∏¿E÷¿EÎ¿F¿FQ¿Fq¿F†¿FÕ¿F·¿Fˇ¿G,¿Gf¿Gz¿GÑ¿G™¿G‡¿GÊ¿H¿H¿H¿H¿HR¿Hó¿H«¿HÛ¿I¿IG¿Is¿Iz¿I{¿I¬¿IÚ¿J¿JD¿Jr¿Jû¿J•¿J…¿JÔ¿K%¿K]¿Km¿Kì¿KØ¿KÚ¿L*¿L:¿Ln¿L£¿Lÿ¿M	¿M8¿Md¿M†¿M—¿N ¿N7¿NA¿NG¿Na¿Nr¿Nè¿N“¿O
¿O&¿OE¿O}¿Oç¿Oß¿Oƒ¿P¿P¿P¿P!¿P"¿P.¿P^¿Py¿Pê¿PÀ¿Q¿QE¿QÅ¿QΩ¿Qƒ¿R¿RA¿R}¿RÑ¿R®¿RŒ¿R›¿S¿S@¿Sf¿S¶¿S¨¿S›¿S·¿S‚¿SÓ¿T¿T&¿T=¿Ta¿Tá¿Tñ¿T≈¿T˘¿U¿UO¿UU¿Ut¿Ux¿Uy¿UÖ¿U•¿U…¿UÔ¿VA¿VU¿Vv¿VÜ¿Vµ¿VÈ¿W¿W$¿Ws¿W¿¿X¿XY¿X¿X¡¿Y¿Yw¿Yß¿Y¿¿YÌ¿Z¿ZM¿Zx¿Z©¿ZÎ¿[-¿[o¿[À¿\¿\N¿\_¿\n¿\{¿\Õ¿]¿]]¿]|¿]ú¿]»¿^¿^`¿^l¿^v¿^Ü¿^å¿^ê¿^ë¿^ù¿^Ÿ¿_¿_9¿_g¿_ê¿_ó¿_›¿`¿`P¿`T¿`V    Ä•  Ä∫Ä— Ä◊  Å  Å)  ÅR  Å{  Å§  Åπ  Å“  ÅÚ  Ç  Ç2  ÇM  Çs  Çí  Ç∂  Ç‘  Çı  É  É2  ÉT  Éu  Éò  É∑  ÉÀ  É‰Ñ
Ñ Ü/¿ I(éûàh/// A widget that manages scrolling in one dimension and informs the [Viewport]
/// through which the content is viewed.
///
/// [Scrollable] implements the interaction model for a scrollable widget,
/// including gesture recognition, but does not have an opinion about how the
/// viewport, which actually displays the children, is constructed.
///
/// It's rare to construct a [Scrollable] directly. Instead, consider [ListView]
/// or [GridView], which combine scrolling, viewporting, and a layout model. To
/// combine layout models (or to use a custom layout mode), consider using
/// [CustomScrollView].
///
/// The static [Scrollable.of] and [Scrollable.ensureVisible] functions are
/// often used to interact with the [Scrollable] widget inside a [ListView] or
/// a [GridView].
///
/// To further customize scrolling behavior with a [Scrollable]:
///
/// 1. You can provide a [viewportBuilder] to customize the child model. For
///    example, [SingleChildScrollView] uses a viewport that displays a single
///    box child whereas [CustomScrollView] uses a [Viewport] or a
///    [ShrinkWrappingViewport], both of which display a list of slivers.
///
/// 2. You can provide a custom [ScrollController] that creates a custom
///    [ScrollPosition] subclass. For example, [PageView] uses a
///    [PageController], which creates a page-oriented scroll position subclass
///    that keeps the same page visible when the [Scrollable] resizes.
///
/// See also:
///
///  * [ListView], which is a commonly used [ScrollView] that displays a
///    scrolling, linear list of child widgets.
///  * [PageView], which is a scrolling list of child widgets that are each the
///    size of the viewport.
///  * [GridView], which is a [ScrollView] that displays a scrolling, 2D array
///    of child widgets.
///  * [CustomScrollView], which is a [ScrollView] that creates custom scroll
///    effects using slivers.
///  * [SingleChildScrollView], which is a scrollable widget that has a single
///    child.
///  * [ScrollNotification] and [NotificationListener], which can be used to watch
///    the scroll position without using a [ScrollController]. éƒÇE èAèKp/// Creates a widget that scrolls.
///
/// The [axisDirection] and [viewportBuilder] arguments must not be null.èR	èY  èa'èg  èéèî  è£è©  èµèƒ  èÿèﬁ  èˆ!è¸  êê#  ê:0ê@  êpêv  êàêé  ê°!êß  èvèÉèÑêêSêdêeêµêπê∫êÀê—ëêÌêÂê“êËëêëëÇxìxÇ>/// {@template flutter.widgets.Scrollable.axisDirection}
/// The direction in which this widget scrolls.
///
/// For example, if the [Scrollable.axisDirection] is [AxisDirection.down],
/// increasing the scroll position will cause content below the bottom of the
/// viewport to become visible through the viewport. Similarly, if the
/// axisDirection is [AxisDirection.right], increasing the scroll position
/// will cause content beyond the right edge of the viewport to become visible
/// through the viewport.
///
/// Defaults to [AxisDirection.down].
/// {@endtemplate} ìäÉ·óaÉñ/// {@template flutter.widgets.Scrollable.controller}
/// An object that can be used to control the position to which this widget is
/// scrolled.
///
/// A [ScrollController] serves several purposes. It can be used to control
/// the initial scroll position (see [ScrollController.initialScrollOffset]).
/// It can be used to control whether the scroll view should automatically
/// save and restore its scroll position in the [PageStorage] (see
/// [ScrollController.keepScrollOffset]). It can be used to read the current
/// scroll position (see [ScrollController.offset]), or change it (see
/// [ScrollController.animateTo]).
///
/// If null, a [ScrollController] will be created internally by [Scrollable]
/// in order to create and manage the [ScrollPosition].
///
/// See also:
///
///  * [Scrollable.ensureVisible], which animates the scroll position to
///    reveal a given [BuildContext].
/// {@endtemplate} ópÖbúÀÖ/// {@template flutter.widgets.Scrollable.physics}
/// How the widgets should respond to user input.
///
/// For example, determines how the widget continues to animate after the
/// user stops dragging the scroll view.
///
/// Defaults to matching platform conventions via the physics provided from
/// the ambient [ScrollConfiguration].
///
/// If an explicit [ScrollBehavior] is provided to
/// [Scrollable.scrollBehavior], the [ScrollPhysics] provided by that behavior
/// will take precedence after [Scrollable.physics].
///
/// The physics can be changed dynamically, but new physics will only take
/// effect if the _class_ of the provided object changes. Merely constructing
/// a new instance with a different configuration is insufficient to cause the
/// physics to be reapplied. (This is because the final object used is
/// generated dynamically, which can be relatively expensive, and it would be
/// inefficient to speculatively create this object each frame to see if the
/// physics should be updated.)
///
/// See also:
///
///  * [AlwaysScrollableScrollPhysics], which can be used to indicate that the
///    scrollable should react to scroll requests (and possible overscroll)
///    even if the scrollable's contents fit without scrolling being necessary.
/// {@endtemplate} ú◊Çû…Å«/// Builds the viewport through which the scrollable content is displayed.
///
/// A typical viewport uses the given [ViewportOffset] to determine which part
/// of its content is actually visible through the viewport.
///
/// See also:
///
///  * [Viewport], which is a viewport that displays a list of slivers.
///  * [ShrinkWrappingViewport], which is a viewport that displays a list of
///    slivers and sizes itself based on the size of the slivers. û›Çÿ°¢Çâ/// {@template flutter.widgets.Scrollable.incrementCalculator}
/// An optional function that will be called to calculate the distance to
/// scroll when the scrollable is asked to scroll via the keyboard using a
/// [ScrollAction].
///
/// If not supplied, the [Scrollable] will scroll a default amount when a
/// keyboard navigation key is pressed (e.g. pageUp/pageDown, control-upArrow,
/// etc.), or otherwise invoked by a [ScrollAction].
///
/// If [incrementCalculator] is null, the default for
/// [ScrollIncrementType.page] is 80% of the size of the scroll window, and
/// for [ScrollIncrementType.line], 50 logical pixels.
/// {@endtemplate} °∫ÇM£ÛÇ/// {@template flutter.widgets.scrollable.excludeFromSemantics}
/// Whether the scroll actions introduced by this [Scrollable] are exposed
/// in the semantics tree.
///
/// Text fields with an overflow are usually scrollable to make sure that the
/// user can get to the beginning/end of the entered text. However, these
/// scrolling actions are generally not exposed to the semantics layer.
/// {@endtemplate}
///
/// See also:
///
///  * [GestureDetector.excludeFromSemantics], which is used to accomplish the
///    exclusion. §Ç¯¶ÚÇº/// The number of children that will contribute semantic information.
///
/// The value will be null if the number of children is unknown or unbounded.
///
/// Some subtypes of [ScrollView] can infer this value automatically. For
/// example [ListView] will use the number of widgets in the child list,
/// while the [ListView.separated] constructor will use half that amount.
///
/// For [CustomScrollView] and other types which do not receive a builder
/// or list of widgets, the child count must be explicitly provided.
///
/// See also:
///
///  * [CustomScrollView], for an explanation of scroll semantics.
///  * [SemanticsConfiguration.scrollChildCount], the corresponding semantics property. ß`Éo™æÉ/// {@template flutter.widgets.scrollable.dragStartBehavior}
/// Determines the way that drag start behavior is handled.
///
/// If set to [DragStartBehavior.start], scrolling drag behavior will
/// begin at the position where the drag gesture won the arena. If set to
/// [DragStartBehavior.down] it will begin at the position where a down
/// event is first detected.
///
/// In general, setting this to [DragStartBehavior.start] will make drag
/// animation smoother and setting it to [DragStartBehavior.down] will make
/// drag behavior feel slightly more reactive.
///
/// By default, the drag start behavior is [DragStartBehavior.start].
///
/// See also:
///
///  * [DragGestureRecognizer.dragStartBehavior], which gives an example for
///    the different behaviors.
///
/// {@endtemplate} ™‘Çc≠*Ç+/// {@template flutter.widgets.scrollable.restorationId}
/// Restoration ID to save and restore the scroll offset of the scrollable.
///
/// If a restoration id is provided, the scrollable will persist its current
/// scroll offset and restore it during state restoration.
///
/// The scroll offset is persisted in a [RestorationBucket] claimed from
/// the surrounding [RestorationScope] using the provided restoration ID.
///
/// See also:
///
///  * [RestorationManager], which explains how state restoration works in
///    Flutter.
/// {@endtemplate} ≠<ÅIÆwÅ/// {@macro flutter.widgets.shadow.scrollBehavior}
///
/// [ScrollBehavior]s also provide [ScrollPhysics]. If an explicit
/// [ScrollPhysics] is provided in [physics], it will take precedence,
/// followed by [scrollBehavior], and then the inherited ancestor
/// [ScrollBehavior]. ÆäÅmØÎÅG/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.hardEdge].
///
/// This is passed to decorators in [ScrollableDetails], and does not directly affect
/// clipping of the [Scrollable]. This reflects the same [Clip] that is provided
/// to [ScrollView.clipBehavior] and is supplied to the [Viewport]. Ø¸Äó∞h\/// The axis along which the scroll view scrolls.
///
/// Determined by the [axisDirection].   ∞ó?∞≥   ∞ó∞ò∞⁄Å^∞Î  ∞ˇ&±  ∞⁄∞€≤<áÖ∂ªÑ0/// The state from the closest instance of this class that encloses the given
/// context, or null if none is found.
///
/// Typical usage is as follows:
///
/// ```dart
/// ScrollableState? scrollable = Scrollable.maybeOf(context);
/// ```
///
/// Calling this method will create a dependency on the [ScrollableState]
/// that is returned, if there is one. This is typically the closest
/// [Scrollable], but may be a more distant ancestor if [axis] is used to
/// target a specific [Scrollable].
///
/// Using the optional [Axis] is useful when Scrollables are nested and the
/// target [Scrollable] is not the closest instance. When [axis] is provided,
/// the nearest enclosing [ScrollableState] in that [Axis] is returned, or
/// null if there is none.
///
/// This finds the nearest _ancestor_ [Scrollable] of the `context`. This
/// means that if the `context` is that of a [Scrollable], it will _not_ find
/// _that_ [Scrollable].
///
/// See also:
///
/// * [Scrollable.of], which is similar to this method, but asserts
///   if no [Scrollable] ancestor is found. ∂√∂—  ∂€
∂‚   π≈âæôÑÇ/// The state from the closest instance of this class that encloses the given
/// context.
///
/// Typical usage is as follows:
///
/// ```dart
/// ScrollableState scrollable = Scrollable.of(context);
/// ```
///
/// Calling this method will create a dependency on the [ScrollableState]
/// that is returned, if there is one. This is typically the closest
/// [Scrollable], but may be a more distant ancestor if [axis] is used to
/// target a specific [Scrollable].
///
/// Using the optional [Axis] is useful when Scrollables are nested and the
/// target [Scrollable] is not the closest instance. When [axis] is provided,
/// the nearest enclosing [ScrollableState] in that [Axis] is returned.
///
/// This finds the nearest _ancestor_ [Scrollable] of the `context`. This
/// means that if the `context` is that of a [Scrollable], it will _not_ find
/// _that_ [Scrollable].
///
/// If no [Scrollable] ancestor is found, then this method will assert in
/// debug mode, and throw an exception in release mode.
///
/// See also:
///
/// * [Scrollable.maybeOf], which is similar to this method, but returns null
///   if no [Scrollable] ancestor is found. æúæ™  æ¥
æª   ¿ BÂÖÏ¿ F€É≈/// Provides a heuristic to determine if expensive frame-bound tasks should be
/// deferred for the [context] at a specific point in time.
///
/// Calling this method does _not_ create a dependency on any other widget.
/// This also means that the value returned is only good for the point in time
/// when it is called, and callers will not get updated if the value changes.
///
/// The heuristic used is determined by the [physics] of this [Scrollable]
/// via [ScrollPhysics.recommendDeferredLoading]. That method is called with
/// the current [ScrollPosition.activity]'s [ScrollActivity.velocity].
///
/// The optional [Axis] allows targeting of a specific [Scrollable] of that
/// axis, useful when Scrollables are nested. When [axis] is provided,
/// [ScrollPosition.recommendDeferredLoading] is called for the nearest
/// [Scrollable] in that [Axis].
///
/// If there is no [Scrollable] in the widget tree above the [context], this
/// method returns false. ¿ F˛¿ G  ¿ G
¿ G   ¿ H’ÜÄ¿ IUg/// Scrolls the scrollables that enclose the given context so as to make the
/// given context visible. ¿ Ih¿ Iv  ¿ IÑ¿ Iå  ¿ I†!¿ I™  ¿ I«¿ IŒ  ¿ IÊV¿ J  
¿ Ió¿ I¥¿ Iº¿ IΩ¿ I’¿ I€¿ I‹¿ J¿ J3¿ J4 ¿ OÎÅU¿ OÒ  ¿ Pr ¿ P$¿ P4 ¿ P;¿ PJ  ¿ PY¿ Ph  ¿ Pu¿ PÖ   ¿ Pî ¿ P™  ¿ P∏¿ PÕ   ¿ P⁄d¿ PÎ  ¿ P˛¿ Q  ¿ P⁄¿ P€ ¿ QB¿ HV¿ SÅƒ/// State object for a [Scrollable] widget.
///
/// To manipulate a [Scrollable] widget's scroll position, use the object
/// obtained from the [position] property.
///
/// To be informed of when a [Scrollable] widget is scrolling, use a
/// [NotificationListener] to listen for [ScrollNotification] notifications.
///
/// This class is not intended to be subclassed. To specialize the behavior of a
/// [Scrollable], provide it with a [ScrollPhysics].  ¿ T˜¿ U  ¿ UÑ¿ Uì  ¿ YS¿ Y_  ¿ ZMP¿ Zk ¿ ZÑ¿ Zõ¿ Zú¿ Z¢"¿ Z∂  ¿ Z»+¿ Z⁄  ¿ Z˜1¿ [  ¿ kl1¿ k| ¿ kí¿ kõ¿ kú¿ lÆc¿ l◊ ¿ lÌ¿ lˆ¿ m¿ l˜¿ m¿ m¿ m/¿ m% ¿ m9¿ mB¿ mC¿ mûb¿ m¬ ¿ mÿ¿ m˛¿ mˇ¿ mﬁ¿ m˝¿ mﬂ¿ mÂ¿ n!¿ n	 ¿ n ¿ n*¿ n0  ¿ n@¿ nF  ¿ {˜¿ {˝  ¿ |¿ |  
¿ SóÅ]¿ T›Å(/// The manager for this [Scrollable] widget's viewport position.
///
/// To control what kind of [ScrollPosition] is created for a [Scrollable],
/// provide it with custom [ScrollController] that creates the appropriate
/// [ScrollPosition] in its [ScrollController.createScrollPosition] method.   ¿ Ul¿ Ue:/// The resolved [ScrollPhysics] of the [ScrollableState].   ¿ U†Çè¿ V Å/// An [Offset] that represents the absolute distance from the origin, or 0,
/// of the [ScrollPosition] expressed in the associated [Axis].
///
/// Used by [EdgeDraggingAutoScroller] to progress the position forward when a
/// drag gesture reaches the edge of the [Viewport].   ¿ X3c¿ XH    ¿ XöD¿ X∏   ¿ Xö¿ Xõ¿ X‚-¿ Y   ¿ X‚¿ X„¿ Y=¿ Y*   ¿ Y¿ Y¿ YuX¿ Yì   ¿ Yu¿ Yv¿ Y—7¿ YÓ   ¿ Y—¿ Y“¿ Z>¿ Z$   ¿ Z¿ Z¿ [uÉ¿¿ [z    ¿ _9ÅF¿ _J  ¿ _W¿ _k  ¿ _u¿ _{  ¿ _9¿ _:¿ `ÉÅb¿ `î  ¿ `ü¿ `ß  ¿ `É¿ `Ñ¿ aÈÄö¿ a˙   ¿ aÈ¿ aÍ¿ báÅ¿ bò   ¿ bá¿ bà¿ c™ÇA¿ cØ  ¿ c≈¿ c—   ¿ eÔÑ/¿ f   ¿ f¿ f  ¿ eÔ¿ e¿ j"Å6¿ j3   ¿ j"¿ j#¿ k¢ÄŸ¿ k¿  ¿ k‘¿ kÍ  ¿ k¢¿ k£¿ kÆ¿ kØ¿ n]ã˘¿ n{  ¿ nÜ
¿ nå  ¿ n]¿ n^¿ ni¿ nj¿ zZÅÑ¿ zx  ¿ zâ
¿ zè  ¿ zZ¿ z[¿ zf¿ zg¿ |&Äí¿ |+  ¿ |;¿ |L   ¿ |ºÅ|¿ |¡  ¿ |“¿ |‰   ¿ ~<ÄŒ¿ ~A  ¿ ~S¿ ~f   ¿ Ä‡¿   ¿ "¿ 2   ¿ ÚÇ¿ ˜    ¿ Ç+¿ Ç    ¿ ÇB+¿ ÇG    ¿ ÉÄΩ¿ É  ¿ É9¿ ÉA   ¿ ÑuÑ0¿ Ñ|  ¿ Ñï¿ Ñ©   ¿ à©É#¿ àÆ  ¿ à≈¿ àŸ   ¿ ã–Åj¿ ã’  ¿ ãÍ¿ ã¯   ¿ ç>Åw¿ çC  ¿ çd&¿ ç   ¿ éπÅù¿ é¿  ¿ éÕ¿ é€  ¿ é„¿ éÎ   ¿ êlà¿ ê  ¿ êÖ¿ êì  ¿ êl¿ êm¿ òrÅ$¿ òÉ  ¿ òó&¿ ò¥  ¿ òr¿ òs ¿ ôöÇk¿ öVÄµ/// A widget to handle selection for a scrollable.
///
/// This widget registers itself to the [registrar] and uses
/// [SelectionContainer] to collect selectables from its subtree. ¿ öçÄî ¿ öì¿ öÆ ¿ öµ¿ öƒ  ¿ öŒ¿ ö›  ¿ öÍ¿ ö˘  ¿ õ¿ õ   ¿ õ%¿ õ;  ¿ õD¿ õY  ¿ õe¿ õr  ¿ õ{"¿ õî   ¿ õ¢a¿ õœ   ¿ õ¢¿ õ£ ¿ úÉT¿ ú   ¿ ú]=¿ úà   ¿ úüÄº¿ ú∞   ¿ úü¿ ú†¿ ù_Äﬂ¿ ùp  ¿ ùÄ%¿ ùù  ¿ ù_¿ ù`¿ ûBW¿ ûS   ¿ ûB¿ ûC¿ ûùÄº¿ û∞  ¿ û∂¿ ûƒ  ¿ ûù¿ ûû ¿ ü]¿ B$¿ †›Åy/// This updater handles the case where the selectables change frequently, and
/// it optimizes toward scrolling updates.
///
/// It keeps track of the drag start offset relative to scroll origin for every
/// selectable. The records are used to determine whether the selection is up to
/// date with the scroll position when it sends the drag update event to a
/// selectable. ¿ °9Å( ¿ °9¿ °^ ¿ °e¿ °t  ¿ °~ ¿ °ó  ¿ °∞¿ °¶¿ °≤¿ °—¿ °√¿ °”¿ °Î¿ ¢(¿ °Ï¿ ¢¿ °Û¿ ¢¿ ¢•/¿ ¢π ¿ ¢”¿ £>¿ £$ ¿ £L¿ £S¿ £i  ¿ £r,¿ £ë  ¿ £¢#¿ £ß ¿ £¿¿ £…(¿ £—  ¿ £ı&¿ £˝  ¿ §q)¿ §v ¿ §ï¿ §À¿ §⁄  ¿ ßöÉπ¿ ´É@/// Stores the scroll offset when a scrollable receives the last
/// [SelectionEdgeUpdateEvent].
///
/// The stored scroll offset may be null if a scrollable never receives a
/// [SelectionEdgeUpdateEvent].
///
/// When a new [SelectionEdgeUpdateEvent] is dispatched to a selectable, this
/// updater checks the current scroll offset against the one stored in these
/// records. If the scroll offset is different, it synthesizes an opposite
/// [SelectionEdgeUpdateEvent] and dispatches the event before dispatching the
/// new event.
///
/// For example, if a selectable receives an end [SelectionEdgeUpdateEvent]
/// and its scroll offset in the records is different from the current value,
/// it synthesizes a start [SelectionEdgeUpdateEvent] and dispatches it before
/// dispatching the original end [SelectionEdgeUpdateEvent].¿ ´Q¿ ´R¿ ´=¿ ´P¿ ´>¿ ´J¿ ´WV¿ ´u ¿ ´´¿ ´¨¿ ´ó¿ ´™¿ ´ò¿ ´§¿ §ü)¿ §≤    ¿ §ÁÄÿ¿ §Î  ¿ §Ù¿ •   ¿ ¶MÅI¿ ¶R    ¿ ´≤År¿ ´√   ¿ ´≤¿ ´≥¿ ≠(Å]¿ ≠D  ¿ ≠Y¿ ≠n  ¿ ≠(¿ ≠)¿ ÆâÜZ¿ Æ•  ¿ Æø¿ ÆŸ  ¿ Æâ¿ Æä¿ ¥ÁÉ∆¿ ¥Ó  ¿ µ¿ µ   ¿ ∏±áÔ¿ ∫CÅ~/// Infers the [_currentDragStartRelatedToOrigin] and
/// [_currentDragEndRelatedToOrigin] from the geometry.
///
/// This method is called after a select word and select all event where the
/// selection is triggered by none drag events. The
/// [_currentDragStartRelatedToOrigin] and [_currentDragEndRelatedToOrigin]
/// are essential to handle future [SelectionEdgeUpdateEvent]s. ¿ ∫g¿ ∫m  ¿ ∫Ö¿ ∫ã  ¿ ∫¿ ∫õ¿ ¿§ÅÅ¿ ¿¿  ¿ ¿–¿ ¿È  ¿ ¿§¿ ¿•¿ ¬)Å'¿ ¬E  ¿ ¬V¿ ¬p  ¿ ¬)¿ ¬*¿ √TÇl¿ √p  ¿ √ê$¿ √∞  ¿ √T¿ √U¿ ≈ƒÇu¿ ≈‡  ¿ ∆'¿ ∆&  ¿ ≈ƒ¿ ≈≈¿ »=åk¿ »B  ¿ »N¿ »T   ¿ ‘¨Å@¿ ‘±  ¿ ‘Õ¿ ‘’   ¿ ’Ä∫¿ ’ı  ¿ ÷
¿ ÷$   ¿ ÷ÆÑﬁ¿ ÷   ¿ ÷Ë¿ ÷Ù  ¿ ÷ˇ¿ ◊  ¿ ÷Æ¿ ÷Ø¿ €êÖ¿ €°  ¿ €¥¿ €¿  ¿ €ê¿ €ë¿ ‡¶ÄŸ¿ ‡∑   ¿ ‡¶¿ ‡ß ¿ „PÜï¿ Ê[É/// With [_ScrollSemantics] certain child [SemanticsNode]s can be
/// excluded from the scrollable area for semantics purposes.
///
/// Nodes, that are to be excluded, have to be tagged with
/// [RenderViewport.excludeFromScrolling] and the [RenderAbstractViewport] in
/// use has to add the [RenderViewport.useTwoPaneSemantics] tag to its
/// [SemanticsConfiguration] by overriding
/// [RenderObject.describeSemanticsConfiguration].
///
/// If the tag [RenderViewport.useTwoPaneSemantics] is present on the viewport,
/// two semantics nodes will be used to represent the [Scrollable]: The outer
/// node will contain all children, that are excluded from scrolling. The inner
/// node, which is annotated with the scrolling actions, will house the
/// scrollable children. ¿ ÊñÄÍ ¿ Êú¿ Ê¨ ¿ Ê≥	¿ Ê∫  ¿ Ê¬¿ Ê—  ¿ Êﬁ$¿ ÊÌ  ¿ Á ¿ Á  ¿ Á.¿ Á5  
¿ ÁB¿ ÁH¿ Á~¿ Ád¿ Á\¿ ÁI¿ Á_¿ Áz¿ Ág¿ Á}¿ ÁÑ¿ Áô  ¿ Á•!¿ Á∞  ¿ Á ¿ Á’   ¿ ÁÏÄ˘¿ Ë  ¿ Ë"¿ Ë0  ¿ ÁÏ¿ ÁÌ¿ ËÈÄ˙¿ Ë˙  ¿ È¿ È  ¿ È##¿ È;  ¿ ËÈ¿ ËÍ ¿ ÈÁå¬¿ ÈÌ  ¿ ÍÅy ¿ Í¿ Í5 ¿ Í< ¿ ÍU  ¿ Íb$¿ Íq  ¿ Íå ¿ Íõ  ¿ Í≤¿ Íæ  ¿ Í’¿ ÍÀ¿ Í◊¿ Î ¿ ÍË¿ Î¿ Î5¿ Î!¿ Î7¿ ÎR¿ ÎW¿ Î]¿ ÎX¿ Ï¿ Ï  ¿ Ìù¿ Ì¢  ¿ Ó®¿ Ó≠  ¿ Ò]¿ Òl  ¿ Îún¿ ÎÙB/// Whether this render object is excluded from the semantic tree.   ¿ Ï)Ä˛¿ Ï-  ¿ Ï6¿ ÏF   ¿ Ì+o¿ Ìh1/// Whether this node can be scrolled implicitly.   ¿ ÌΩÄ±¿ Ì¡  ¿ Ìÿ
¿ Ìﬁ   ¿ Ór3¿ Ó{    ¿ ÓƒÄ§¿ Ó»  ¿ Ó€
¿ Ó·   ¿ ÔlÅÌ¿ Ô}  ¿ Ôú¿ Ô¥  ¿ Ôl¿ Ôm¿ Ò{ÑŒ¿ Òå  ¿ Ò¢¿ Ò±  ¿ Ò∂¿ ÒŒ  ¿ Ò’ ¿ ÒÓ  ¿ Ò{¿ Ò|¿ ˆMZ¿ ˆ^   ¿ ˆM¿ ˆN ¿ ˜Åç¿ ˜    ¿ ¯h.¿ ¯}   ¿ ¯h¿ ¯i¿ ˜N1¿ ˜b   ¿ ˜N¿ ˜O¿ ˜ÉN¿ ˜î  ¿ ˜£¿ ˜¨  ¿ ˜É¿ ˜Ñ¿ ˜’Q¿ ˜Ë  ¿ ˜˜¿ ¯   ¿ ˜’¿ ˜÷¿ ¯*:¿ ¯>   ¿ ¯*¿ ¯+ ¿ ¸ıô~¿ °É•/// A widget that manages scrolling in both the vertical and horizontal
/// dimensions and informs the [TwoDimensionalViewport] through which the
/// content is viewed.
///
/// [TwoDimensionalScrollable] implements the interaction model for a scrollable
/// widget in both the vertical and horizontal axes, including gesture
/// recognition, but does not have an opinion about how the
/// [TwoDimensionalViewport], which actually displays the children, is
/// constructed.
///
/// It's rare to construct a [TwoDimensionalScrollable] directly. Instead,
/// consider subclassing [TwoDimensionalScrollView], which combines scrolling,
/// viewporting, and a layout model in both dimensions.
///
/// See also:
///
///  * [TwoDimensionalScrollView], an abstract base class for displaying a
///    scrolling array of children in both directions.
///  * [TwoDimensionalViewport], which can be used to customize the child layout
///    model. ¿ ’Ç ¿x¿êÄî/// Creates a widget that scrolls in two dimensions.
///
/// The [horizontalDetails], [verticalDetails], and [viewportBuilder] must not
/// be null.	¿ó	¿û  ¿¶¿µ  ¿À¿⁄  ¿Ó¿˝  ¿¿  ¿/¿5  ¿G!¿M  ¿n5¿t  ¿©0¿Ø  ¿c¿ä¿û¿ü¿¬¿”¿‘¿‰Äê¿`\/// How scrolling gestures should lock to one axis, or allow free movement
/// in both axes. ¿yÄ˚¿cÄ…/// The configuration of the horizontal [Scrollable].
///
/// These [ScrollableDetails] can be used to set the [AxisDirection],
/// [ScrollController], [ScrollPhysics] and more for the horizontal axis. ¿yÄı¿_Ä≈/// The configuration of the vertical [Scrollable].
///
/// These [ScrollableDetails] can be used to set the [AxisDirection],
/// [ScrollController], [ScrollPhysics] and more for the vertical axis. ¿sÅØ¿Åi/// Builds the viewport through which the scrollable content is displayed.
///
/// A [TwoDimensionalViewport] uses two given [ViewportOffset]s to determine
/// which part of its content is actually visible through the viewport.
///
/// See also:
///
///  * [TwoDimensionalViewport], which is a viewport that displays a span of
///    widgets in both dimensions. ¿'Äü¿≥d/// {@macro flutter.widgets.Scrollable.incrementCalculator}
///
/// This value applies in both axes. ¿ÀÅ*¿ËÅ/// {@macro flutter.widgets.scrollable.restorationId}
///
/// Internally, the [TwoDimensionalScrollable] will introduce a
/// [RestorationScope] that will be assigned this value. The two [Scrollable]s
/// within will then be given unique IDs within this scope. ¿˙Äã¿	qe/// {@macro flutter.widgets.scrollable.excludeFromSemantics}
///
/// This value applies to both axes. ¿	äÄí¿
b/// {@macro flutter.widgets.scrollable.dragStartBehavior}
///
/// This value applies in both axes.  ¿
!]¿
M   ¿
!¿
"¿
ÇÑT¿É2/// The state from the closest instance of this class that encloses the given
/// context, or null if none is found.
///
/// Typical usage is as follows:
///
/// ```dart
/// TwoDimensionalScrollableState? scrollable = TwoDimensionalScrollable.maybeOf(context);
/// ```
///
/// Calling this method will create a dependency on the closest
/// [TwoDimensionalScrollable] in the [context]. The internal [Scrollable]s
/// can be accessed through [TwoDimensionalScrollableState.verticalScrollable]
/// and [TwoDimensionalScrollableState.horizontalScrollable].
///
/// Alternatively, [Scrollable.maybeOf] can be used by providing the desired
/// [Axis] to the `axis` parameter.
///
/// See also:
///
/// * [TwoDimensionalScrollable.of], which is similar to this method, but
///   asserts if no [Scrollable] ancestor is found. ¿¿   ¿⁄áó¿ÈÉπ/// The state from the closest instance of this class that encloses the given
/// context.
///
/// Typical usage is as follows:
///
/// ```dart
/// TwoDimensionalScrollableState scrollable = TwoDimensionalScrollable.of(context);
/// ```
///
/// Calling this method will create a dependency on the closest
/// [TwoDimensionalScrollable] in the [context]. The internal [Scrollable]s
/// can be accessed through [TwoDimensionalScrollableState.verticalScrollable]
/// and [TwoDimensionalScrollableState.horizontalScrollable].
///
/// If no [TwoDimensionalScrollable] ancestor is found, then this method will
/// assert in debug mode, and throw an exception in release mode.
///
/// Alternatively, [Scrollable.of] can be used by providing the desired [Axis]
/// to the `axis` parameter.
///
/// See also:
///
/// * [TwoDimensionalScrollable.maybeOf], which is similar to this method,
///   but returns null if no [TwoDimensionalScrollable] ancestor is found. ¿Ï¿˙    ¿uôK¿ºÇ@/// State object for a [TwoDimensionalScrollable] widget.
///
/// To manipulate one of the internal [Scrollable] widget's scroll position, use
/// the object obtained from the [verticalScrollable] or [horizontalScrollable]
/// property.
///
/// To be informed of when a [TwoDimensionalScrollable] widget is scrolling,
/// use a [NotificationListener] to listen for [ScrollNotification]s.
/// Both axes will have the same viewport depth since there is only one
/// viewport, and so should be differentiated by the [Axis] of the
/// [ScrollMetrics] provided by the notification.  ¿-¿  ¿7/¿I  ¿j[¿ã ¿©¿≤¿¬¿≥¿√¿ƒ¿…]¿Í ¿
¿¿#¿¿$¿%¿+ÅÜ¿%ÄŸ/// The [ScrollableState] of the vertical axis.
///
/// Accessible by calling [TwoDimensionalScrollable.of].
///
/// Alternatively, [Scrollable.of] can be used by providing [Axis.vertical]
/// to the `axis` parameter.   ¿µÅê¿≥Ä›/// The [ScrollableState] of the horizontal axis.
///
/// Accessible by calling [TwoDimensionalScrollable.of].
///
/// Alternatively, [Scrollable.of] can be used by providing [Axis.horizontal]
/// to the `axis` parameter.   ¿IÅ#¿Z   ¿I¿J¿pÜ≈¿Å  ¿ë"¿´  ¿p¿q¿%9âÚ¿%L  ¿%R¿%`  ¿%9¿%:¿//Äè¿/@   ¿//¿/0 ¿0íÅK¿0ò  ¿0”r ¿0Ÿ¿0˜ ¿0˛&¿1  ¿1*¿1:   ¿1I<¿1m   ¿1äQ¿1õ  ¿1Æ"¿1Œ  ¿1ä¿1ã ¿2ÇÜ¿2  ¿2AÅæ ¿2G¿2^ ¿2e	¿2l  ¿2t¿2Ñ  ¿2ò¿2®  ¿2∫¿2¡  ¿2–¿2◊  ¿2„¿2Í  ¿2˚¿3  ¿3¿3!  ¿3:¿3A  ¿3W¿3^  ¿3p5¿3v  ¿3å¿3†¿3°¿3Æ¿3¥¿3˝¿3◊¿3√¿3µ¿3∆¿3”¿3‘¿3Ë¿3⁄¿3Î¿3¯¿3˘¿4/¿4   ¿47Y¿4`   ¿47¿48 ¿4îá_¿4ö    ¿4”j¿4Ï    ¿5AÑÏ¿5R  ¿5]
¿5c  ¿5A¿5B¿:1Å¿¿:D  ¿:Q¿:_  ¿:g¿:o  ¿:1¿:2 ¿<$Çë¿<*  ¿<[Å√ ¿<a¿<z ¿<Å	¿<à  ¿<ê¿<†  ¿<¥¿<ƒ  ¿<÷¿<›  ¿<Ï¿<Û  ¿<ˇ¿=  ¿=¿=  ¿=6¿==  ¿=V¿=]  ¿=s¿=z  ¿=å5¿=í  ¿=®¿=º¿=Ω¿= ¿=–¿>¿=ı¿=ﬂ¿=—¿=‚¿=Ô¿=¿>¿=¯¿>	¿>¿>¿>"/¿>=   ¿>V]¿>Å   ¿>V¿>W ¿>∑°û¿>Ω   ¿>¯'¿?  ¿?#¿?)  ¿?7¿??  ¿?Rl¿?k    	¿?¬Ä÷¿?”   ¿?¬¿?√¿@úÅ©¿@°  ¿@µ¿@Ω   ¿BIÅÂ¿BZ  ¿Bj¿B{  ¿BI¿BJ¿D2É‹¿DC  ¿DT¿Df  ¿D2¿D3¿Hà¿H#  ¿H5¿HH  ¿H¿H¿P$Éº¿P5  ¿PD¿PT  ¿P$¿P%¿S‰Åì¿Sı   ¿S‰¿SÂ¿U{â¿Uå  ¿Uó
¿Uù  ¿U{¿U|¿^ìÅ¿¿^¶  ¿^≥¿^¡  ¿^…¿^—  ¿^ì¿^î  ¿ ¯´ÑH¿ ˘d`/// Specifies how to configure the [DragGestureRecognizer]s of a
/// [TwoDimensionalScrollable].  ¿ ˘}Äπ¿ ˙2Ä¨/// This behavior will not allow for any diagonal scrolling.
///
/// Drag gestures in one direction or the other will lock the input axis until
/// the gesture is released. ¿ ˙;Å¿ ˚DÄ˛/// This behavior will only allow diagonal scrolling on a weighted
/// scale per gesture event.
///
/// This means that after initially evaluating the drag gesture, the weighted
/// evaluation (based on [kTouchSlop]) stands until the gesture is released. ¿ ˚VÅ9¿ ¸}Å/// This behavior will only allow diagonal scrolling on a weighted
/// scale that is evaluated throughout a gesture event.
///
/// This means that during each update to the drag gesture, the scrolling
/// axis will be allowed to scroll diagonally if it exceeds the
/// [kTouchSlop]. ¿ ¸î\¿ ¸ÏS/// This behavior allows free movement in any and all directions when
/// dragging.      ¿ ·ÉÅÀ¿ ·ä  ¿ ·¢¿ ·≥    ÑRÄ…Ñ o/// Signature used by [Scrollable] to build the viewport through which the
/// scrollable content is displayed.  ÑÏÑ˙  ÖÖ   ÖÅÖ£}/// Signature used by [TwoDimensionalScrollable] to build the viewport through
/// which the scrollable content is displayed.  Ö”Ö·  ÖÈÖ˘  Ü
!Ü       â <ÄÜÄ§Ä•Ä∫Ä÷Ä◊ÅÅ)ÅRÅ{Å£Å§ÅπÅ“ÅÚÇÇ2ÇMÇsÇíÇ∂Ç‘ÇıÉÉ2ÉTÉuÉòÉ∑ÉÀÉ„É‰ÑÑÑ3ÑQÑRÑùÑ¬ÖÖÖlÖõÜ.Ü/ÜÜ®Ü¨Ü˜áEáâáçáﬁà.àyàëàïà·â0âBâFâáâãâÿä'äjä¥ä∏ããBãíãŸã›ãÎãÔå8åhå∏å’ç$ç=çãç©ç¯ééYéòé¬éÁéÌè9èNè]èäèüè±è‘èÚêê6êlêÑêùêƒë
ëëFëxë~ëÃííeí≤ììì%ìMìbìáìàì¿îî!î'îuî≈ïïWï¶ïÔñññiñ£ñ©ñπñøó
ó2óGómónó£ó◊ó›ò)òTòZò®ò—ò◊ôô]ôîôöôÁö7öàö—õ!õpõíõòõ®õÆõˇúMúüú¥ú‘ú’ù"ù(ùyù∏ùæùŒù‘ûûmû±û⁄û€üühüµüÀü—††n†•†´†„°1°j°°∑°∏°˙¢G¢d¢j¢∫££P£e£k£{£Å£“£Ê§	§
§R§X§®§Æ§˙•E•ë•ó•„¶*¶0¶@¶F¶ã¶Âßßß^ßùß€ß·®)®u®ø®ﬁ®‰©/©}©Æ©¥©¸™™™™g™â™è™§™—™“´´[´a´∞´Ì´Û¨>¨ä¨ê¨†¨¶¨Û≠≠≠9≠:≠o≠u≠∫ÆÆGÆ_ÆáÆàÆæÆƒÆÁÆÌØEØòØﬁØ˘Ø˙∞.∞4∞]∞î∞ï∞°∞◊∞ÿ∞‰±)±T±•±Ò≤5≤9≤:≤ä≤≥≤π≤‹≤‚≤≥1≥;≥A≥ç≥‘¥ ¥F¥L¥ö¥Íµ7µTµZµ¶µˆ∂∂∂'∂-∂s∂°∂Î∑2∑d∑…∑Á∏A∏î∏–ππ&π.πRπßπ≠πæπ¬π√∫∫"∫(∫K∫Q∫_∫ö∫§∫™∫ˆª=ªâªØªµººSºùº£ºÔΩ?ΩZΩ`Ω¨ΩÊΩÏΩ¸ææRæÄæƒøøøDø|øîøÂ¿ @¿ @¿ @0¿ @l¿ @±¿ A¿ AX¿ Aè¿ Aµ¿ Aœ¿ A‹¿ B¿ BW¿ BÉ¿ Bê¿ Bú¿ B§¿ B∑¿ B¡¿ Bﬁ¿ B‚¿ B„¿ C4¿ Cr¿ Cx¿ C∆¿ D¿ Dg¿ Dm¿ D∫¿ E	¿ ER¿ EX¿ E¶¿ EÔ¿ F9¿ F\¿ Fb¿ F±¿ FÕ¿ G&¿ GÄ¿ Gù¿ G˜¿ H9¿ HA¿ Hl¿ H∂¿ Hº¿ HŒ¿ H“¿ H”¿ I"¿ I?¿ Id¿ IÄ¿ Iú¿ I√¿ I‚¿ J>¿ JE¿ J~¿ J¿ J–¿ K¿ Km¿ KΩ¿ KË¿ L(¿ LN¿ Lç¿ LÆ¿ L„¿ M¿ M&¿ MB¿ MX¿ MÇ¿ M≤¿ Mº¿ MΩ¿ N
¿ N.¿ N^¿ Nd¿ Ne¿ Nù¿ N¿¿ N∆¿ NÂ¿ O¿ O¿ OR¿ OV¿ OX¿ OY¿ O™¿ OÎ¿ P¿ P7¿ PU¿ Pq¿ Pã¿ Pë¿ Pí¿ P∂¿ P◊¿ Pÿ¿ P‰¿ Q¿ Q;¿ Q?¿ QA¿ QB¿ Qn¿ Qr¿ Qº¿ QÁ¿ QÎ¿ R0¿ R}¿ RÅ¿ R“¿ S¿ Sg¿ SÜ¿ Sá¿ Sî¿ Sï¿ SŸ¿ Sﬂ¿ T-¿ Tz¿ T»¿ Tı¿ U¿ U¿ UP¿ UÇ¿ Uù¿ Uû¿ UÌ¿ V/¿ V5¿ VÜ¿ VΩ¿ V‡¿ V˝¿ W¿ WG¿ Wd¿ Wê¿ WØ¿ W€¿ W˚¿ X&¿ X,¿ X0¿ X1¿ Xó¿ Xò¿ X§¿ Xﬂ¿ X‡¿ XÏ¿ Y¿ Y¿ Y¿ YQ¿ Yr¿ Ys¿ Y¿ YŒ¿ Yœ¿ Y€¿ Z	¿ Z
¿ Z¿ ZK¿ Zü¿ Z†¿ Z∆¿ Zı¿ [*¿ [+¿ [s¿ [é¿ [›¿ \¿ \8¿ \l¿ \ú¿ \Ò¿ \˜¿ ]*¿ ]I¿ ]¿ ]Ã¿ ^¿ ^N¿ ^|¿ ^Ç¿ ^É¿ ^‚¿ _¿ _2¿ _6¿ _7¿ _C¿ _å¿ _ ¿ _È¿ `¿ `v¿ `|¿ `Ä¿ `Å¿ `ç¿ `∞¿ `Á¿ a¿ a]¿ a•¿ a‚¿ aÊ¿ aÁ¿ aÛ¿ b¿ b-¿ bc¿ bi¿ bÄ¿ bÑ¿ bÖ¿ bë¿ b≤¿ bˇ¿ ci¿ cÄ¿ c£¿ cß¿ c®¿ c›¿ dA¿ d´¿ d¥¿ dÙ¿ e	¿ e¿ e8¿ e_¿ eó¿ eò¿ eË¿ eÏ¿ eÌ¿ e˘¿ f(¿ fN¿ fO¿ fÑ¿ fÆ¿ f˚¿ g¿ gS¿ g~¿ g≥¿ g·¿ h¿ h¿ hN¿ h~¿ hß¿ hÚ¿ i¿ iK¿ iU¿ i]¿ iñ¿ i…¿ iœ¿ i–¿ i¸¿ j¿ j¿ j¿ j ¿ j,¿ j?¿ jd¿ jè¿ jú¿ jœ¿ j˚¿ k¿ k¿ k¿ k@¿ kU¿ kY¿ kZ¿ ki¿ kj¿ kü¿ k†¿ k¨¿ kπ¿ kÙ¿ l(¿ lr¿ lx¿ l|¿ l}¿ l´¿ l¨¿ m¿ mF¿ mG¿ mú¿ n¿ n'¿ n(¿ n>¿ nZ¿ n[¿ ng¿ nt¿ nî¿ nÊ¿ nÙ¿ n˙¿ o¿ oR¿ o†¿ oÍ¿ p(¿ pC¿ pP¿ pm¿ pâ¿ pÀ¿ q;¿ qú¿ q’¿ qÓ¿ r¿ rJ¿ r{¿ r¶¿ r◊¿ s¿ s[¿ sù¿ s˘¿ t:¿ t{¿ tæ¿ tœ¿ tﬁ¿ tÎ¿ u	¿ uK¿ uø¿ v"¿ v]¿ vv¿ v£¿ v“¿ w¿ w.¿ w_¿ w°¿ w„¿ x%¿ xÅ¿ x¬¿ y¿ yF¿ yW¿ yf¿ ys¿ y{¿ yÅ¿ yõ¿ y¡¿ yı¿ zM¿ zS¿ zW¿ zX¿ zd¿ zq¿ zó¿ z¿¿ zŒ¿ z‘¿ zˆ¿ {*¿ {§¿ {’¿ {€¿ {ﬂ¿ {‡¿ {Ù¿ {ı¿ |¿ |#¿ |$¿ |V¿ |q¿ |å¿ |µ¿ |π¿ |∫¿ |Ó¿ }8¿ }â¿ }≤¿ }Õ¿ }ˇ¿ ~¿ ~5¿ ~9¿ ~:¿ ~p¿ ~ø¿ ~Î¿ ¿ ¿ ¿ <¿ ã¿ ∑¿ –¿ Î¿ Ô¿ ¿ Ä¿ ÄC¿ Äë¿ Ä⁄¿ ÄÌ¿ Ä˚¿ Å¿ Å1¿ ÅÄ¿ Å¨¿ Å¡¿ Å÷¿ ÅÒ¿ Ç¿ Ç¿ Ç¿ Ç)¿ Ç;¿ Ç?¿ Ç@¿ ÇX¿ Çj¿ Çn¿ Ço¿ ÇÅ¿ ÇÇ¿ Ç“¿ É¿ ÉI¿ É^¿ É°¿ É¡¿ É»¿ ÉÃ¿ ÉÕ¿ Ñ¿ Ñe¿ Ñs¿ Ñ±¿ Ñ»¿ Ö"¿ Öy¿ Ö∏¿ Ü¿ ÜV¿ Ü§¿ ÜÒ¿ á ¿ á-¿ á.¿ áI¿ áe¿ á~¿ áü¿ á¡¿ á€¿ áÙ¿ à¿ à7¿ à=¿ à>¿ àw¿ àä¿ àê¿ à¢¿ à¶¿ àß¿ à·¿ â¿ âj¿ âz¿ âÇ¿ âæ¿ ä¿ äg¿ ä™¿ ã¿ ã¿ ãJ¿ ãk¿ ã√¿ ã…¿ ãÕ¿ ãŒ¿ å ¿ å)¿ åy¿ åÀ¿ ç¿ ç1¿ ç7¿ ç;¿ ç<¿ çé¿ ç±¿ é!¿ éR¿ éí¿ éö¿ é†¿ é≤¿ é∂¿ é∑¿ éÛ¿ è,¿ èS¿ èÅ¿ è¥¿ èª¿ èº¿ èÊ¿ èı¿ ê=¿ êL¿ êS¿ êW¿ êX¿ êi¿ êj¿ êv¿ êù¿ êº¿ ë¿ ëa¿ ëh¿ ëê¿ ëª¿ ë¬¿ í ¿ íd¿ íä¿ í¢¿ íº¿ í”¿ ì¿ ì'¿ ìK¿ ìt¿ ì†¿ ì›¿ ì˘¿ î7¿ îY¿ î¿ î≠¿ îÌ¿ î¸¿ ï	¿ ï¿ ï¿ ï$¿ ï%¿ ïM¿ ïç¿ ï«¿ ïË¿ ñ¿ ñ*¿ ñn¿ ñß¿ ñ¿¿ ñ ¿ ñ”¿ ñŸ¿ ñ⁄¿ ó¿ ó¿ óJ¿ óô¿ ó∂¿ ó‚¿ ó˜¿ ò¿ ò1¿ òH¿ òQ¿ òW¿ òX¿ òk¿ òo¿ òp¿ ò|¿ ò¡¿ òÏ¿ ô<¿ ôì¿ ôó¿ ôô¿ ôö¿ ôÕ¿ ô—¿ ö¿ öP¿ öã¿ ö±¿ ö ¿ öÊ¿ õ¿ õ¿ õ"¿ õ#¿ õB¿ õc¿ õy¿ õü¿ õ†¿ õ¨¿ ú¿ ú¿ ú¿ ú[¿ úú¿ úù¿ ú©¿ úæ¿ ú’¿ ù¿ ù0¿ ùQ¿ ùX¿ ù\¿ ù]¿ ùi¿ ù©¿ ùœ¿ û ¿ û5¿ û;¿ û?¿ û@¿ ûL¿ û_¿ ûÅ¿ ûñ¿ ûö¿ ûõ¿ ûß¿ ûŒ¿ ûÌ¿ ü¿ ü4¿ üO¿ üV¿ üZ¿ ü\¿ ü]¿ ü¨¿ ü◊¿ ü€¿ †+¿ †|¿ †«¿ †◊¿ °7¿ °a¿ °z¿ °ü¿ °º¿ ¢,¿ ¢^¿ ¢b¿ ¢c¿ ¢£¿ ¢÷¿ ¢◊¿ £¿ £P¿ £Q¿ £p¿ £†¿ £«¿ £Û¿ §¿ §¿ §o¿ §ú¿ §ù¿ §…¿ §Â¿ •¿ •*¿ •8¿ •>¿ •s¿ •ä¿ •º¿ •¿¿ •¡¿ ¶¿ ¶K¿ ¶l¿ ¶é¿ ¶ú¿ ¶¢¿ ¶≈¿ ß¿ ß4¿ ßD¿ ßL¿ ßr¿ ßã¿ ßì¿ ßó¿ ßò¿ ß€¿ ß˝¿ ®¿ ®O¿ ®q¿ ®w¿ ®«¿ ©¿ ©c¿ ©¥¿ ©≈¿ ©À¿ ™¿ ™i¿ ™∫¿ ™˘¿ ´U¿ ´Ø¿ ´∞¿ ´º¿ ´‹¿ ¨¿ ¨é¿ ¨ˇ¿ ≠!¿ ≠%¿ ≠&¿ ≠2¿ ≠v¿ ≠•¿ ≠“¿ ≠ˇ¿ Æ*¿ ÆT¿ ÆÇ¿ ÆÜ¿ Æá¿ Æì¿ Æ·¿ Ø?¿ Øl¿ Øƒ¿ Ø ¿ ∞¿ ∞E¿ ∞°¿ ±¿ ±[¿ ±h¿ ±∆¿ ≤:¿ ≤à¿ ≤é¿ ≤Ÿ¿ ≤⁄¿ ≥,¿ ≥}¿ ≥è¿ ≥º¿ ≥‚¿ ≥˜¿ ≥˝¿ ¥%¿ ¥r¿ ¥ó¿ ¥ø¿ ¥«¿ ¥Õ¿ ¥‡¿ ¥‰¿ ¥Â¿ µ%¿ µo¿ µ≥¿ µ‹¿ ∂-¿ ∂z¿ ∂ ¿ ∑¿ ∑T¿ ∑É¿ ∑ã¿ ∑‡¿ ∏ ¿ ∏¿ ∏¿ ∏O¿ ∏™¿ ∏Æ¿ ∏Ø¿ ∏Á¿ π!¿ π'¿ πv¿ π¨¿ π˙¿ ∫<¿ ∫§¿ ∫Â¿ ª/¿ ªg¿ ª’¿ º-¿ ºR¿ ºî¿ ºˆ¿ Ω6¿ ΩN¿ Ωè¿ Ωò¿ æ¿ æ¿ æv¿ æÃ¿ æÒ¿ ø/¿ øè¿ øÕ¿ øÂ¿ ¿"¿ ¿+¿ ¿ó¿ ¿ù¿ ¿°¿ ¿¢¿ ¿Æ¿ ¿Ò¿ ¡¿ ¡]¿ ¡±¿ ¡›¿ ¬	¿ ¬¿ ¬"¿ ¬&¿ ¬'¿ ¬3¿ ¬x¿ ¬Œ¿ √¿ √:¿ √M¿ √Q¿ √R¿ √^¿ √∏¿ ƒ	¿ ƒV¿ ƒ•¿ ƒ‰¿ ≈¿ ≈2¿ ≈U¿ ≈\¿ ≈Ñ¿ ≈§¿ ≈™¿ ≈Ω¿ ≈¡¿ ≈¬¿ ≈Œ¿ ∆.¿ ∆Ç¿ ∆œ¿ «¿ «]¿ «Ö¿ «´¿ «Œ¿ «’¿ «˝¿ »¿ »#¿ »6¿ »:¿ »;¿ »_¿ »Ä¿ »û¿ »æ¿ »“¿ …¿ …=¿ …Ä¿ …ç¿ ……¿ …¸¿  A¿  G¿  u¿  É¿  â¿  ›¿ À%¿ Àï¿ Àˇ¿ Ã"¿ Ã?¿ Ãá¿ ÃŸ¿ Õ-¿ Õ?¿ ÕI¿ Õ{¿ ÕÃ¿ Õﬁ¿ ÕË¿ Œ¿ Œ_¿ Œi¿ Œy¿ Œô¿ Œ€¿ œ&¿ œ8¿ œB¿ œm¿ œ∑¿ œ…¿ œ”¿ œ˝¿ –F¿ –P¿ –`¿ –¿ –«¿ —¿ —m¿ —¿ —â¿ —ª¿ “¿ “¿ “(¿ “T¿ “ü¿ “©¿ “π¿ “ÿ¿ ”¿ ”e¿ ”w¿ ”Å¿ ”¨¿ ”ˆ¿ ‘¿ ‘¿ ‘<¿ ‘Ö¿ ‘è¿ ‘ü¿ ‘•¿ ‘©¿ ‘™¿ ‘Ê¿ ’0¿ ’t¿ ’¿¿ ’È¿ ’Ì¿ ’Ó¿ ÷,¿ ÷ß¿ ÷´¿ ÷¨¿ ÷∏¿ ◊¿ ◊1¿ ◊`¿ ◊Ø¿ ◊◊¿ ÿ¿ ÿQ¿ ÿy¿ ÿ≤¿ ÿÓ¿ Ÿ¿ Ÿe¿ Ÿ≤¿ Ÿ◊¿ ⁄¿ ⁄Q¿ ⁄z¿ ⁄§¿ ⁄Ò¿ €@¿ €F¿ €â¿ €ç¿ €é¿ €ö¿ €Õ¿ ‹¿ ‹X¿ ‹å¿ ‹˙¿ ›3¿ ›v¿ ›Í¿ ﬁS¿ ﬁY¿ ﬁ¨¿ ﬁﬁ¿ ﬂH¿ ﬂÅ¿ ﬂƒ¿ ‡4¿ ‡ô¿ ‡ü¿ ‡£¿ ‡§¿ ‡∞¿ ‡√¿ ‡Ú¿ ·¿ ·C¿ ·g¿ ·|¿ ·Ä¿ ·Ç¿ ·É¿ ·≈¿ ·¿ ‚¿ ‚F¿ ‚a¿ ‚õ¿ ‚∏¿ ‚Ú¿ „¿ „I¿ „M¿ „O¿ „P¿ „í¿ „–¿ „‘¿ ‰¿ ‰]¿ ‰§¿ ‰œ¿ Â¿ Â¿ ÂV¿ Â§¿ ÂÙ¿ Ê<¿ ÊU¿ Êî¿ ÊØ¿ Êæ¿ Ê⁄¿ Á¿ Á*¿ Á;¿ ÁÅ¿ ÁÇ¿ Á£¿ Á»¿ ÁÈ¿ ÁÍ¿ Áˆ¿ Ë:¿ Ë]¿ Ëw¿ Ë≠¿ Ë€¿ Ë‚¿ ËÊ¿ ËÁ¿ ËÛ¿ ÈJ¿ È[¿ Èì¿ ÈØ¿ È‡¿ È‰¿ ÈÊ¿ ÈÁ¿ Í¿ Í8¿ Í^¿ Íà¿ ÍÆ¿ Íƒ¿ Í·¿ Î¿ ÎK¿ Îa¿ Îï¿ Îô¿ Îö¿ Îﬂ¿ Ï¿ Ï'¿ ÏN¿ Ïl¿ Ïz¿ ÏÄ¿ Ï∏¿ Ïœ¿ Ì¿ Ì$¿ Ì(¿ Ì)¿ Ì]¿ Ìõ¿ Ìª¿ ÌÊ¿ Ó¿ Ó ¿ Ó&¿ ÓK¿ Ók¿ Óo¿ Óp¿ Ó¶¿ Ó¬¿ ÓÈ¿ Ô¿ Ô¿ Ô$¿ ÔE¿ Ôe¿ Ôi¿ Ôj¿ Ôv¿ ÔΩ¿ ÔÔ¿ ¿ 8¿ E¿ ¿ ≠¿ Â¿ Ò¿ ÒP¿ ÒV¿ ÒZ¿ Ò[¿ Òx¿ Òy¿ ÒÖ¿ Ò˘¿ ÚU¿ Ún¿ Ú©¿ Ú∑¿ ÚΩ¿ Úæ¿ Ú¸¿ Û¿ ÛB¿ Û\¿ Û]¿ Ûy¿ Û¿¿ Û¸¿ Ù.¿ Ùp¿ Ù±¿ ÙŒ¿ Ù›¿ ı¿ ıH¿ ıR¿ ıo¿ ıw¿ ı}¿ ı©¿ ıÛ¿ ˆF¿ ˆJ¿ ˆK¿ ˆW¿ ˆq¿ ˆç¿ ˆ§¿ ˆ®¿ ˆ™¿ ˆ´¿ ˆ˝¿ ˜¿ ˜L¿ ˜X¿ ˜Ä¿ ˜Å¿ ˜ç¿ ˜∑¿ ˜Œ¿ ˜“¿ ˜”¿ ˜ﬂ¿ ¯¿ ¯#¿ ¯'¿ ¯(¿ ¯4¿ ¯O¿ ¯a¿ ¯e¿ ¯f¿ ¯r¿ ¯ó¿ ¯ô¿ ¯ö¿ ¯™¿ ¯´¿ ¯Ï¿ ˘¿ ˘_¿ ˘{¿ ˘∫¿ ˘¿¿ ˙¿ ˙0¿ ˙8¿ ˙9¿ ˙~¿ ˙ù¿ ˙£¿ ˙Û¿ ˚B¿ ˚S¿ ˚T¿ ˚ô¿ ˚”¿ ˚Ÿ¿ ¸%¿ ¸g¿ ¸{¿ ¸ë¿ ¸í¿ ¸⁄¿ ¸Í¿ ¸Ú¿ ¸Ù¿ ¸ı¿ ˝=¿ ˝á¿ ˝û¿ ˝¢¿ ˝Û¿ ˛:¿ ˛v¿ ˛Ω¿ ˛Œ¿ ˛“¿ ˇ¿ ˇl¿ ˇ§¿ ˇ®¿ ˇ∂¿ ˇ∫¿ ¿ <¿ ç¿ õ¿ ”¿
¿¿a¿p¿ì¿¢¿«¿Í¿¿+¿C¿j¿•¿€¿·¿‚¿/¿C¿v¿w¿Ø¿µ¿˝¿I¿v¿w¿≠¿≥¿˚¿E¿p¿q¿æ¿ƒ¿¿]¿c¿s¿y¿»¿Ì¿$¿%¿c¿i¿ê¿»¿…¿¿¿I¿ö¿ÿ¿˜¿¯¿	7¿	=¿	d¿	á¿	à¿	ƒ¿	 ¿	Ò¿
¿
¿
+¿
¿
Ä¿
–¿
˘¿
ˇ¿"¿(¿6¿ì¿ù¿£¿Â¿3¿Ñ¿ƒ¿ ¿¿?¿E¿U¿[¿ß¿›¿%¿¶¿”¿◊¿ÿ¿(¿7¿=¿`¿f¿t¿À¿’¿€¿¿k¿º¿¸¿¿R¿ñ¿ú¿Ì¿¿¿"¿(¿u¿¬¿¿Q¿a¿Ü¿æ¿÷¿'¿f¿s¿è¿‚¿4¿É¿”¿˘¿¿ ¿,¿4¿G¿Q¿n¿r¿t¿u¿Ø¿≥¿¿T¿b¿f¿≥¿˘¿A¿Ñ¿∂¿¿5¿h¿«¿(¿)¿[¿a¿ú¿¢¿¿¿:¿x¿Æ¿≤¿≥¿Á¿Ì¿(¿.¿~¿ù¿ ¿
¿B¿F¿G¿S¿h¿ù¿’¿€¿¿L¿R¿i¿m¿n¿z¿∑¿›¿¿ ¿0¿Ö¿ø¿ ¿ 0¿ e¿ †¿ –¿ ¸¿!:¿!É¿!†¿!’¿"¿"¿"¿"¿"0¿"â¿"≈¿#¿#6¿#n¿#´¿#›¿$¿$K¿$î¿$±¿$Ë¿%$¿%,¿%2¿%6¿%7¿%C¿%j¿%v¿%ƒ¿&¿&¿&¿&q¿&Ω¿&ƒ¿&≈¿&Ò¿'¿'B¿'l¿'•¿'€¿(¿(7¿(q¿(¨¿(»¿)¿)<¿)|¿)±¿)Ï¿*=¿*i¿*ô¿*ÿ¿+¿+E¿+|¿+º¿+˝¿,¿,Z¿,ô¿,ﬂ¿-¿-W¿-Æ¿.¿.¿."¿.,¿.4¿.;¿.<¿.Å¿.∫¿.ª¿.Ê¿/¿/!¿/(¿/,¿/-¿/9¿/L¿/x¿/¶¿/ª¿/ø¿/¡¿/¬¿/¯¿02¿0o¿0í¿0—¿0˙¿1&¿1@¿1F¿1G¿1á¿1à¿1î¿1‹¿1ﬁ¿1ﬂ¿2¿2?¿2a¿2p¿2î¿2∂¿2Ã¿2ﬂ¿2˜¿3¿36¿3S¿3l¿3ß¿4 ¿4¿44¿45¿4A¿4ë¿4ì¿4î¿4—¿5>¿5?¿5K¿5k¿5è¿5µ¿5¸¿6¿6<¿6L¿6{¿6Ø¿6’¿6Í¿75¿7Å¿7œ¿8¿8k¿8π¿8˚¿9¿9:¿9f¿9†¿9˛¿:
¿:¿:$¿:*¿:.¿:/¿:;¿:w¿:∞¿:◊¿;¿;.¿;5¿;{¿;°¿;Ó¿;Ú¿;Ù¿;ı¿<$¿<Y¿<}¿<å¿<∞¿<“¿<Ë¿<˚¿=¿=2¿=R¿=o¿=à¿=√¿>¿> ¿>S¿>T¿>`¿>¥¿>∂¿>∑¿>ˆ¿?!¿?5¿?O¿?P¿?ø¿?¿¿?Ã¿?Ì¿@¿@r¿@ï¿@ô¿@ö¿@∆¿@Í¿A#¿At¿A§¿A…¿B¿B#¿B<¿BB¿BF¿BG¿BS¿BÖ¿B©¿Bœ¿Bﬁ¿C¿CA¿Cg¿C≤¿CÃ¿D¿D¿D+¿D/¿D0¿D<¿Dp¿Dù¿D¡¿DÁ¿Dˆ¿E%¿EY¿EÉ¿E∏¿E÷¿EÎ¿F¿FQ¿Fq¿F†¿FÕ¿F·¿Fˇ¿G,¿Gf¿Gz¿GÑ¿G™¿G‡¿GÊ¿H¿H¿H¿H¿HR¿Hó¿H«¿HÛ¿I¿IG¿Is¿Iz¿I{¿I¬¿IÚ¿J¿JD¿Jr¿Jû¿J•¿J…¿JÔ¿K%¿K]¿Km¿Kì¿KØ¿KÚ¿L*¿L:¿Ln¿L£¿Lÿ¿M	¿M8¿Md¿M†¿M—¿N ¿N7¿NA¿NG¿Na¿Nr¿Nè¿N“¿O
¿O&¿OE¿O}¿Oç¿Oß¿Oƒ¿P¿P¿P¿P!¿P"¿P.¿P^¿Py¿Pê¿PÀ¿Q¿QE¿QÅ¿QΩ¿Qƒ¿R¿RA¿R}¿RÑ¿R®¿RŒ¿R›¿S¿S@¿Sf¿S¶¿S¨¿S›¿S·¿S‚¿SÓ¿T¿T&¿T=¿Ta¿Tá¿Tñ¿T≈¿T˘¿U¿UO¿UU¿Ut¿Ux¿Uy¿UÖ¿U•¿U…¿UÔ¿VA¿VU¿Vv¿VÜ¿Vµ¿VÈ¿W¿W$¿Ws¿W¿¿X¿XY¿X¿X¡¿Y¿Yw¿Yß¿Y¿¿YÌ¿Z¿ZM¿Zx¿Z©¿ZÎ¿[-¿[o¿[À¿\¿\N¿\_¿\n¿\{¿\Õ¿]¿]]¿]|¿]ú¿]»¿^¿^`¿^l¿^v¿^Ü¿^å¿^ê¿^ë¿^ù¿^Ÿ¿_¿_9¿_g¿_ê¿_ó¿_›¿`¿`P¿`T¿`V    
Scrollable_ScrollableScopeScrollableState_ScrollableSelectionHandler _ScrollableSelectionHandlerState%_ScrollableSelectionContainerDelegate_getDeltaToScrollOrigin_ScrollSemantics_RenderScrollSemantics_RestorableScrollOffsetDiagonalDragBehaviorTwoDimensionalScrollableTwoDimensionalScrollableState_TwoDimensionalScrollableScope_VerticalOuterDimension_VerticalOuterDimensionState_HorizontalInnerDimension_HorizontalInnerDimensionState ’