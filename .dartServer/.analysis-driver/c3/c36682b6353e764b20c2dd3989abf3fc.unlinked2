ÄÅtypecopyWithlerppadded
shrinkWrap
brightnessapplyElevationOverlayColorcupertinoOverrideTheme
extensions	extensioninputDecorationThemematerialTapTargetSizepageTransitionsThemeplatformscrollbarThemesplashFactoryuseMaterial3visualDensitybottomAppBarColor_bottomAppBarColorcanvasColor	cardColorcolorSchemedialogBackgroundColordisabledColordividerColor
focusColorhighlightColor	hintColor
hoverColorindicatorColorprimaryColorprimaryColorDarkprimaryColorLightscaffoldBackgroundColorsecondaryHeaderColorselectedRowColor_selectedRowColorshadowColorsplashColorunselectedWidgetColor	iconThemeprimaryIconThemeprimaryTextTheme	textTheme
typographyactionIconThemeappBarTheme
badgeThemebannerThemebottomAppBarThemebottomNavigationBarThemebottomSheetThemebuttonBarThemebuttonTheme	cardThemecheckboxTheme	chipThemedataTableThemedatePickerThemedialogThemedividerThemedrawerThemedropdownMenuThemeelevatedButtonThemeexpansionTileThemefilledButtonThemefloatingActionButtonThemeiconButtonThemelistTileThememenuBarThememenuButtonTheme	menuThemenavigationBarThemenavigationDrawerThemenavigationRailThemeoutlinedButtonThemepopupMenuThemeprogressIndicatorTheme
radioThemesearchBarThemesearchViewThemesegmentedButtonThemesliderThemesnackBarThemeswitchThemetabBarThemetextButtonThemetextSelectionThemetimePickerThemetoggleButtonsThemetooltipThemeandroidOverscrollIndicator
errorColor_errorColorbackgroundColor_backgroundColortoggleableActiveColor_toggleableActiveColor_localizedThemeDataCacheSize_localizedThemeDataCachelocalizeestimateBrightnessForColor_lerpThemeExtensions_themeExtensionIterableToMap==hashCodedebugFillProperties_materialTheme_cupertinoOverrideThemeprimaryContrastingColorresolveFrom	baseThemelocalTextGeometry_cache_maximumSizeputIfAbsentminimumDensitymaximumDensitystandardcomfortablecompactadaptivePlatformDensitydefaultDensityForPlatform
horizontalverticalbaseSizeAdjustmenteffectiveConstraintstoStringShortThemeExtension_kLightThemeHighlightColor_kLightThemeSplashColor_kDarkThemeHighlightColor_kDarkThemeSplashColorMaterialTapTargetSize	ThemeDataMaterialBasedCupertinoThemeData_IdentityThemeDataCacheKey
_FifoCacheVisualDensity_colorSchemeLightM3_colorSchemeDarkM3ÅØColor
lerpDoubleInteractiveInkFeatureFactory
BrightnessObjectdoublematerialTapTargetSizeFloatingActionButtonMaterialButtonOutlinedButton
TextButtonElevatedButton
IconButtonshowTimePickerSnackBarChipRawChip	InputChip
ChoiceChip
FilterChip
ActionChipRadioSwitchCheckboxThemeMaterialAppofBuildContextBuilder	ContainerColorSchemeColorsblue	secondaryAppBarprimaryText	TextTheme
bodyMedium	TextStyle	immutableDiagnosticablecolorSchemeSeedfromSeedcopyWithprimarySwatchlightdarkfromboolNoDefaultCupertinoThemeDataIterabledynamicInputDecorationThemePageTransitionsThemeTargetPlatformScrollbarThemeDataMaterialColorStringListIconThemeData
TypographyActionIconThemeDataAppBarThemeBadgeThemeDataMaterialBannerThemeDataBottomAppBarThemeBottomNavigationBarThemeDataBottomSheetThemeDataButtonBarThemeDataButtonThemeData	CardThemeCheckboxThemeDataChipThemeDataDataTableThemeDataDatePickerThemeDataDialogThemeDividerThemeDataDrawerThemeDataDropdownMenuThemeDataElevatedButtonThemeDataExpansionTileThemeDataFilledButtonThemeDataFloatingActionButtonThemeDataIconButtonThemeDataListTileThemeDataMenuBarThemeDataMenuButtonThemeDataMenuThemeDataNavigationBarThemeDataNavigationDrawerThemeDataNavigationRailThemeDataOutlinedButtonThemeDataPopupMenuThemeDataProgressIndicatorThemeDataRadioThemeDataSearchBarThemeDataSearchViewThemeDataSegmentedButtonThemeDataSliderThemeDataSnackBarThemeDataSwitchThemeDataTabBarThemeTextButtonThemeDataTextSelectionThemeDataTimePickerThemeDataToggleButtonsThemeDataTooltipThemeData
DeprecatedAndroidOverscrollIndicator	noDefaultdefaultTargetPlatformandroidfuchsiaiOSpaddedlinuxmacOSwindows
shrinkWrapdefaultDensityForPlatformkIsWeb
InkSparklesplashFactory	InkRipple	InkSplash
brightness	seedColorsurface	onSurface	onPrimary
backgroundoutlineerrorgreyblack
tealAccentwhitewithOpacity
fromSwatchaccentColor	cardColorbackgroundColor
errorColorredwhite70black54white60colorSchemebuttonColordisabledColor
focusColor
hoverColorhighlightColorsplashColorwhite38black38material2021platformmaterial2014
fontFamilyapplyfontFamilyFallbackpackagemergecolorkDefaultIconLightColorkDefaultIconDarkColorrawapplyElevationOverlayColorcupertinoOverrideTheme
extensionsinputDecorationThemepageTransitionsThemescrollbarThemeuseMaterial3visualDensitycanvasColordialogBackgroundColordividerColor	hintColorindicatorColorprimaryColorprimaryColorDarkprimaryColorLightscaffoldBackgroundColorsecondaryHeaderColorshadowColorunselectedWidgetColor	iconThemeprimaryTextTheme	textTheme
typographyprimaryIconThemeactionIconThemeappBarTheme
badgeThemebannerThemebottomAppBarThemebottomNavigationBarThemebottomSheetThemebuttonBarThemebuttonTheme	cardThemecheckboxTheme	chipThemedataTableThemedatePickerThemedialogThemedividerThemedrawerThemedropdownMenuThemeelevatedButtonThemeexpansionTileThemefilledButtonThemefloatingActionButtonThemeiconButtonThemelistTileThememenuBarThememenuButtonTheme	menuThemenavigationBarThemenavigationDrawerThemenavigationRailThemeoutlinedButtonThemepopupMenuThemeprogressIndicatorTheme
radioThemesearchBarThemesearchViewThemesegmentedButtonThemesliderThemesnackBarThemeswitchThemetabBarThemetextButtonThemetextSelectionThemetimePickerThemetoggleButtonsThemetooltipThemeandroidOverscrollIndicatortoggleableActiveColorselectedRowColorbottomAppBarColorlocalizeMaterialsurfaceTintColor	elevationElevationOverlayapplyOverlayCupertinoThemeDataCupertinoThemenewMapInputDecorationInputDecorator	TextFieldTextFormFieldapplyDefaultsMaterialPageRoutebuildTransitionsPageTransitionsBuilder"debugDefaultTargetPlatformOverride	ScrollbarInkWellInkResponseBadgeBottomAppBarBottomSheetFilledButtontonalextendedfilledfilledTonaloutlinedSegmentedButtonToggleButtonsCardCheckboxListTileshowDatePickershowDateRangePickerDatePickerDialogDateRangePickerDialogInputDatePickerFormFieldAlertDialogDialog
fullscreenDividerVerticalDividerListTile
MenuAnchorDropdownMenuMenuBarNavigationBarBottomNavigationBarNavigationDrawerDrawerNavigationRailCircularProgressIndicatorLinearProgressIndicatorRadioListTile	SearchBarSearchAnchorSliderRangeSliderSwitchListTileTabBarTimePickerDialogSliverAppBarmediumlargeMaterialScrollBehaviorminimumDensitymaximumDensitystandardPopupMenuDivider	DataTable
BorderSidecreateBorderSideScaffoldPaginatedDataTableBackButtonIconCloseButtonIconDrawerButtonIconEndDrawerButtonIconMaterialBanner	ButtonBarDropdownButton	ChipThemeExpansionTile	MenuStyleSubmenuButtonMenuItemButtonProgressIndicatorSliderThemeTooltipTooltipThemeglowScrollBehaviorbuildOverscrollIndicatorStretchingOverscrollIndicatorGlowingOverscrollIndicatorintinheritputIfAbsentcomputeLuminancemapidMapEntry
extensionAlerp
addEntriesentrieswherecontainsKeyentrykeyunmodifiabletype	identicaloverrideruntimeType	mapEqualskeysvalueshashAllvoidDiagnosticPropertiesBuilderdebugFillPropertiesfallbackaddDiagnosticsPropertylevelDiagnosticLeveldebugdefaultValueIterablePropertyEnumPropertyColorPropertymaterialTheme_primaryContrastingColorbarBackgroundColorapplyThemeToAllCupertinoTextThemeDataresolveFromidentityHashCode	baseThemelocalTextGeometrylengthremovefirstRawMaterialButton
horizontalverticalOffsetBoxConstraintsdebugAssertIsValidminWidthclampDoubledxmaxWidth	minHeightdy	maxHeighthashDoublePropertytoStringShortdebugFormatDoubleprimaryContaineronPrimaryContaineronSecondarysecondaryContaineronSecondaryContainertertiary
onTertiarytertiaryContaineronTertiaryContaineronErrorerrorContaineronErrorContaineronBackgroundsurfaceVariantonSurfaceVariantoutlineVariantshadowscriminverseSurfaceonInverseSurfaceinversePrimarysurfaceTintDiagnosticableCupertinoThemeDataˆêë7†&ﬂî)èi∏† à«à÷
Brightness à†package:flutter/services.dart@Ä∂ÄÃColor
lerpDouble Ä¶  dart:ui  Ä–  package:flutter/cupertino.dart  Ä˘  package:flutter/foundation.dart  Å$  action_buttons.dart  ÅB  action_icons_theme.dart  Åd  app_bar_theme.dart  ÅÅ  badge_theme.dart  Åú  banner_theme.dart  Å∏  bottom_app_bar_theme.dart  Å‹   bottom_navigation_bar_theme.dart  Ç  bottom_sheet_theme.dart  Ç)  button_bar_theme.dart  ÇI  button_theme.dart  Çe  card_theme.dart  Ç  checkbox_theme.dart  Çù  chip_theme.dart  Ç∑  color_scheme.dart  Ç”  colors.dart  ÇÈ  constants.dart  É  data_table_theme.dart  É"  date_picker_theme.dart  ÉC  dialog_theme.dart  É_  divider_theme.dart  É|  drawer_theme.dart  Éò  dropdown_menu_theme.dart  Éª  elevated_button_theme.dart  É‡  expansion_tile_theme.dart  Ñ  filled_button_theme.dart  Ñ'  !floating_action_button_theme.dart  ÑS  icon_button_theme.dart  Ñt  ink_ripple.dart  Ñé  ink_sparkle.dart  Ñ©  ink_splash.dartÑŸÑ˙InteractiveInkFeatureFactory Ñ√  ink_well.dart  Ñ˝  input_decorator.dart  Ö  list_tile.dart  Ö5  list_tile_theme.dart  ÖT  menu_bar_theme.dart  Ör  menu_button_theme.dart  Öì  menu_theme.dart  Ö≠  navigation_bar_theme.dart  Ö—  navigation_drawer_theme.dart  Ö¯  navigation_rail_theme.dart  Ü  outlined_button_theme.dart  ÜB  page_transitions_theme.dart  Üh  popup_menu_theme.dart  Üà  progress_indicator_theme.dart  Ü∞  radio_theme.dart  ÜÀ  scrollbar_theme.dart  ÜÍ  search_bar_theme.dart  á
  search_view_theme.dart  á+  segmented_button_theme.dart  áQ  slider_theme.dart  ám  snack_bar_theme.dart  áå  switch_theme.dart  á®  tab_bar_theme.dart  á≈  text_button_theme.dart  áÊ  text_selection_theme.dart  à
  text_theme.dart  à$  time_picker_theme.dart  àE  toggle_buttons_theme.dart  ài  tooltip_theme.dart  àÜ  typography.dart    	dart:core¿ „å ¿¯ŸäÎ <ÄÜÄ§Ä•ÄŒÄœÄ¯Å"Å#ÅAÅcÅÄÅõÅ∑Å€ÇÇ(ÇHÇdÇ~ÇúÇ∂Ç“ÇËÉÉ!ÉBÉ^É{ÉóÉ∫ÉﬂÑÑ&ÑRÑsÑçÑ®Ñ¬Ñ¸ÖÖ4ÖSÖqÖíÖ¨Ö–Ö˜ÜÜAÜgÜáÜØÜ ÜÈá	á*áPáláãáßáƒáÂà	à#àDàhàÖàüà†àÿàŸàÒâââXâ\âüâ£âÏä<äçä£äßäªãã#ã'ãtãÑã¡ãå
åå'å?å@åÉå¥å‘å’ççç?çáçâçäçÿé'éxé…é˘è5è6èÉè”èˆê/ê0ê|êºê˜ë/ë0ë{ëëÀëÈëÌííígíÄíôíÆí«í‹ìì!ì0ìBìVìkìÄìïì•ì∂ì…ìÊî!î'îtî∑îŒîÿîŸï#ï8ïFïHïIïôï¡ï≈ññ^ñ°ñ•ñıóFóîó¿óƒòò`ò©òÙôEôêô≈ô…ô›ö)ösö¡ö›ö·õ7õ;õGõRõnõ∏õ¡õ◊úúú5úNúàúïú†ú©úØú∑ú«úÀúﬂú„ù ù`ùßùÏû3ûwû™ûÒüüüoüsüüêü®ü‡†††_†h†~†ñ†≈†–°°,°H°S°o°†°´°¥°∫°¬°“°÷¢¢;¢<¢G¢m¢¨¢≤££O£õ£°£Ï§6§Å§œ••T•Z•£•¶<¶r¶x¶æßß\ßéßîß‚®
®®Y®¢®®®È©5©Z©`©p©v©¡©ˇ™^™∫™–´ ´n´º´‡´·´˛¨$¨]¨ê¨¿¨Ú≠"≠@≠h≠ô≠±≠”≠‡Æ/Æ~Æ∂Æ“ÆÍØ ØØ:Ø\ØvØèØ¶Ø¡Ø◊ØÓ∞	∞"∞?∞]∞∞£∞ƒ∞‹∞Ù±±6±N±t±â±ß±Ã±Ì≤≤#≤;≤e≤É≤£≤Õ≤˜≥3≥_≥á≥©≥√≥È¥¥/¥Y¥w¥õ¥Ω¥ÎµµMµ{µπµ„∂	∂-∂W∂u∂•∂€∑∑?∑g∑ü∑ø∑Á∏∏E∏g∏ç∏Ø∏Õ∏˜π'πQπÅπ•π€πÏ∫E∫Ä∫Ü∫¬∫”ª ª^ª¬ª˛ºº&º7ºÑºøº≈º‚ºÛΩΩVΩ\ΩsΩÑΩ±ΩÏΩÚæææMæàæéæ¨æ≥æ–øøBø}ø•øΩø‡¿ @¿ @"¿ @b¿ @É¿ @§¿ @«¿ A¿ A¿ AM¿ AÄ¿ A…¿ AÂ¿ B3¿ BV¿ B°¿ B¬¿ B√¿ B–¿ C<¿ Cx¿ C∂¿ CÛ¿ DY¿ Dô¿ DÃ¿ DÒ¿ EZ¿ Eb¿ E´¿ E¨¿ F¿ F_¿ F¡¿ F¬¿ G¿ G:¿ Gh¿ G¢¿ G”¿ G¸¿ H(¿ HZ¿ Hí¿ H¬¿ HÍ¿ I.¿ I4¿ I^¿ IÅ¿ I¬¿ J#¿ Jo¿ Jµ¿ K¿ Kz¿ K◊¿ L4¿ LV¿ Lô¿ L∆¿ M¿ MT¿ Mô¿ M“¿ M˛¿ N"¿ Nm¿ Nâ¿ N“¿ Nı¿ O¿ O#¿ OO¿ Oó¿ OÁ¿ P5¿ P~¿ P„¿ Q.¿ Q¿ Qº¿ Q·¿ R¿ RF¿ Rj¿ Rà¿ R¶¿ RÃ¿ RÏ¿ S ¿ S'¿ Sg¿ Sø¿ T¿ T¿ T/¿ TO¿ Tù¿ T“¿ U!¿ U~¿ Uú¿ UÂ¿ V<¿ VB¿ Vh¿ V¡¿ W(¿ W.¿ WI¿ Wå¿ W›¿ W„¿ X¿ X^¿ X·¿ Y_¿ Y`¿ Yx¿ Y°¿ YÃ¿ Z¿ Z6¿ Z}¿ Z¥¿ ZÁ¿ [¿ [=¿ [f¿ [ô¿ [Œ¿ [˜¿ \&¿ \S¿ \å¿ \…¿ ]¿ ]=¿ ]Ü¿ ]ª¿ ]Ï¿ ^¿ ^P¿ ^y¿ ^¥¿ ^ı¿ _2¿ _o¿ _¢¿ _Â¿ `¿ `C¿ `x¿ `∑¿ `‰¿ a¿ aB¿ ak¿ a†¿ a€¿ b¿ bK¿ bz¿ b{¿ b±¿ b÷¿ c ¿ cï¿ cñ¿ c∞¿ d¿ dR¿ d¢¿ d»¿ d…¿ dË¿ e&¿ e\¿ eò¿ e ¿ e˛¿ f0¿ fJ¿ fp¿ fî¿ f∂¿ f⁄¿ fÈ¿ g	¿ g%¿ gE¿ gy¿ gù¿ gø¿ g›¿ h¿ h¿ h=¿ hc¿ hÖ¿ hØ¿ h€¿ i¿ iE¿ ie¿ iÖ¿ iπ¿ i€¿ i˜¿ j!¿ j=¿ j[¿ jÖ¿ jü¿ j«¿ jÁ¿ k¿ k%¿ kQ¿ kã¿ kµ¿ k€¿ k˚¿ l¿ l;¿ lW¿ l}¿ l•¿ l≈¿ lÁ¿ m¿ m3¿ mc¿ më¿ mΩ¿ m˘¿ n!¿ nE¿ ng¿ nè¿ n´¿ nŸ¿ o¿ o=¿ om¿ oì¿ o…¿ oÁ¿ p¿ p5¿ pg¿ pá¿ p´¿ pÀ¿ pÎ¿ q¿ qA¿ qi¿ qó¿ qπ¿ qÒ¿ r/¿ rc¿ rç¿ r´¿ r”¿ rˇ¿ s¿ s
¿ s¿ sW¿ sí¿ s ¿ s–¿ t¿ tW¿ tv¿ té¿ tﬁ¿ u,¿ uz¿ uû¿ uü¿ uº¿ uÍ¿ v¿ v2¿ vZ¿ vÉ¿ v´¿ v«¿ vÈ¿ w
¿ w*¿ wK¿ wX¿ wß¿ w€¿ x¿ x2¿ xO¿ xn¿ xó¿ x∏¿ xÿ¿ xˆ¿ y¿ y5¿ yS¿ yu¿ yï¿ yπ¿ yﬁ¿ z	¿ z1¿ zP¿ zo¿ zò¿ z∏¿ z’¿ z˘¿ {¿ {:¿ {X¿ {p¿ {ì¿ {≤¿ {–¿ {Ô¿ |¿ |@¿ |d¿ |Ü¿ |•¿ |¬¿ |„¿ } ¿ }"¿ }E¿ }d¿ }Ñ¿ }£¿ }»¿ }Ô¿ ~¿ ~:¿ ~g¿ ~ä¿ ~´¿ ~À¿ ~Ó¿ ¿ 1¿ Z¿ Å¿ ®¿  ¿ Ù¿ Ä¿ Ä4¿ ÄW¿ Ä¿ Äû¿ Äø¿ Äﬁ¿ Ä˝¿ Å ¿ ÅF¿ Åi¿ Åè¿ ÅØ¿ ÅÂ¿ Åˆ¿ ÇO¿ Çä¿ Çê¿ Çµ¿ Ç∆¿ É¿ ÉQ¿ Éµ¿ ÉÒ¿ É˜¿ Ñ¿ Ñ*¿ Ñw¿ Ñ≤¿ Ñ∏¿ Ñ’¿ ÑÊ¿ Ö¿ ÖI¿ ÖO¿ Öf¿ Öw¿ Ö§¿ Öﬂ¿ ÖÂ¿ Ü¿ Ü¿ Ü@¿ Ü{¿ ÜÅ¿ Üü¿ Ü†¿ ÜŸ¿ á$¿ á[¿ áà¿ á©¿ á‘¿ à¿ à1¿ àk¿ àé¿ à∂¿ à∑¿ â¿ â4¿ â:¿ âc¿ âi¿ â•¿ âÒ¿ ä;¿ äÅ¿ äá¿ ä“¿ ã!¿ ã]¿ ãc¿ ãy¿ ãƒ¿ ãË¿ ãÓ¿ ã¸¿ å¿ åV¿ å†¿ å®¿ å≤¿ åƒ¿ å ¿ å¸¿ ç3¿ çN¿ çt¿ çé¿ ç¶¿ ç≠¿ ç¿ çÒ¿ éF¿ é†¿ è ¿ è¿ è¿ è7¿ èa¿ èä¿ èµ¿ èÏ¿ ê¿ ê@¿ ê}¿ ê¨¿ ê·¿ ë¿ ë3¿ ëO¿ ëy¿ ëõ¿ ë¢¿ ë¶¿ ëß¿ ë…¿ ëœ¿ í¿ ík¿ í©¿ íÀ¿ íÎ¿ í¿ íÒ¿ ì7¿ ì=¿ ìã¿ ìŸ¿ î¿ î7¿ îW¿ î\¿ î]¿ îó¿ îù¿ î‡¿ îÊ¿ ï4¿ ïÇ¿ ïà¿ ï◊¿ ïÏ¿ ñO¿ ñP¿ ñt¿ ñz¿ ñ¬¿ ó¿ ó9¿ óp¿ óq¿ óø¿ ò¿ òW¿ òy¿ òz¿ òï¿ òñ¿ ò‰¿ ô¿ ô¿ ôX¿ ô§¿ ô¿ ô˛¿ ö¿ öP¿ öü¿ öÂ¿ õ0¿ õm¿ õs¿ õ™¿ õÏ¿ ú9¿ úÑ¿ úµ¿ úª¿ úı¿ ú˚¿ ùE¿ ùç¿ ù“¿ û¿ û¿ û¿ û¿ ûk¿ ûÉ¿ û“¿ ü¿ üT¿ ü|¿ ü•¿ ü¶¿ üÒ¿ †¿ †¿ †^¿ †©¿ †˜¿ °=¿ °C¿ °ï¿ °‡¿ ¢¿ ¢¿ ¢G¿ ¢M¿ ¢§¿ ¢◊¿ ¢›¿ £¿ £¿ £(¿ £z¿ £î¿ £ö¿ £È¿ £˚¿ §¿ §¿ §¿ §g¿ §†¿ §°¿ §Á¿ §Ì¿ •2¿ •8¿ •k¿ •ó¿ •ò¿ •Ê¿ ¶¿ ¶¿ ¶J¿ ¶}¿ ¶~¿ ¶æ¿ ¶ƒ¿ ß¿ ß]¿ ßn¿ ß£¿ ß§¿ ßË¿ ßÓ¿ ®<¿ ®ä¿ ®∞¿ ®„¿ ®‰¿ ©$¿ ©*¿ ©y¿ ©«¿ ©⁄¿ ©‡¿ ™0¿ ™y¿ ™»¿ ´¿ ´W¿ ´ñ¿ ´Ê¿ ¨7¿ ¨p¿ ¨v¿ ¨≈¿ ≠¿ ≠]¿ ≠≠¿ ≠˛¿ Æ2¿ Æ^¿ Æd¿ Æ∞¿ Æ—¿ Æ“¿ Ø"¿ ØM¿ ØN¿ Øë¿ Ø™¿ Ø∞¿ Ø¿¿ Ø∆¿ ∞¿ ∞X¿ ∞Ö¿ ∞÷¿ ∞¸¿ ±0¿ ±1¿ ±o¿ ±u¿ ±º¿ ≤	¿ ≤;¿ ≤A¿ ≤Ö¿ ≤œ¿ ≤Ú¿ ≤¯¿ ≥?¿ ≥å¿ ≥›¿ ¥.¿ ¥Y¿ ¥_¿ ¥q¿ ¥w¿ ¥≈¿ µ¿ µP¿ µì¿ µô¿ ∂¿ ∂	¿ ∂e¿ ∂¡¿ ∑¿ ∑y¿ ∑’¿ ∑€¿ ∏¿ ∏^¿ ∏d¿ ∏≤¿ π¿ π,¿ π2¿ πL¿ πR¿ πÅ¿ πá¿ πò¿ π’¿ π˝¿ ∫2¿ ∫8¿ ∫M¿ ∫°¿ ∫ª¿ ∫‰¿ ª¿ ª¿ ªê¿ ªŸ¿ º^¿ º´¿ º√¿ ºˆ¿ Ω¿ ΩH¿ Ωô¿ Ω±¿ æ:¿ æp¿ æ†¿ æº¿ æı¿ øA¿ øÜ¿ ø≤¿ ¿¿ ¿9¿ ¿x¿ ¿ò¿ ¿¬¿ ¿Ô¿ ¡$¿ ¡j¿ ¡ß¿ ¬¿ ¬
¿ ¬R¿ ¬â¿ ¬Ω¿ ¬√¿ ¬”¿ ¬Ÿ¿ √¿ √3¿ √4¿ √Ö¿ √ã¿ √∆¿ ƒ¿ ƒZ¿ ƒß¿ ƒ¯¿ ≈1¿ ≈7¿ ≈É¿ ≈‘¿ ∆#¿ ∆r¿ ∆¡¿ «¿ «¿ «\¿ «´¿ «◊¿ «›¿ »'¿ »n¿ »ª¿ »¡¿ …¿ …N¿ …T¿ …£¿ …Ô¿  E¿  t¿  â¿  Æ¿  Ø¿  ∫¿  ª¿  Í¿  ˚¿ À)¿ Àd¿ Àj¿ À†¿ À√¿ Àƒ¿ Ã¿ Ã¿ Ã¿ ÃX¿ Ãq¿ Ãr¿ Ã´¿ Ã±¿ Õ¿ ÕS¿ Õ£¿ ÕÎ¿ Œ¿ Œ2¿ Œ3¿ Œd¿ Œâ¿ Œä¿ Œœ¿ œ¿ œ.¿ œK¿ œL¿ œç¿ œ‘¿ œ⁄¿ –%¿ –G¿ –c¿ –d¿ –Æ¿ –»¿ –…¿ —¿ —9¿ —W¿ —X¿ —ö¿ —¥¿ —Õ¿ —Œ¿ “¿ “(¿ “B¿ “C¿ “¿ “ù¿ “û¿ “Ó¿ “Ù¿ ”@¿ ”à¿ ”÷¿ ‘¿ ‘'¿ ‘(¿ ‘V¿ ‘v¿ ‘w¿ ‘¶¿ ‘«¿ ‘»¿ ’¿ ’a¿ ’à¿ ’â¿ ’ﬂ¿ ÷¿ ÷s¿ ÷±¿ ÷’¿ ÷÷¿ ◊¿ ◊¿ ◊a¿ ◊ö¿ ◊û¿ ◊“¿ ◊Ù¿ ◊ı¿ ÿ@¿ ÿF¿ ÿl¿ ÿr¿ ÿø¿ Ÿ¿ ŸY¿ Ÿ¶¿ Ÿœ¿ ŸÍ¿ ŸÎ¿ ⁄¿ ⁄¿ ⁄"¿ ⁄h¿ ⁄É¿ ⁄Ñ¿ ⁄≈¿ €¿ €5¿ €6¿ €T¿ €U¿ €ô¿ €∫¿ €ª¿ €ˆ¿ ‹¿ ‹¿ ‹Y¿ ‹}¿ ‹~¿ ‹∆¿ ‹„¿ ‹‰¿ ›3¿ ›9¿ ›p¿ ›è¿ ›ê¿ ›¶¿ ›ß¿ ›Û¿ ﬁ'¿ ﬁU¿ ﬁV¿ ﬁ§¿ ﬁ¬¿ ﬁ„¿ ﬁ‰¿ ﬂ¿ ﬂ<¿ ﬂ=¿ ﬂã¿ ﬂ∏¿ ﬂπ¿ ‡¿ ‡9¿ ‡:¿ ‡ã¿ ‡ö¿ ‡Ÿ¿ ‡⁄¿ ·+¿ ·Z¿ ·[¿ ·´¿ ·÷¿ ·◊¿ ‚(¿ ‚?¿ ‚d¿ ‚e¿ ‚ò¿ ‚û¿ ‚‘¿ ‚Ò¿ ‚Ú¿ „A¿ „j¿ „k¿ „ü¿ „•¿ „€¿ „¸¿ „˝¿ ‰D¿ ‰S¿ ‰~¿ ‰¿ ‰Õ¿ ‰‹¿ Â	¿ Â
¿ Â?¿ Â`¿ Âa¿ Â∞¿ Âœ¿ Âˆ¿ Â˜¿ ÊD¿ Êi¿ Êj¿ ÊΩ¿ ÊÓ¿ ÊÔ¿ Á3¿ ÁL¿ ÁÅ¿ ÁÇ¿ ÁÀ¿ Á˛¿ Áˇ¿ ËC¿ ËZ¿ Ëã¿ Ëå¿ Ëœ¿ ËÌ¿ È.¿ È/¿ Ès¿ Èà¿ Èµ¿ È∂¿ È˙¿ Í#¿ Í$¿ Íu¿ Í¥¿ Í€¿ Í‹¿ Î)¿ Îv¿ Î£¿ Î§¿ Îı¿ Ï6¿ ÏW¿ ÏX¿ Ï®¿ Ïƒ¿ Ï˜¿ Ï¯¿ ÌH¿ Ìg¿ Ì†¿ Ì°¿ Ì¿ Ó¿ ÓN¿ ÓO¿ Óì¿ Ó¨¿ Ó·¿ Ó‚¿ Ô/¿ ÔB¿ Ôm¿ Ôn¿ Ô∆¿ ¿ ¿ N¿ q¿ r¿ ¬¿ Ì¿ Ó¿ ÒY¿ ÒÜ¿ Òá¿ Ò›¿ Ú¿ Ú¿ ÚJ¿ ÚP¿ Úà¿ Ú≠¿ ÚÆ¿ Û¿ Û-¿ Û.¿ Û{¿ Û†¿ Û°¿ ÛÙ¿ Ù¿ Ù¿ ÙZ¿ Ùo¿ Ùú¿ Ùù¿ ÙÌ¿ ı ¿ ı!¿ ıq¿ ıû¿ ıü¿ ı„¿ ˆ¿ ˆ¿ ˆZ¿ ˆ`¿ ˆô¿ ˆ¿¿ ˆ¡¿ ˆı¿ ˆˆ¿ ˜E¿ ˜K¿ ˜q¿ ˜Æ¿ ˜◊¿ ˜›¿ ¯(¿ ¯b¿ ¯h¿ ¯x¿ ¯~¿ ¯«¿ ˘¿ ˘[¿ ˘ö¿ ˘©¿ ˙ ¿ ˙9¿ ˙=¿ ˙}¿ ˙~¿ ˙…¿ ˚¿ ˚¿ ˚9¿ ˚r¿ ˚v¿ ˚û¿ ˚∫¿ ˚ª¿ ˚ı¿ ¸!¿ ¸0¿ ¸[¿ ¸î¿ ¸ò¿ ¸ ¿ ¸Î¿ ¸Ï¿ ˝;¿ ˝d¿ ˝s¿ ˝æ¿ ˝˙¿ ˛\¿ ˛ñ¿ ˛ö¿ ˛ÿ¿ ˛ˇ¿ ˇ ¿ ˇP¿ ˇQ¿ ˇû¿ ˇŸ¿ ¿ O¿ P¿ ´¿ ±¿ Ô¿¿V¿§¿Ú¿¿¿4¿Z¿ì¿∆¿ˆ¿(¿X¿v¿û¿œ¿Á¿	¿¿e¿ô¿—¿Ì¿¿¿9¿[¿u¿é¿•¿¿¿÷¿Ì¿¿!¿>¿\¿Ä¿°¿π¿—¿Û¿¿1¿V¿w¿ë¿≠¿≈¿Ô¿¿-¿W¿Å¿Ω¿È¿	¿	3¿	M¿	s¿	ë¿	π¿	„¿
¿
%¿
G¿
u¿
ß¿
◊¿¿C¿m¿ì¿∑¿·¿ˇ¿/¿e¿ó¿…¿Ò¿)¿I¿q¿õ¿œ¿Ò¿¿9¿W¿Å¿±¿€¿¿/¿e¿v¿œ¿
¿¿L¿]¿™¿Ë¿L¿à¿é¿∞¿¡¿¿I¿O¿l¿}¿•¿·¿Á¿˛¿¿<¿x¿~¿ö¿´¿Ÿ¿¿¿8¿?¿Å¿õ¿Ì¿=¿ç¿≥¿¥¿”¿4¿â¿Ó¿=¿è¿ﬁ¿	¿F¿Ä¿∑¿Ò¿ ¿4¿b¿π¿¿E¿|¿≠¿Í¿¿I¿Ü¿Ω¿ ¿F¿û¿Ì¿!¿U¿ß¿…¿˜¿:¿}¿´¿‹¿ˆ¿6¿j¿õ¿œ¿ ¿ p¿ ≥¿ ¿!$¿!R¿!å¿!∫¿!˜¿"7¿"k¿"¢¿"÷¿#¿#h¿#±¿#˜¿$U¿$ï¿$œ¿%¿%F¿%t¿%Ω¿&¿&[¿&ß¿&‰¿'9¿'j¿'ß¿'Á¿(6¿(j¿(§¿(ÿ¿)¿)L¿)ï¿)’¿*¿*U¿*ç¿*Ó¿+<¿+{¿+®¿+‰¿,&¿,-¿,1¿,¿,€¿-2¿-3¿-Ä¿-∂¿-º¿.¿.]¿.≠¿.·¿/1¿/y¿/≈¿0¿0d¿0≥¿1¿1¿1Y¿1j¿1q¿1ø¿1È¿1Í¿2¿2[¿2f¿2â¿2⁄¿3¿3(¿31¿38¿3<¿3=¿3Å¿3ö¿3†¿3¿4!¿4_¿4û¿4ü¿4‹¿5/¿5Å¿5“¿6¿6H¿6l¿6º¿6€¿6·¿6˝¿7¿7¿77¿7=¿7q¿7w¿7ö¿8¿8¿8ñ¿8‹¿9:¿9D¿9d¿9ù¿9ÿ¿:
¿:¿:%¿:)¿:*¿:y¿:ÿ¿;[¿;ª¿;˜¿<á¿<è¿<ì¿<î¿<√¿<…¿<Ô¿<ı¿=¿=V¿=q¿=Å¿=á¿=°¿=Û¿>C¿>ì¿>π¿>∫¿>Ÿ¿?A¿?ù¿?Œ¿@$¿@}¿@”¿A¿A\¿Aû¿A›¿B+¿B:¿B{¿B∂¿B¸¿C[¿C¢¿CÊ¿D$¿Dn¿D©¿DÁ¿E1¿Eu¿E≈¿F¿F}¿FŸ¿G¿G[¿G∫¿G‹¿H¿Hu¿H»¿I¿IH¿Ib¿Iº¿J¿JH¿Jö¿J¯¿Kv¿K’¿L,¿Lh¿L¶¿L¯¿M;¿Më¿MÎ¿N1¿N¿N ¿O,¿Oó¿O˛¿Pa¿P‰¿Q?¿Qí¿Q·¿R<¿R¿RÊ¿SY¿Sƒ¿T/¿TÜ¿T˝¿UC¿Uö¿Uı¿Vc¿V≠¿Vˇ¿WI¿Wè¿WÍ¿XQ¿X´¿Y¿Ya¿Yô¿Z¿Z_¿ZÆ¿ZÎ¿[7¿[â¿[ê¿[î¿[ï¿[°¿[ƒ¿[¿\¿\
¿\+¿\¿\—¿]#¿]K¿]L¿]m¿]∑¿]˘¿^,¿^j¿^™¿^Ë¿_¿_@¿_p¿_û¿_Œ¿_ﬂ¿`¿`3¿`_¿`ü¿`œ¿`˝¿a'¿aY¿aÅ¿a´¿a›¿b¿bA¿by¿bΩ¿b˚¿c'¿cS¿cì¿c∑¿cﬂ¿d¿dK¿ds¿dù¿dπ¿dÌ¿e¿eC¿eo¿eß¿eÌ¿f#¿fU¿fÅ¿f©¿fŸ¿g¿g3¿gg¿gì¿g¡¿gÌ¿h%¿ha¿hõ¿h”¿i¿iO¿i¿i≠¿i·¿j	¿jC¿jÉ¿jø¿j˚¿k-¿ko¿kô¿kÀ¿kˇ¿l=¿li¿lô¿l≈¿lÒ¿m%¿m_¿mì¿mÕ¿m˚¿n5¿n¿nø¿nı¿o¿oS¿oâ¿oç¿oé¿oö¿oØ¿o€¿p-¿p}¿pÕ¿pÛ¿pÙ¿q¿q5¿qS¿qm¿qâ¿q•¿q¬¿qﬁ¿qÓ¿r¿r¿r-¿rB¿rQ¿rd¿ru¿rà¿r•¿r∫¿rŒ¿r‡¿rˆ¿s¿s¿s/¿sC¿s[¿st¿sì¿sØ¿s¬¿s’¿sÚ¿t¿t%¿t=¿tU¿tf¿tx¿tí¿t©¿tº¿tŒ¿t·¿t˙¿u¿u2¿uH¿u[¿ul¿uÅ¿uí¿u®¿uø¿u“¿uÊ¿u˘¿v¿v-¿vG¿v`¿vÅ¿vò¿v≠¿v¡¿vÿ¿vÈ¿w¿w ¿w;¿wV¿wl¿wä¿wú¿w≤¿w…¿wÂ¿w¯¿x¿x ¿x3¿xJ¿xd¿x{¿xï¿x©¿x·¿y¿y ¿y8¿yJ¿ya¿yz¿yÅ¿y§¿y®¿y©¿yµ¿y˙¿z%¿z]¿z≠¿z˚¿{I¿{m¿{n¿{ã¿|¿|⁄¿}Ö¿~¿~û¿)¿¥¿Ä[¿Å	¿Åú¿Ç;¿ÇI¿ÇÕ¿ÉK¿É‚¿ÑÑ¿Ö¿Öï¿Ü¿Ü£¿á!¿á¢¿à/¿à¬¿âX¿âﬂ¿äá¿ã&¿ã™¿å.¿å–¿å¿ç^¿ç⁄¿éR¿éº¿èO¿èg¿èÁ¿ê~¿ë¿ë∏¿íg¿ì6¿ìÂ¿îå¿ï ¿ïj¿ñ¿ñ{¿ó"¿óÕ¿òd¿ô¿ôû¿öQ¿õ¿õï¿úH¿ù¿ù∆¿ûi¿ü¿ü≥¿†F¿†˝¿°¿¿¢{¿£6¿£›¿§§¿•;¿•‚¿¶ç¿ßL¿ß¿¿®c¿®˛¿©n¿™¿™–¿´{¿¨¿¨{¿¨±¿≠[¿≠˝¿Æê¿Ø¿Ø°¿∞7¿∞;¿∞=¿∞>¿∞à¿∞´¿∞Ø¿∞¯¿±E¿±Q¿±U¿±§¿±Ú¿±ˆ¿≤B¿≤Ü¿≤ä¿≤€¿≥&¿≥u¿≥ó¿≥õ¿≥©¿≥≠¿≥˜¿¥F¿¥T¿¥ñ¿¥¿¿µ¿µa¿µÆ¿µ‚¿∂%¿∂v¿∂û¿∂§¿∂⁄¿∂˛¿∑$¿∑3¿∑F¿∑ú¿∑°¿∑¢¿∑«¿∑‡¿∏¿∏M¿∏ç¿∏™¿∏ª¿∏Á¿π¿πN¿πy¿π≠¿πÊ¿∫¿∫ ¿∫!¿∫C¿∫Ä¿∫Å¿∫ç¿∫Ì¿∫Ó¿∫˙¿ªb¿ªc¿ªo¿ªÔ¿ª¿ª¸¿º~¿º¿º∏¿ºæ¿Ω ¿ΩM¿Ωù¿Ω◊¿Ω›¿æ.¿æu¿æµ¿æ¡¿æÓ¿ø
¿ø#¿øG¿øn¿øç¿ø±¿øÃ¿ø”¿¿¿¿¿¿?¿¿_¿¿É¿¿Ω¿¿€¿¡¿¡E¿¡o¿¡x¿¡¿¡É¿¡Ñ¿¡ê¿¡…¿¬	¿¬N¿¬|¿¬í¿¬∆¿¬Õ¿¬—¿¬”¿¬‘¿¬ﬂ¿√¿√N¿√O¿√l¿√ë¿√í¿√‡¿√˘¿ƒ¿ƒ^¿ƒ_¿ƒk¿ƒé¿ƒŸ¿≈¿≈0¿≈a¿≈£¿≈ß¿≈©¿≈™¿≈˘¿∆'¿∆+¿∆z¿∆õ¿∆¥¿∆¿∆Ò¿«A¿«ã¿«õ¿«¿¿«¡¿«¯¿«˛¿»O¿»y¿»ì¿»î¿»ﬂ¿…¿… ¿…F¿…t¿…ç¿…∞¿… ¿…ﬂ¿…Â¿ ¿ 6¿ <¿ _¿ c¿ e¿ f¿ £¿ ß¿ Î¿À9¿Àj¿Àn¿Àº¿Ã¿ÃW¿Ãu¿Ãy¿Ã∆¿Õ¿Õd¿Õn¿Õr¿Õπ¿ÕΩ¿Õœ¿Õ›¿Õı¿Œ	¿ŒT¿Œf¿Œ~¿Œñ¿Œ•¿Œ¿¿Œ‘¿Œÿ¿ŒÊ¿ŒÍ¿œ<¿œn¿œ’¿œ‡¿–
¿–9¿–?¿–å¿–Ÿ¿–Í¿—¿—¿—6¿—a¿—å¿—∑¿—‰¿“¿“¿“5¿“b¿“c¿“Ü¿“≤¿“≥¿“Ò¿“˜¿”D¿”í¿”´¿”‰¿”Â¿‘.¿‘4¿‘Ä¿‘–¿’ ¿’b¿’h¿’§¿÷ ¿÷¿÷F¿÷L¿÷ò¿÷È¿◊3¿◊n¿◊t¿◊∞¿ÿ¿ÿ	¿ÿX¿ÿ°¿ÿß¿ÿÓ¿Ÿ9¿ŸP¿ŸV¿Ÿf¿Ÿl¿Ÿ∏¿ŸÏ¿⁄4¿⁄^¿⁄∆¿⁄«¿€¿€¿€n¿€£¿€©¿€π¿€ø¿‹	¿‹<¿‹à¿‹†¿‹√¿‹‚¿›¿›¿›5¿›V¿›y¿›ë¿›ó¿›∫¿›æ¿›ø¿ﬁ
¿ﬁ ¿ﬁ;¿ﬁS¿ﬁi¿ﬁp¿ﬁä¿ﬁª¿ﬁÊ¿ﬁÌ¿ﬁÒ¿ﬁÚ¿ﬂ(¿ﬂ.¿ﬂy¿ﬂ ¿‡¿‡Y¿‡õ¿‡æ¿‡ƒ¿‡‘¿‡⁄¿·.¿·b¿·À¿·Ê¿·Á¿‚¿‚!¿‚j¿‚ª¿„¿„J¿„å¿„Ø¿„µ¿„≈¿„À¿‰¿‰Q¿‰∫¿‰”¿‰‘¿Â(¿Â.¿Â~¿Â∫¿Â¿¿Ê¿Ê3¿ÊU¿Ê£¿ÊÙ¿Á$¿ÁE¿ÁF¿Áz¿Á~¿Á¿Á±¿Á˚¿Ë¿Ë&¿Ë,¿ËF¿ËÑ¿Ëº¿Ë√¿Ë«¿Ë»¿È¿ÈC¿ÈI¿Èô¿ÈÃ¿Í¿Í>¿Í_¿Í≈¿Î.¿Î5¿Î9¿Î:¿ÎF¿Îi¿Îï¿Î©¿ÎØ¿Î—¿Î˚¿Ï"¿Ï&¿Ï'¿Ï3¿Ïl¿Ïm¿Ïy¿Ïæ¿ÏÈ¿Ì:¿Ìá¿Ìã¿Ìå¿Ìò¿Ì≥¿Ó"¿Ó&¿Ó(¿Ó)¿Ó[¿Ó\¿Óü¿Ó„¿Ô¿Ô>¿Ô?¿Ôt¿Ôî¿Ô≤¿Ô“¿Ô˘¿"¿B¿d¿ç¿∏¿◊¿¯¿Ò ¿ÒJ¿Òf¿ÒÑ¿Ò©¿Ò–¿ÒÒ¿Ú¿Ú2¿ÚR¿Úw¿Úû¿Úº¿Ú·¿Ú˛¿Û¿Û?¿Ûf¿Ûã¿Ûœ¿ÛÒ¿ÛÙ¿Ûı¿Ù)¿ÙH¿Ùf¿ÙÜ¿Ù≠¿Ù÷¿Ùˆ¿ı¿ıA¿ıl¿ıã¿ı¨¿ı‘¿ı˛¿ˆ¿ˆ8¿ˆ]¿ˆÑ¿ˆ•¿ˆ»¿ˆÊ¿˜¿˜+¿˜R¿˜p¿˜ï¿˜≤¿˜Œ¿˜Û¿¯¿¯?¿¯É¿¯•¿¯®¿¯©¿¯Ÿ    ?Ä• Ä∂ÄÃÄœ  Ä¯  Å#  ÅA  Åc  ÅÄ  Åõ  Å∑  Å€  Ç  Ç(  ÇH  Çd  Ç~  Çú  Ç∂  Ç“  ÇË  É  É!  ÉB  É^  É{  Éó  É∫  Éﬂ  Ñ  Ñ&  ÑR  Ñs  Ñç  Ñ®  Ñ¬ ÑŸÑ˙Ñ¸  Ö  Ö4  ÖS  Öq  Öí  Ö¨  Ö–  Ö˜  Ü  ÜA  Üg  Üá  ÜØ  Ü   ÜÈ  á	  á*  áP  ál  áã  áß  áƒ  áÂ  à	  à#  àD  àh  àÖ  à†à«à÷ âÑxãìÇs/// An interface that defines custom additions to a [ThemeData] object.
///
/// {@youtube 560 315 https://www.youtube.com/watch?v=8-szcYzFVao}
///
/// Typically used for custom colors. To use, subclass [ThemeExtension],
/// define a number of fields (e.g. [Color]s), and implement the [copyWith] and
/// [lerp] methods. The latter will ensure smooth transitions of properties when
/// switching themes.
///
/// {@tool dartpad}
/// This sample shows how to create and use a subclass of [ThemeExtension] that
/// defines two colors.
///
/// ** See code in examples/api/lib/material/theme/theme_extension.1.dart **
/// {@end-tool}ã¢ã¢ã√F ã¯å,/// Enable const constructor for subclasses.   å1å4/// The extension's type.   åBÄëå»o/// Creates a copy of this theme extension with the given fields
/// replaced by the non-null parameter values.   å◊ÄØçSc/// Linearly interpolate with another [ThemeExtension] object.
///
/// {@macro dart.ui.shadow.lerp} çX"çv  ç|çÑ    ïI¿öÛ¢MåÒ/// Defines the configuration of the overall visual [Theme] for a [MaterialApp]
/// or a widget subtree within the app.
///
/// The [MaterialApp] theme property can be used to configure the appearance
/// of the entire app. Widget subtrees within an app can override the app's
/// theme by including a [Theme] widget at the top of the subtree.
///
/// Widgets whose appearance should align with the overall theme can obtain the
/// current theme's configuration with [Theme.of]. Material components typically
/// depend exclusively on the [colorScheme] and [textTheme]. These properties
/// are guaranteed to have non-null values.
///
/// The static [Theme.of] method finds the [ThemeData] value specified for the
/// nearest [BuildContext] ancestor. This lookup is inexpensive, essentially
/// just a single HashMap access. It can sometimes be a little confusing
/// because [Theme.of] can not see a [Theme] widget that is defined in the
/// current build method's context. To overcome that, create a new custom widget
/// for the subtree that appears below the new [Theme], or insert a widget
/// that creates a new BuildContext, like [Builder].
///
/// {@tool snippet}
/// In this example, the [Container] widget uses [Theme.of] to retrieve the
/// primary color from the theme's [colorScheme] to draw an amber square.
/// The [Builder] widget separates the parent theme's [BuildContext] from the
/// child's [BuildContext].
///
/// ![](https://flutter.github.io/assets-for-api-docs/assets/material/theme_data.png)
///
/// ```dart
/// Theme(
///   data: ThemeData.from(
///     colorScheme: ColorScheme.fromSwatch(primarySwatch: Colors.amber),
///   ),
///   child: Builder(
///     builder: (BuildContext context) {
///       return Container(
///         width: 100,
///         height: 100,
///         color: Theme.of(context).colorScheme.primary,
///       );
///     },
///   ),
/// )
/// ```
/// {@end-tool}
///
/// {@tool snippet}
///
/// This sample creates a [MaterialApp] with a [Theme] whose
/// [ColorScheme] is based on [Colors.blue], but with the color
/// scheme's [ColorScheme.secondary] color overridden to be green. The
/// [AppBar] widget uses the color scheme's [ColorScheme.primary] as
/// its default background color and the [FloatingActionButton] widget
/// uses the color scheme's [ColorScheme.secondary] for its default
/// background. By default, the [Text] widget uses
/// [TextTheme.bodyMedium], and the color of that [TextStyle] has been
/// changed to purple.
///
/// ![](https://flutter.github.io/assets-for-api-docs/assets/material/material_app_theme_data.png)
///
/// ```dart
/// MaterialApp(
///   theme: ThemeData(
///     colorScheme: ColorScheme.fromSwatch().copyWith(
///       secondary: Colors.green,
///     ),
///     textTheme: const TextTheme(bodyMedium: TextStyle(color: Colors.purple)),
///   ),
///   home: Scaffold(
///     appBar: AppBar(
///       title: const Text('ThemeData Demo'),
///     ),
///     floatingActionButton: FloatingActionButton(
///       child: const Icon(Icons.add),
///       onPressed: () {},
///     ),
///     body: const Center(
///       child: Text('Button pressed 0 times'),
///     ),
///   ),
/// )
/// ```
/// {@end-tool}
///
/// See <https://material.io/design/color/> for
/// more discussion on how to pick the right colors. ¢o¿ Pö ™ƒ™Õá˛/// Create a [ThemeData] that's used to configure a [Theme].
///
/// The [colorScheme] and [textTheme] are used by the Material components to
/// compute default values for visual properties. The API documentation for
/// each component widget explains exactly how the defaults are computed.
///
/// When providing a [ColorScheme], apps can either provide one directly
/// with the [colorScheme] parameter, or have one generated for them by
/// using the [colorSchemeSeed] and [brightness] parameters. A generated
/// color scheme will be based on the tones of [colorSchemeSeed] and all of
/// its contrasting color will meet accessibility guidelines for readability.
/// (See [ColorScheme.fromSeed] for more details.)
///
/// If the app wants to customize a generated color scheme, it can use
/// [ColorScheme.fromSeed] directly and then [ColorScheme.copyWith] on the
/// result to override any colors that need to be replaced. The result of
/// this can be used as the [colorScheme] directly.
///
/// For historical reasons, instead of using a [colorSchemeSeed] or
/// [colorScheme], you can provide either a [primaryColor] or [primarySwatch]
/// to construct the [colorScheme], but the results will not be as complete
/// as when using generation from a seed color.
///
/// If [colorSchemeSeed] is non-null then [colorScheme], [primaryColor] and
/// [primarySwatch] must all be null.
///
/// The [textTheme] [TextStyle] colors are black if the color scheme's
/// brightness is [Brightness.light], and white for [Brightness.dark].
///
/// To override the appearance of specific components, provide
/// a component theme parameter like [sliderTheme], [toggleButtonsTheme],
/// or [bottomNavigationBarTheme].
///
/// See also:
///
///  * [ThemeData.from], which creates a ThemeData from a [ColorScheme].
///  * [ThemeData.light], which creates a light blue theme.
///  * [ThemeData.dark], which creates dark theme with a teal secondary [ColorScheme] color.
///  * [ColorScheme.fromSeed], which is used to create a [ColorScheme] from a seed color.]¨ ¨	  ¨(3¨F  ¨a-¨Ö  ¨î*¨´  ¨ƒ,¨‹  ¨ˆ*≠  ≠&≠7  ≠D"≠Y  ≠l+≠ã  ≠ù≠§  ≠µ≠≈  Æ∫Æ«  Æ÷Æﬁ  ÆÓÆˆ  ØØ  Ø"Ø*  Ø>ØF  Ø`Øh  ØzØÇ  ØìØõ  Ø™Ø≤  Ø≈ØÕ  Ø€Ø„  ØÚØ˙  ∞∞  ∞&∞.  ∞C∞K  ∞a∞q  ∞É∞ã  ∞ß∞Ø  ∞»∞–  ∞‡∞Ë  ∞¯±   ±:±C  ±R ±a  ±x±Å  ±ç±ù  ±´±ª  ±–±‹  ±Ò±˝  ≤≤  ≤?$≤U  ≤i≤w  ≤á≤ò  ≤ß$≤¡  ≤—$≤Â  ≤˚6≥  ≥7&≥N  ≥c"≥x  ≥ã≥ù  ≥≠≥π  ≥« ≥€  ≥Ì≥˝  ¥"¥   ¥3$¥I  ¥]¥k  ¥{¥é  ¥ü¥±  ¥¡(¥Ÿ  ¥Ô,µ	  µ!*µ:  µQ(µi  µ8µü  µΩ$µ”  µÁ µ˚  ∂∂   ∂1$∂G  ∂[∂k  ∂y*∂í  ∂©0∂≈  ∂ﬂ,∂˘  ∑,∑+  ∑C"∑X  ∑k2∑à  ∑£∑¥  ∑√"∑ÿ  ∑Î$∏  ∏.∏0  ∏I∏[  ∏k ∏  ∏ë∏£  ∏≥∏¡  ∏—$∏Á  ∏˚*π  π+$πA  πU*πn  πÖπò  πﬂÄ·∫ß  ∫∆Å^º  º*Ä∂º—  ºÊÄãΩh  ΩwÄïΩ˛  æÄòæö  &πﬂπ‡πÍ∫ÑπÚ∫K∫∆∫«∫—º∫Ÿª&ªdª»º*º+º5º√º=ºäºÊºÁºÒΩZº˘Ω!ΩwΩxΩÇΩΩäΩ∑ææææåæ%æS¿ sï®¿ tá¿ tà¿ tãÅ\/// Create a [ThemeData] given a set of exact values. Most values must be
/// specified. They all must also be non-null except for
/// [cupertinoOverrideTheme], and deprecated members.
///
/// This will rarely be used directly. It is used by [lerp] to
/// create intermediate themes based on two themes created with the
/// [ThemeData] constructor.W¿ u¿(¿ uœ  ¿ uÓ$¿ u˝  ¿ v¿ v'  ¿ v6"¿ vE  ¿ v^#¿ vm  ¿ vá"¿ vñ  ¿ vØ¿ væ  ¿ vÀ¿ v⁄  ¿ vÌ¿ v¸  ¿ w¿ w  ¿ w.¿ w=  ¿ x¿ x&  ¿ x6¿ xE  ¿ xS¿ xb  ¿ xr#¿ xÅ  ¿ xõ¿ x™  ¿ xº¿ xÀ  ¿ x‹¿ xÎ  ¿ x˙¿ y	  ¿ y¿ y+  ¿ y9¿ yH  ¿ yW¿ yf  ¿ yy¿ yà  ¿ yô¿ y®  ¿ yΩ¿ yÃ  ¿ y‚%¿ yÒ  ¿ z"¿ z  ¿ z5¿ zD  ¿ zT¿ zc  ¿ zs#¿ zÇ  ¿ zº¿ zÀ  ¿ zŸ¿ zË  ¿ z˝¿ {  ¿ {!¿ {0  ¿ {>¿ {M  ¿ {t¿ {É  ¿ {ó¿ {¶  ¿ {∂¿ {≈  ¿ {‘¿ {„  ¿ {Û¿ |  ¿ |&¿ |'  ¿ |D¿ |S  ¿ |h¿ |w  ¿ |ä¿ |ô  ¿ |©¿ |∏  ¿ |∆¿ |’  ¿ |Á¿ |ˆ  ¿ }¿ }  ¿ }&¿ }5  ¿ }I¿ }X  ¿ }h¿ }w  ¿ }à¿ }ó  ¿ }ß¿ }∂  ¿ }Ã!¿ }€  ¿ }Û ¿ ~  ¿ ~¿ ~(  ¿ ~>'¿ ~M  ¿ ~k¿ ~z  ¿ ~é¿ ~ù  ¿ ~Ø¿ ~æ  ¿ ~œ¿ ~ﬁ  ¿ ~Ú¿   ¿  ¿   ¿ 5#¿ D  ¿ ^!¿ m  ¿ Ö!¿ î  ¿ ¨¿ ª  ¿ Œ$¿ ›  ¿ ¯¿ Ä  ¿ Ä¿ Ä%  ¿ Ä8¿ ÄG  ¿ Ä["¿ Äj  ¿ ÄÉ¿ Äí  ¿ Ä¢¿ Ä±  ¿ Ä√¿ Ä“  ¿ Ä‚¿ ÄÒ  ¿ Å¿ Å  ¿ Å$ ¿ Å3  ¿ ÅJ¿ ÅY  ¿ Åm ¿ Å|  ¿ Åì¿ Å¢  ¿ ÅÈÄ ¿ Çö  ¿ ÇπÅ^¿ Ñ  ¿ ÑÄ∂¿ Ñƒ  ¿ ÑŸÄã¿ Ö[  ¿ ÖjÄï¿ ÖÒ  ¿ ÜÄò¿ Üç  G¿ ÅÈ¿ ÅÍ¿ ÅÙ¿ Çé¿ Å¸¿ ÇU¿ Çπ¿ Ç∫¿ Çƒ¿ Éı¿ ÇÃ¿ É¿ ÉW¿ Éª¿ Ñ¿ Ñ¿ Ñ(¿ Ñ∂¿ Ñ0¿ Ñ}¿ ÑŸ¿ Ñ⁄¿ Ñ‰¿ ÖM¿ ÑÏ¿ Ö¿ Öj¿ Ök¿ Öu¿ Ö„¿ Ö}¿ Ö™¿ Ü¿ Ü¿ Ü¿ Ü¿ Ü¿ ÜF¿ áB¿ á+¿ áD¿ át¿ áb¿ áv¿ áõ¿ áè¿ áù¿ á¡¿ á∞¿ á√¿ áÓ¿ á€¿ á¿ à
¿ à¿ à.¿ à'¿ à¿ à*¿ àr¿ àx¿ àã¿ àÑ¿ ày¿ àá¿ àï¿ àõ¿ à≥¿ à¨¿ àú¿ àØ¿ àπàÏ¿ çF¿ çG¿ çKÑC/// Create a [ThemeData] based on the colors in the given [colorScheme] and
/// text styles of the optional [textTheme].
///
/// The [colorScheme] can not be null.
///
/// If [colorScheme].brightness is [Brightness.dark] then
/// [ThemeData.applyElevationOverlayColor] will be set to true to support
/// the Material dark theme method for indicating elevation by applying
/// a semi-transparent onSurface color on top of the surface color.
///
/// This is the recommended method to theme your application. As we move
/// forward we will be converting all the widget implementations to only use
/// colors or colors derived from those in [ColorScheme].
///
/// {@tool snippet}
/// This example will set up an application to use the baseline Material
/// Design light and dark themes.
///
/// ```dart
/// MaterialApp(
///   theme: ThemeData.from(colorScheme: const ColorScheme.light()),
///   darkTheme: ThemeData.from(colorScheme: const ColorScheme.dark()),
/// )
/// ```
/// {@end-tool}
///
/// See <https://material.io/design/color/> for
/// more discussion on how to pick the right colors.¿ çR ¿ çh  ¿ çx¿ çÑ  ¿ çí¿ çô   ¿ ë©ÅF¿ í~¿ í¿ íÑÄª/// A default light blue theme.
///
/// This theme does not contain text geometry. Instead, it is expected that
/// this theme is localized using text geometry using [ThemeData.localize].¿ íÜ¿ íç   ¿ íÛÅh¿ ìÏ¿ ìÌ¿ ìÒÄﬂ/// A default dark theme with a teal secondary [ColorScheme] color.
///
/// This theme does not contain text geometry. Instead, it is expected that
/// this theme is localized using text geometry using [ThemeData.localize].¿ ìÛ¿ ì˙   ¿ î_ÅÔ¿ ïˇ¿ ñ ¿ ñÅ|/// The default color theme. Same as [ThemeData.light].
///
/// This is used by [Theme.of] when no theme has been specified.
///
/// This theme does not contain text geometry. Instead, it is expected that
/// this theme is localized using text geometry using [ThemeData.localize].
///
/// Most applications would use [Theme.of], which provides correct localized
/// text geometry.¿ ñ
¿ ñ   Y¿ òòá¿ üâÜü/// Apply a semi-transparent overlay color on Material surfaces to indicate
/// elevation for dark themes.
///
/// If [useMaterial3] is true, then this flag is ignored as there is a new
/// [Material.surfaceTintColor] used to create an overlay for Material 3.
/// This flag is meant only for the Material 2 elevation overlay for dark
/// themes.
///
/// Material drop shadows can be difficult to see in a dark theme, so the
/// elevation of a surface should be portrayed with an "overlay" in addition
/// to the shadow. As the elevation of the component increases, the
/// overlay increases in opacity. [applyElevationOverlayColor] turns the
/// application of this overlay on or off for dark themes.
///
/// If true and [brightness] is [Brightness.dark], a
/// semi-transparent version of [ColorScheme.onSurface] will be
/// applied on top of [Material] widgets that have a [ColorScheme.surface]
/// color. The level of transparency is based on [Material.elevation] as
/// per the Material Dark theme specification.
///
/// If false the surface color will be used unmodified.
///
/// Defaults to false in order to maintain backwards compatibility with
/// apps that were built before the Material Dark theme specification
/// was published. New apps should set this to true for any themes
/// where [brightness] is [Brightness.dark].
///
/// See also:
///
///  * [Material.elevation], which effects the level of transparency of the
///    overlay color.
///  * [ElevationOverlay.applyOverlay], which is used by [Material] to apply
///    the overlay color to its surface color.
///  * <https://material.io/design/color/dark-theme.html>, which specifies how
///    the overlay should be applied. ¿ ü®Çs¿ ¢Ç%/// Components of the [CupertinoThemeData] to override from the Material
/// [ThemeData] adaptation.
///
/// By default, [cupertinoOverrideTheme] is null and Cupertino widgets
/// descendant to the Material [Theme] will adhere to a [CupertinoTheme]
/// derived from the Material [ThemeData]. e.g. [ThemeData]'s [ColorScheme]
/// will also inform the [CupertinoThemeData]'s `primaryColor` etc.
///
/// This cascading effect for individual attributes of the [CupertinoThemeData]
/// can be overridden using attributes of this [cupertinoOverrideTheme]. ¿ ¢ Ç~¿ §îÇ&/// Arbitrary additions to this theme.
///
/// To define extensions, pass an [Iterable] containing one or more [ThemeExtension]
/// subclasses to [ThemeData.new] or [copyWith].
///
/// To obtain an extension, use [extension].
///
/// {@tool dartpad}
/// This sample shows how to create and use a subclass of [ThemeExtension] that
/// defines two colors.
///
/// ** See code in examples/api/lib/material/theme/theme_extension.1.dart **
/// {@end-tool}
///
/// See also:
///
/// * [extension], a convenience function for obtaining a specific extension. ¿ •öÄ·¿ ¶gÄ©/// The default [InputDecoration] values for [InputDecorator], [TextField],
/// and [TextFormField] are based on this theme.
///
/// See [InputDecoration.applyDefaults]. ¿ ¶ÄÅ!¿ ßåÄÂ/// Configures the hit test size of certain Material widgets.
///
/// Defaults to a [platform]-appropriate size: [MaterialTapTargetSize.padded]
/// on mobile platforms, [MaterialTapTargetSize.shrinkWrap] on desktop
/// platforms. ¿ ß¶Å;¿ ®ÕÅ/// Default [MaterialPageRoute] transitions per [TargetPlatform].
///
/// [MaterialPageRoute.buildTransitions] delegates to a [platform] specific
/// [PageTransitionsBuilder]. If a matching builder is not found, a builder
/// whose platform is null is used. ¿ ®ÊÖÈ¿ Æ«Öô/// The platform the material widgets should adapt to target.
///
/// Defaults to the current platform, as exposed by [defaultTargetPlatform].
/// This should be used in order to style UI elements according to platform
/// conventions.
///
/// Widgets from the material library should use this getter (via [Theme.of])
/// to determine the current platform for the purpose of emulating the
/// platform behavior (e.g. scrolling or haptic effects). Widgets and render
/// objects at lower layers that try to emulate the underlying platform
/// can depend on [defaultTargetPlatform] directly, or may require
/// that the target platform be provided as an argument. The
/// [dart:io.Platform] object should only be used directly when it's critical
/// to actually know the current platform, without any overrides possible (for
/// example, when a system API is about to be called).
///
/// In a test environment, the platform returned is [TargetPlatform.android]
/// regardless of the host platform. (Android was chosen because the tests
/// were originally written assuming Android-like behavior, and we added
/// platform adaptations for other platforms later). Tests can check behavior
/// for other platforms by setting the [platform] of the [Theme] explicitly to
/// another [TargetPlatform] value, or by setting
/// [debugDefaultTargetPlatformOverride].
///
/// Determines the defaults for [typography] and [materialTapTargetSize]. ¿ Æ‘w¿ Ø=M/// A theme for customizing the colors, thickness, and shape of [Scrollbar]s. ¿ ØPÅﬁ¿ ±!Åô/// Defines the appearance of ink splashes produces by [InkWell]
/// and [InkResponse].
///
/// See also:
///
///  * [InkSplash.splashFactory], which defines the default splash.
///  * [InkRipple.splashFactory], which defines a splash that spreads out
///    more aggressively than the default.
///  * [InkSparkle.splashFactory], which defines a more aggressive and organic
///    splash with sparkle effects. ¿ ±3ë˛¿ √%ë4/// A temporary flag used to opt-in to Material 3 features.
///
/// If true, then widgets that have been migrated to Material 3 will
/// use new colors, typography and other features of Material 3. If false,
/// they will use the Material 2 look and feel.
///
/// During the migration to Material 3, turning this on may yield
/// inconsistent look and feel in your app as some widgets are migrated
/// while others have yet to be.
///
/// Defaults to false. When the Material 3 specification is complete
/// and all widgets are migrated on stable, we will change this flag to be
/// true by default. After that change has landed on stable, we will deprecate
/// this flag and remove all uses of it. At that point, the `material` library
/// will aim to only support Material 3.
///
/// ## Defaults
///
/// If a [ThemeData] is _constructed_ with [useMaterial3] set to true, then
/// some properties will get updated defaults. However, the
/// [ThemeData.copyWith] method with [useMaterial3] set to true will _not_
/// change any of these properties in the resulting [ThemeData].
///
/// <style>table,td,th { border-collapse: collapse; padding: 0.45em; } td { border: 1px solid }</style>
///
/// | Property        | Material 3 default             | Material 2 default             |
/// | :-------------- | :----------------------------- | :----------------------------- |
/// | [colorScheme]   | M3 baseline light color scheme | M2 baseline light color scheme |
/// | [typography]    | [Typography.material2021]      | [Typography.material2014]      |
/// | [splashFactory] | [InkSparkle]* or [InkRipple]   | [InkSplash]                    |
///
/// \* if the target platform is Android and the app is not
/// running on the web, otherwise it will fallback to [InkRipple].
///
/// If [brightness] is [Brightness.dark] then the default color scheme will
/// be either the M3 baseline dark color scheme or the M2 baseline dark color
/// scheme depending on [useMaterial3].
///
/// ## Affected widgets
///
/// This flag affects styles and components.
///
/// ### Styles
///   * Color: [ColorScheme], [Material] (see table above)
///   * Shape: (see components below)
///   * Typography: [Typography] (see table above)
///
/// ### Components
/// \* *new* means the new widgets/methods created since the last stable release.
///   * Badges: [Badge]
///   * Bottom app bar: [BottomAppBar]
///   * Bottom sheets: [BottomSheet]
///   * Buttons
///     - Common buttons: [ElevatedButton], [FilledButton], [FilledButton.tonal], [OutlinedButton], [TextButton]
///     - FAB: [FloatingActionButton], [FloatingActionButton.extended]
///     - Icon buttons: [IconButton], [IconButton.filled] (*new*), [IconButton.filledTonal] (*new*), [IconButton.outlined] (*new*)
///     - Segmented buttons: [SegmentedButton] (replacing [ToggleButtons])
///   * Cards: [Card]
///   * Checkbox: [Checkbox], [CheckboxListTile]
///   * Chips:
///     - [ActionChip] (used for Assist and Suggestion chips),
///     - [FilterChip], [ChoiceChip] (used for single selection filter chips),
///     - [InputChip]
///   * Date pickers: [showDatePicker], [showDateRangePicker], [DatePickerDialog], [DateRangePickerDialog], [InputDatePickerFormField]
///   * Dialogs: [AlertDialog], [Dialog.fullscreen]
///   * Divider: [Divider], [VerticalDivider]
///   * Lists: [ListTile]
///   * Menus: [MenuAnchor], [DropdownMenu], [MenuBar]
///   * Navigation bar: [NavigationBar] (replacing [BottomNavigationBar])
///   * Navigation drawer: [NavigationDrawer] (replacing [Drawer])
///   * Navigation rail: [NavigationRail]
///   * Progress indicators: [CircularProgressIndicator], [LinearProgressIndicator]
///   * Radio button: [Radio], [RadioListTile]
///   * Search: [SearchBar] (*new*), [SearchAnchor] (*new*),
///   * Snack bar: [SnackBar]
///   * Slider: [Slider], [RangeSlider]
///   * Switch: [Switch], [SwitchListTile]
///   * Tabs: [TabBar], [TabBar.secondary] (*new*)
///   * TextFields: [TextField] together with its [InputDecoration]
///   * Time pickers: [showTimePicker], [TimePickerDialog]
///   * Top app bar: [AppBar], [SliverAppBar], [SliverAppBar.medium], [SliverAppBar.large]
///
/// In addition, this flag enables features introduced in Android 12.
///   * Stretch overscroll: [MaterialScrollBehavior]
///   * Ripple: `splashFactory` (see table above)
///
/// See also:
///
///   * [Material 3 specification](https://m3.material.io/). ¿ √6áv¿  üá/// The density value for specifying the compactness of various UI components.
///
/// {@template flutter.material.themedata.visualDensity}
/// Density, in the context of a UI, is the vertical and horizontal
/// "compactness" of the elements in the UI. It is unitless, since it means
/// different things to different UI elements. For buttons, it affects the
/// spacing around the centered label of the button. For lists, it affects the
/// distance between baselines of entries in the list.
///
/// Typically, density values are integral, but any value in range may be
/// used. The range includes values from [VisualDensity.minimumDensity] (which
/// is -4), to [VisualDensity.maximumDensity] (which is 4), inclusive, where
/// negative values indicate a denser, more compact, UI, and positive values
/// indicate a less dense, more expanded, UI. If a component doesn't support
/// the value given, it will clamp to the nearest supported value.
///
/// The default for visual densities is zero for both vertical and horizontal
/// densities, which corresponds to the default visual density of components
/// in the Material Design specification.
///
/// As a rule of thumb, a change of 1 or -1 in density corresponds to 4
/// logical pixels. However, this is not a strict relationship since
/// components interpret the density values appropriately for their needs.
///
/// A larger value translates to a spacing increase (less dense), and a
/// smaller value translates to a spacing decrease (more dense).
///
/// In Material Design 3, the [visualDensity] does not override the value of
/// [IconButton.visualDensity] which defaults to [VisualDensity.standard]
/// for all platforms. To override the default value of [IconButton.visualDensity],
/// use [ThemeData.iconButtonTheme] instead.
/// {@endtemplate} ¿ À¢¿ ÀØ  ¿ À∆T¿ Ã:/// The default color of [MaterialType.canvas] [Material]. ¿ ÃP¿ Ãf8/// The color of [Material] when it is used as a [Card]. ¿ ÃtÅº¿ Œ%Åê/// {@macro flutter.material.color_scheme.ColorScheme}
///
/// This property was added much later than the theme's set of highly specific
/// colors, like [cardColor], [canvasColor] etc. New components can be defined
/// exclusively in terms of [colorScheme]. Existing components will gradually
/// migrate to it, to the extent that is possible without significant
/// backwards compatibility breaks. ¿ Œ5R¿ Œr./// The background color of [Dialog] elements. ¿ ŒåÄΩ¿ œ<Äù/// The color used for widgets that are inoperative, regardless of
/// their state. For example, a disabled checkbox (which may be
/// checked or unchecked). ¿ œNÅ¿ –UÄ/// The color of [Divider]s and [PopupMenuDivider]s, also used
/// between [ListTile]s, between rows in [DataTable]s, and so forth.
///
/// To create an appropriate [BorderSide] that uses this color, consider
/// [Divider.createBorderSide]. ¿ –f`¿ –ºG/// The focus color used indicate that a component has the input focus. ¿ –ÀÄä¿ —Gk/// The highlight color used during ink splash animations or to
/// indicate an item in a menu is selected. ¿ —Zq¿ —¬W/// The color to use for hint text or placeholder text, e.g. in
/// [TextField] fields. ¿ —–p¿ “6U/// The hover color used to indicate when a pointer is hovering over a
/// component. ¿ “EV¿ “ç9/// The color of the selected tab indicator in a tab bar. ¿ “†ÅÖ¿ ‘Å`/// The background color for major parts of the app (toolbars, tab bars, etc)
///
/// The theme's [colorScheme] property contains [ColorScheme.primary], as
/// well as a color that contrasts well with the primary color called
/// [ColorScheme.onPrimary]. It might be simpler to just configure an app's
/// visuals in terms of the theme's [colorScheme]. ¿ ‘*J¿ ‘d+/// A darker version of the [primaryColor]. ¿ ‘yL¿ ‘¥,/// A lighter version of the [primaryColor]. ¿ ‘ Äº¿ ’oÄî/// The default color of the [Material] that underlies the [Scaffold]. The
/// background color for a typical material app or a page within the app. ¿ ’ãÅH¿ ÷øS/// The color of the header of a [PaginatedDataTable] when there are selected rows. ¿ ◊‘¿ ◊·  ¿ ◊˜ÅÒ¿ Ÿ›Å«/// The color that the [Material] widget uses to draw elevation shadows.
///
/// Defaults to fully opaque black.
///
/// Shadows can be difficult to see in a dark theme, so the elevation of a
/// surface should be rendered with an "overlay" in addition to the shadow.
/// As the elevation of the component increases, the overlay increases in
/// opacity. The [applyElevationOverlayColor] property turns the elevation
/// overlay on or off for dark themes. ¿ ŸÌÄî¿ ⁄vt/// The color of ink splashes.
///
/// See also:
///  * [splashFactory], which defines the appearance of the splash. ¿ ⁄ÜÄ≠¿ €Äá/// The color used for widgets in their inactive (but enabled)
/// state. For example, an unchecked checkbox. See also [disabledColor]. ¿ €Wa¿ €ØA/// An icon theme that contrasts with the card and canvas colors. ¿ €Ω_¿ ‹8/// An icon theme that contrasts with the primary color. ¿ ‹!Z¿ ‹k7/// A text theme that contrasts with the primary color. ¿ ‹Äa¿ ‹ÿE/// Text with a color that contrasts with the card and canvas colors. ¿ ‹ÊÄß¿ ›ÉÄÖ/// The color and geometry [TextTheme] values used to configure [textTheme].
///
/// Defaults to a [platform]-appropriate typography. ¿ ›©Ä™¿ ﬁD{/// A theme for customizing icons of [BackButtonIcon], [CloseButtonIcon],
/// [DrawerButtonIcon], or [EndDrawerButtonIcon]. ¿ ﬁXÄâ¿ ﬁ÷g/// A theme for customizing the color, elevation, brightness, iconTheme and
/// textTheme of [AppBar]s. ¿ ﬁÊT¿ ﬂ02/// A theme for customizing the color of [Badge]s. ¿ ﬂ?w¿ ﬂ´K/// A theme for customizing the color and text style of a [MaterialBanner]. ¿ ﬂª|¿ ‡&P/// A theme for customizing the shape, elevation, and color of a [BottomAppBar]. ¿ ‡<Äõ¿ ‡ø[/// A theme for customizing the appearance and layout of [BottomNavigationBar]
/// widgets. ¿ ‡‹|¿ ·HN/// A theme for customizing the color, elevation, and shape of a bottom sheet. ¿ ·]w¿ ·∆M/// A theme for customizing the appearance and layout of [ButtonBar] widgets. ¿ ·ŸÄâ¿ ‚Wc/// Defines the default configuration of button widgets, like [DropdownButton]
/// and [ButtonBar]. ¿ ‚gÄà¿ ‚Êh/// The colors and styles used to render [Card].
///
/// This is the value returned from [CardTheme.of]. ¿ ‚Ùt¿ „[L/// A theme for customizing the appearance and layout of [Checkbox] widgets. ¿ „mÄç¿ „Òi/// The colors and styles used to render [Chip]s.
///
/// This is the value returned from [ChipTheme.of]. ¿ „ˇ}¿ ‰nQ/// A theme for customizing the appearance and layout of [DataTable]
/// widgets. ¿ ‰ÅÄÜ¿ ‰¯X/// A theme for customizing the appearance and layout of [DatePickerDialog]
/// widgets. ¿ ÂR¿ ÂS2/// A theme for customizing the shape of a dialog. ¿ ÂcÄë¿ ÂËi/// A theme for customizing the color, thickness, and indents of [Divider]s,
/// [VerticalDivider]s, etc. ¿ Â˘n¿ Ê\J/// A theme for customizing the appearance and layout of [Drawer] widgets. ¿ ÊlÄÄ¿ Ê€P/// A theme for customizing the appearance and layout of [DropdownMenu] widgets. ¿ ÊÒÄé¿ ÁlX/// A theme for customizing the appearance and internal layout of
/// [ElevatedButton]s. ¿ ÁÑx¿ ÁÍF/// A theme for customizing the visual properties of [ExpansionTile]s. ¿ ËÄà¿ ËxV/// A theme for customizing the appearance and internal layout of
/// [FilledButton]s. ¿ ËéÄû¿ È\/// A theme for customizing the shape, elevation, and color of a
/// [FloatingActionButton]. ¿ È1ÄÇ¿ È§T/// A theme for customizing the appearance and internal layout of
/// [IconButton]s. ¿ È∏i¿ ÍA/// A theme for customizing the appearance of [ListTile] widgets. ¿ Í&Ä≥¿ ÍÕÄã/// A theme for customizing the color, shape, elevation, and other [MenuStyle]
/// aspects of the menu bar created by the [MenuBar] widget. ¿ ÍﬁÄ√¿ ÎíÄï/// A theme for customizing the color, shape, elevation, and text style of
/// cascading menu buttons created by [SubmenuButton] or [MenuItemButton]. ¿ Î¶ÄØ¿ ÏLÄç/// A theme for customizing the color, shape, elevation, and other [MenuStyle]
/// attributes of menus created by the [SubmenuButton] widget. ¿ ÏZÄõ¿ Ï„g/// A theme for customizing the background color, text style, and icon themes
/// of a [NavigationBar]. ¿ Ï˙Ä§¿ Ìâj/// A theme for customizing the background color, text style, and icon themes
/// of a [NavigationDrawer]. ¿ Ì£Ä©¿ Ó9s/// A theme for customizing the background color, elevation, text style, and
/// icon themes of a [NavigationRail]. ¿ ÓQÄé¿ ÓÃX/// A theme for customizing the appearance and internal layout of
/// [OutlinedButton]s. ¿ Ó‰Äá¿ Ô][/// A theme for customizing the color, shape, elevation, and text style of
/// popup menus. ¿ ÔpÄè¿ ÔÈU/// A theme for customizing the appearance and layout of [ProgressIndicator] widgets. ¿ k¿ eI/// A theme for customizing the appearance and layout of [Radio] widgets. ¿ tw¿ ›M/// A theme for customizing the appearance and layout of [SearchBar] widgets. ¿ Äî¿ Òuh/// A theme for customizing the appearance and layout of search views created by [SearchAnchor] widgets. ¿ ÒâÄâ¿ Ò˛S/// A theme for customizing the appearance and layout of [SegmentedButton] widgets. ¿ ÚÄî¿ Ú†l/// The colors and shapes used to render [Slider].
///
/// This is the value returned from [SliderTheme.of]. ¿ Ú∞{¿ ÛS/// A theme for customizing colors, shape, elevation, and behavior of a [SnackBar]. ¿ Û0n¿ ÛìJ/// A theme for customizing the appearance and layout of [Switch] widgets. ¿ Û£p¿ ÙP/// A theme for customizing the size, shape, and color of the tab bar indicator. ¿ ÙÄÇ¿ ÙãT/// A theme for customizing the appearance and internal layout of
/// [TextButton]s. ¿ Ùü¿ ıM/// A theme for customizing the appearance and layout of [TextField] widgets. ¿ ı#y¿ ıçM/// A theme for customizing the appearance and layout of time picker widgets. ¿ ı°s¿ ˆA/// Defines the default configuration of [ToggleButtons] widgets. ¿ ˆÄ•¿ ˆ≤{/// A theme for customizing the visual properties of [Tooltip]s.
///
/// This is the value returned from [TooltipTheme.of]. ¿ ˆ¯ÉÉ¿ ˙aÇÖ/// Specifies which overscroll indicator to use on [TargetPlatform.android].
///
/// When null, the default value of
/// [MaterialScrollBehavior.androidOverscrollIndicator] is
/// [AndroidOverscrollIndicator.glow].
///
/// This property is deprecated. Use the [useMaterial3] flag instead, or
/// override [ScrollBehavior.buildOverscrollIndicator].
///
/// See also:
///
///   * [StretchingOverscrollIndicator], a Material Design edge effect
///     that transforms the contents of a scrollable when overscrolled.
///   * [GlowingOverscrollIndicator], an edge effect that paints a glow
///     over the contents of a scrollable when overscrolled.¿ ˘ú¿ ˘ù¿ ˘ß¿ ˙;¿ ˘≠¿ ˙¿ ˚†¿ ˚≠  ¿ ¸Ã¿ ¸Ÿ  ¿ ˛⁄#¿ ˛Á  ¿ ˇ€1¿ ˇÏ ¿ ¿,ÅÄØ¿,¿ ¿,·¿,Î¿-¿,Ï¿-¿-¿-/¿-¿ ñRÅ¿ óJÄﬁ/// The overall theme brightness.
///
/// The default [TextStyle] color for the [textTheme] is black if the
/// theme is constructed with [Brightness.light] and white if the
/// theme is constructed with [Brightness.dark].   ¿  ΩÄ‚¿ Àv,/// The default color of the [BottomAppBar].  ¿  Ó¿  Ô¿  ˘¿ Àh¿ À¿ À/¿ ÷ÿÄ˘¿ ◊™./// The color used to highlight selected rows.  ¿ ◊	¿ ◊
¿ ◊¿ ◊ú¿ ◊¿ ◊e¿ ˙ÄÅ¿ ˚ÇÄÅ/// Obsolete property that was used for input validation errors, e.g. in
/// [TextField] fields. Use [ColorScheme.error] instead.  ¿ ˚¿ ˚¿ ˚¿ ˚t¿ ˚¿ ˚=¿ ˚ΩÅ¿ ¸§a/// Obsolete property that was unused by the framework.
/// Use [ColorScheme.background] instead.  ¿ ¸#¿ ¸$¿ ¸.¿ ¸ñ¿ ¸4¿ ¸_¿ ¸ÓÅÈ¿ ˛¶s/// The color used to highlight the active states of toggleable widgets like
/// [Switch], [Radio], and [Checkbox].  ¿ ˝f¿ ˝g¿ ˝q¿ ˛ò¿ ˝w¿ ˝¬¿ ˝˛¿ ˛`¿oêä¿o§   ¿oê¿oë	¿ §£ÄÛ¿ •pÄø/// Used to obtain a particular [ThemeExtension] from [extensions].
///
/// Obtain with `Theme.of(context).extension<MyThemeExtension>()`.
///
/// See [extensions] for an interactive example.¿ •z¿ •z  ¿ ¨ ¿ ˚Ä◊/// Caches localized themes to speed up the [localize] method.
/// Creates a copy of this theme but with the given fields replaced with the new values.
///
/// The [brightness] value is applied to the [colorScheme]. X¿8 ¿?  ¿^3¿|  ¿ó-¿ª  ¿ *¿·  ¿˙,¿  ¿,*¿C  ¿\¿m  ¿z"¿è  ¿¢+¿¡  ¿”¿⁄  ¿Î¿˚  ¿’¿‚  ¿Ò¿˘  ¿	¿  ¿¿-  ¿=¿E  ¿_¿g  ¿y¿Å  ¿í¿ö  ¿©¿±  ¿ƒ¿Ã  ¿⁄¿‚  ¿Ò¿˘  ¿¿  ¿%¿-  ¿B¿J  ¿`¿h  ¿Ñ¿å  ¿•¿≠  ¿Ω¿≈  ¿’¿›  ¿¿'  ¿5¿E  ¿Z¿f  ¿{¿á  ¿ï¿¢  ¿…$¿ﬂ  ¿Û¿  ¿¿"  ¿1$¿K  ¿[$¿o  ¿Ö6¿§  ¿¡&¿ÿ  ¿Ì"¿	  ¿	¿	'  ¿	7¿	C  ¿	Q ¿	e  ¿	w¿	á  ¿	ï"¿	™  ¿	Ω$¿	”  ¿	Á¿	ı  ¿
¿
  ¿
)¿
;  ¿
K(¿
c  ¿
y,¿
ì  ¿
´*¿
ƒ  ¿
€(¿
Û  ¿	8¿)  ¿G$¿]  ¿q ¿Ö  ¿ó¿™  ¿ª$¿—  ¿Â¿ı  ¿*¿  ¿30¿O  ¿i,¿É  ¿õ,¿µ  ¿Õ"¿‚  ¿ı2¿  ¿-¿>  ¿M"¿b  ¿u$¿ã  ¿ü.¿∫  ¿”¿Â  ¿ı ¿	  ¿¿-  ¿=¿K  ¿[$¿q  ¿Ö*¿û  ¿µ$¿À  ¿ﬂ*¿¯  ¿¿"  ¿iÄ·¿1  ¿PÅ^¿ö  ¿¥Ä∂¿[  ¿pÄå¿Û  ¿Äñ¿ä  ¿ûÄò¿&  &¿i¿j¿t¿¿|¿’¿P¿Q¿[¿å¿c¿∞¿Ó¿R¿¥¿µ¿ø¿M¿«¿¿p¿q¿{¿Â¿É¿´¿¿¿¿|¿¿B¿û¿ü¿©¿¿±¿ﬂ¿-5Ü¿.ÙÅü/// Returns a new theme built by merging the text geometry provided by the
/// [localTextGeometry] theme with the [baseTheme].
///
/// For those text styles in the [baseTheme] whose [TextStyle.inherit] is set
/// to true, the returned theme's text styles inherit the geometric properties
/// of [localTextGeometry]. The resulting text styles' [TextStyle.inherit] is
/// set to those provided by [localTextGeometry]. ¿.˝¿/  ¿/¿/   ¿3?É¡¿45ÄŸ/// Determines whether the given [Color] is [Brightness.light] or
/// [Brightness.dark].
///
/// This compares the luminosity of the given color to a threshold value that
/// matches the Material Design specification. ¿4P¿4W   ¿7É$¿7»Äç/// Linearly interpolate between two [extensions].
///
/// Includes all theme extensions in [a] and [b].
///
/// {@macro dart.ui.shadow.lerp} ¿7›¿7Ë  ¿7Í¿7ı  ¿7˜¿7ˇ   ¿:,Çf¿;Ä©/// Convert the [extensionsIterable] passed to [ThemeData.new] or [copyWith]
/// to the stored [extensions] map, where each entry's key consists of the extension's type. ¿;#4¿;F   ¿<ñû˝¿=+y/// Linearly interpolate between two themes.
///
/// The arguments must not be null.
///
/// {@macro dart.ui.shadow.lerp} ¿=0¿=;  ¿==¿=H  ¿=J¿=R   ¿[óìı¿[±  ¿[¥¿[º  ¿[ó¿[ò¿y´∂è¿yº  ¿y–&¿yÌ  ¿y´¿y¨¢<¢=¿∞>íî¿µËÑÅ/// A [CupertinoThemeData] that defers unspecified theme attributes to an
/// upstream Material [ThemeData].
///
/// This type of [CupertinoThemeData] is used by the Material [Theme] to
/// harmonize the [CupertinoTheme] with the material theme's colors and text
/// styles.
///
/// In the most basic case, [ThemeData]'s `cupertinoOverrideTheme` is null and
/// descendant Cupertino widgets' styling is derived from the Material theme.
///
/// To override individual parts of the Material-derived Cupertino styling,
/// `cupertinoOverrideTheme`'s construction parameters can be used.
///
/// To completely decouple the Cupertino styling from Material theme derivation,
/// another [CupertinoTheme] widget can be inserted as a descendant of the
/// Material [Theme]. On a [MaterialApp], this can be done using the `builder`
/// parameter on the constructor.
///
/// See also:
///
///  * [CupertinoThemeData], whose null constructor parameters default to
///    reasonable iOS styling defaults rather than harmonizing with a Material
///    theme.
///  * [Theme], widget which inserts a [CupertinoTheme] with this
///    [MaterialBasedCupertinoThemeData]. ¿∂'Åy ¿∂‹¿∂˚Ä¨/// Create a [MaterialBasedCupertinoThemeData] based on a Material [ThemeData]
/// and its `cupertinoOverrideTheme`.
///
/// The [materialTheme] parameter must not be null.¿∑ ¿∑  ¿∑+¿∑/¿∑0¿∑1¿∑û¿∑7¿∑J¿∑ç¿∑p¿∑K¿∑X¿∑Y¿∑s¿∑y¿∑ã¿∑å¿∑é¿∑è¿∑ò¿∑ô¿∑§Ç{¿∑√¿∑ƒ¿∑≈ ¿∑À¿∑—  ¿∑‰¿∑Í  ¿∏∞¿∏µ¿∏∂¿∏π¿∫¿∏√¿∏⁄¿∏€¿∏Ô¿π¿π¿π¿π4¿π5¿πV¿πm¿πn¿πÅ¿πò¿πô¿πµ¿πÃ¿πÕ¿πÓ¿∫¿∫¿∫#¿∫3  ¿∫E9¿∫g  ¿∫Éi¿∫û   ¿∫É¿∫Ñ¿∫q¿ª   ¿∫¿∫Ò¿ªeÄâ¿ª{   ¿ªe¿ªf¿ªÚÄã¿º   ¿ªÚ¿ªÛ¿ºÅÖ¿æ„Ç!/// Copies the [ThemeData]'s `cupertinoOverrideTheme`.
///
/// Only the specified override attributes of the [ThemeData]'s
/// `cupertinoOverrideTheme` and the newly specified parameters are in the
/// returned [CupertinoThemeData]. No derived attributes from iOS defaults or
/// from cascaded Material theme attributes are copied.
///
/// This [copyWith] cannot change the base Material [ThemeData]. To change the
/// base Material [ThemeData], create a new Material [Theme] and use
/// [ThemeData.copyWith] on the Material [ThemeData] instead. ¿æÚ¿æˇ  ¿ø¿ø  ¿ø'¿ø/  ¿øK!¿ød  ¿ør¿øz  ¿øë¿øô  ¿øµ¿øº  ¿æ∑¿æ∏¿¡ÜÅJ¿¡•  ¿¡±¿¡ø  ¿¡Ü¿¡á ¿¬‘Ç‘¿¬Â  ¿√I ¿√
¿√$ ¿√%¿√+  ¿√5¿√;   ¿√Q¿√a  ¿√n!¿√~  ¿√˚b¿ƒ   ¿√˚¿√¸¿ƒaÅE¿ƒ{  ¿ƒ~¿ƒÜ  ¿ƒa¿ƒb¿¬‘¿¬’¿≈™Ñ∫¿∆°Ä/// Cache of objects of limited size that uses the first in first out eviction
/// strategy (a.k.a least recently inserted).
///
/// The key that was inserted before all other keys is evicted first, i.e. the
/// one inserted least recently.¿∆¨¿∆¨¿∆Ø¿∆Ø¿∆∂9 ¿∆∂¿∆¿ ¿∆¡¿∆«  ¿∆÷¿∆‹¿∆Ì¿∆Í¿∆›¿∆Ï¿∆ÛÄÀ¿«≠Ä£/// In Dart the map literal uses a linked hash-map implementation, whose keys
/// are stored such that [Map.keys] returns them in the order they were
/// inserted.¿«º¿«Ω¿«∂¿«ª¿«∑¿«∫¿«√ÄŒ¿»ÖÄØ/// Maximum number of entries to store in the cache.
///
/// Once this many entries have been cached, the entry inserted least recently
/// is evicted when adding a new entry.  ¿»ñÅÃ¿…JÄ©/// Returns the previously cached value for the given key, if available;
/// if not, calls the given callback to obtain it first.
///
/// The arguments must not be null. ¿…V¿…Y  ¿…]¿…k    ¿ f£¡¿œÊÖn/// Defines the visual density of user interface components.
///
/// Density, in the context of a UI, is the vertical and horizontal
/// "compactness" of the components in the UI. It is unitless, since it means
/// different things to different UI components.
///
/// The default for visual densities is zero for both vertical and horizontal
/// densities, which corresponds to the default visual density of components in
/// the Material Design specification. It does not affect text sizes, icon
/// sizes, or padding values.
///
/// For example, for buttons, it affects the spacing around the child of the
/// button. For lists, it affects the distance between baselines of entries in
/// the list. For chips, it only affects the vertical size, not the horizontal
/// size.
///
/// Here are some examples of widgets that respond to density changes:
///
///  * [Checkbox]
///  * [Chip]
///  * [ElevatedButton]
///  * [IconButton]
///  * [InputDecorator] (which gives density support to [TextField], etc.)
///  * [ListTile]
///  * [MaterialButton]
///  * [OutlinedButton]
///  * [Radio]
///  * [RawMaterialButton]
///  * [TextButton]
///
/// See also:
///
///  * [ThemeData.visualDensity], where this property is used to specify the base
///    horizontal density of Material components.
///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html). ¿–Ç ¿–Ú¿–ˇÄ’/// A const constructor for [VisualDensity].
///
/// All of the arguments must be non-null, and [horizontal] and [vertical]
/// must be in the interval between [minimumDensity] and [maximumDensity],
/// inclusive.¿—¿—  ¿—!¿—'   ¿—¿—1¿—=¿—C¿—^¿—M¿—D¿—P¿—h¿—n¿—â¿—x¿—o¿—{¿—ì¿—ô¿—¥¿—£¿—ö¿—¶¿—æ¿—ƒ¿—·¿—–¿—≈¿—”¿—Î¿—Ò¿“¿—˝¿—Ú¿“ ¿“L¿“K /// The minimum allowed density.¿“\¿“]¿“eK¿“ú /// The maximum allowed density.¿“≠¿“µÅ-¿”»ÄÌ/// The default profile for [VisualDensity] in [ThemeData].
///
/// This default value represents a visual density that is less dense than
/// either [comfortable] or [compact], and corresponds to density values of
/// zero in both axes.¿””¿”‡¿”·¿”ÁÇ¿’¡ÅÆ/// The profile for a "comfortable" interpretation of [VisualDensity].
///
/// Individual components will interpret the density value independently,
/// making themselves more visually dense than [standard] and less dense than
/// [compact] to different degrees based on the Material Design specification
/// of the "comfortable" setting for their particular use case.
///
/// It corresponds to a density value of -1 in both axes.¿’œ¿’‹¿’˝¿’Á¿’›¿’È¿’Í¿’˜¿’Ô¿’˘¿’˙¿÷Ç¿◊ÕÅû/// The profile for a "compact" interpretation of [VisualDensity].
///
/// Individual components will interpret the density value independently,
/// making themselves more visually dense than [standard] and [comfortable] to
/// different degrees based on the Material Design specification of the
/// "comfortable" setting for their particular use case.
///
/// It corresponds to a density value of -2 in both axes.¿◊◊¿◊‰¿ÿ¿◊Ô¿◊Â¿◊Ò¿◊Ú¿◊ˇ¿◊˜¿ÿ¿ÿ¿ﬁÙÇ¿·⁄Çº/// The horizontal visual density of UI components.
///
/// This property affects only the horizontal spacing between and within
/// components, to allow for different UI visual densities. It does not affect
/// text sizes, icon sizes, or padding values. The default value is 0.0,
/// corresponding to the metrics specified in the Material Design
/// specification. The value can range from [minimumDensity] to
/// [maximumDensity], inclusive.
///
/// See also:
///
///  * [ThemeData.visualDensity], where this property is used to specify the base
///    horizontal density of Material components.
///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html). ¿·ÈÇË¿‰…Ç∂/// The vertical visual density of UI components.
///
/// This property affects only the vertical spacing between and within
/// components, to allow for different UI visual densities. It does not affect
/// text sizes, icon sizes, or padding values. The default value is 0.0,
/// corresponding to the metrics specified in the Material Design
/// specification. The value can range from [minimumDensity] to
/// [maximumDensity], inclusive.
///
/// See also:
///
///  * [ThemeData.visualDensity], where this property is used to specify the base
///    vertical density of Material components.
///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html). ¿ÿÇ∫¿⁄yÇ:/// Returns a [VisualDensity] that is adaptive based on the current platform
/// on which the framework is executing, from [defaultTargetPlatform].
///
/// When [defaultTargetPlatform] is a desktop platform, this returns
/// [compact], and for other platforms, it returns a default-constructed
/// [VisualDensity].
///
/// See also:
///
/// * [defaultDensityForPlatform] which returns a [VisualDensity] that is
///   adaptive based on the platform given to it.
/// * [defaultTargetPlatform] which returns the platform on which the
///   framework is currently executing.   ¿‰÷Çß¿Ê@ÅP/// The base adjustment in logical pixels of the visual density of UI components.
///
/// The input density values are multiplied by a constant to arrive at a base
/// size adjustment that fits Material Design guidelines.
///
/// Individual components may adjust this value based upon their own
/// individual interpretation of density.   ¿Ï)B¿Ï=   ¿Ï)¿Ï*¿⁄…ÇÙ¿‹SÅb/// Returns a [VisualDensity] that is adaptive based on the given [platform].
///
/// For desktop platforms, this returns [compact], and for other platforms, it
/// returns a default-constructed [VisualDensity].
///
/// See also:
///
/// * [adaptivePlatformDensity] which returns a [VisualDensity] that is
///   adaptive based on [defaultTargetPlatform]. ¿‹m¿‹}   ¿›¡Å/¿ﬁ0\/// Copy the current [VisualDensity] with the given values replacing the
/// current values. ¿ﬁ?¿ﬁH  ¿ﬁW¿ﬁ`   ¿ÁÅÅE¿Á»//// Linearly interpolate between two densities. ¿ÁÕ¿Á‹  ¿Áﬁ¿ÁÌ  ¿ÁÔ¿Á˜   ¿Ë Çn¿È›Ä˘/// Return a copy of [constraints] whose minimum width and height have been
/// updated with the [baseSizeAdjustment].
///
/// The resulting minWidth and minHeight values are clamped to not exceed the
/// maxWidth and maxHeight values, respectively. ¿ÈÚ¿Í   ¿Î<ÄÈ¿ÎV  ¿ÎY¿Îa  ¿Î<¿Î=¿ÏoÅ¿ÏÄ  ¿Ïî&¿Ï±  ¿Ïo¿Ïp¿ÌéÄó¿Ì°   ¿Ìé¿Ìè¿œ’¿œ÷ ë0ÑìŒÇò/// Configures the tap target and layout size of certain Material widgets.
///
/// Changing the value in [ThemeData.materialTapTargetSize] will affect the
/// accessibility experience.
///
/// Some of the impacted widgets include:
///
///   * [FloatingActionButton], only the mini tap target size is increased.
///   * [MaterialButton]
///   * [OutlinedButton]
///   * [TextButton]
///   * [ElevatedButton]
///   * [IconButton]
///   * The time picker widget ([showTimePicker])
///   * [SnackBar]
///   * [Chip]
///   * [RawChip]
///   * [InputChip]
///   * [ChoiceChip]
///   * [FilterChip]
///   * [ActionChip]
///   * [Radio]
///   * [Switch]
///   * [Checkbox]  ìËÄÓî–Ä›/// Expands the minimum tap target size to 48px by 48px.
///
/// This is the default value of [ThemeData.materialTapTargetSize] and the
/// recommended size to conform to Android accessibility scanner
/// recommendations. î€iï:Z/// Shrinks the tap target size to the minimum provided by the Material
/// specification.          é˘:è è"è'è2è(èˆ7ê êê!ê,ê"êº9ê» ê‰êÈêÙêÍê˜6ë ëë!ë,ë"¿Ô?Ñ≥¿ÔQ Äº¿Ôg¿Ôr¿ÛÒ¿ÔÄ¿Ôv¿ÔÇ¿Ôå¿Ôç¿Ôù¿Ôñ¿Ôü¿Ô§¿ÔØ¿Ô•¿ÔΩ¿Ô¥¿Ôø¿Ôƒ¿Ôœ¿Ô≈¿Ô‰¿Ô‘¿ÔÊ¿ÔÎ¿Ôˆ¿ÔÏ¿¿Ô˚¿¿¿¿¿-¿$¿/¿4¿?¿5¿O¿D¿Q¿V¿a¿W¿x¿f¿z¿¿ä¿Ä¿£¿è¿•¿™¿µ¿´¿¬¿∫¿ƒ¿…¿‘¿ ¿„¿Ÿ¿Â¿Í¿ı¿Î¿Ò¿˙¿Ò¿Ò¿Ò¿Ò¿Ò5¿Ò"¿Ò7¿Ò<¿ÒG¿Ò=¿ÒQ¿ÒL¿ÒS¿ÒX¿Òc¿ÒY¿Òo¿Òh¿Òq¿Òv¿ÒÅ¿Òw¿Òî¿ÒÜ¿Òñ¿Òõ¿Ò¶¿Òú¿Òª¿Ò´¿ÒΩ¿Ò¬¿ÒÕ¿Ò√¿Ò‹¿Ò“¿Òﬁ¿Ò„¿ÒÓ¿Ò‰¿Òˇ¿ÒÛ¿Ú¿Ú¿Ú¿Ú¿Ú¿Ú¿Ú¿Ú$¿Ú/¿Ú%¿Ú=¿Ú4¿Ú?¿ÚD¿ÚO¿ÚE¿Úb¿ÚT¿Úd¿Úi¿Út¿Új¿Úâ¿Úy¿Úã¿Úê¿Úõ¿Úë¿Úß¿Ú†¿Ú©¿ÚÆ¿Úπ¿ÚØ¿ÚÃ¿Úæ¿ÚŒ¿Ú”¿Úﬁ¿Ú‘¿ÚÈ¿Ú„¿ÚÎ¿Ú¿Ú˚¿ÚÒ¿Û¿Û ¿Û¿Û¿Û¿Û¿Û*¿Û¿Û,¿Û1¿Û<¿Û2¿ÛQ¿ÛA¿ÛS¿ÛX¿Ûc¿ÛY¿Ûv¿Ûh¿Ûx¿Û}¿Ûà¿Û~¿Û‹¿Û—¿Ûﬁ¿Û„¿ÛÓ¿Û‰¿ÛıÑ±¿Ù Äº¿Ù¿Ù'¿¯•¿Ù5¿Ù+¿Ù7¿ÙA¿ÙB¿ÙQ¿ÙJ¿ÙS¿ÙX¿Ùc¿ÙY¿Ùq¿Ùh¿Ùs¿Ùx¿ÙÉ¿Ùy¿Ùò¿Ùà¿Ùö¿Ùü¿Ù™¿Ù†¿Ù¡¿ÙØ¿Ù√¿Ù»¿Ù”¿Ù…¿Ù·¿Ùÿ¿Ù„¿ÙË¿ÙÛ¿ÙÈ¿ı¿Ù¯¿ı¿ı
¿ı¿ı¿ı,¿ı¿ı.¿ı3¿ı>¿ı4¿ıW¿ıC¿ıY¿ı^¿ıi¿ı_¿ıv¿ın¿ıx¿ı}¿ıà¿ı~¿ıó¿ıç¿ıô¿ıû¿ı©¿ıü¿ıø¿ıÆ¿ı¡¿ı∆¿ı—¿ı«¿ıÈ¿ı÷¿ıÎ¿ı¿ı˚¿ıÒ¿ˆ¿ˆ ¿ˆ¿ˆ¿ˆ¿ˆ¿ˆ#¿ˆ¿ˆ%¿ˆ*¿ˆ5¿ˆ+¿ˆH¿ˆ:¿ˆJ¿ˆO¿ˆZ¿ˆP¿ˆo¿ˆ_¿ˆq¿ˆv¿ˆÅ¿ˆw¿ˆê¿ˆÜ¿ˆí¿ˆó¿ˆ¢¿ˆò¿ˆ≥¿ˆß¿ˆµ¿ˆ∫¿ˆ≈¿ˆª¿ˆ—¿ˆ ¿ˆ”¿ˆÿ¿ˆ„¿ˆŸ¿ˆÒ¿ˆË¿ˆÛ¿ˆ¯¿˜¿ˆ˘¿˜¿˜¿˜¿˜¿˜(¿˜¿˜=¿˜-¿˜?¿˜D¿˜O¿˜E¿˜[¿˜T¿˜]¿˜b¿˜m¿˜c¿˜Ä¿˜r¿˜Ç¿˜á¿˜í¿˜à¿˜ù¿˜ó¿˜ü¿˜§¿˜Ø¿˜•¿˜π¿˜¥¿˜ª¿˜¿¿˜À¿˜¡¿˜ﬁ¿˜–¿˜‡¿˜Â¿˜¿˜Ê¿¯¿˜ı¿¯¿¯¿¯¿¯¿¯*¿¯¿¯,¿¯1¿¯<¿¯2¿¯ê¿¯Ö¿¯í¿¯ó¿¯¢¿¯ò  äÎ <ÄÜÄ§Ä•ÄŒÄœÄ¯Å"Å#ÅAÅcÅÄÅõÅ∑Å€ÇÇ(ÇHÇdÇ~ÇúÇ∂Ç“ÇËÉÉ!ÉBÉ^É{ÉóÉ∫ÉﬂÑÑ&ÑRÑsÑçÑ®Ñ¬Ñ¸ÖÖ4ÖSÖqÖíÖ¨Ö–Ö˜ÜÜAÜgÜáÜØÜ ÜÈá	á*áPáláãáßáƒáÂà	à#àDàhàÖàüà†àÿàŸàÒâââXâ\âüâ£âÏä<äçä£äßäªãã#ã'ãtãÑã¡ãå
åå'å?å@åÉå¥å‘å’ççç?çáçâçäçÿé'éxé…é˘è5è6èÉè”èˆê/ê0ê|êºê˜ë/ë0ë{ëëÀëÈëÌííígíÄíôíÆí«í‹ìì!ì0ìBìVìkìÄìïì•ì∂ì…ìÊî!î'îtî∑îŒîÿîŸï#ï8ïFïHïIïôï¡ï≈ññ^ñ°ñ•ñıóFóîó¿óƒòò`ò©òÙôEôêô≈ô…ô›ö)ösö¡ö›ö·õ7õ;õGõRõnõ∏õ¡õ◊úúú5úNúàúïú†ú©úØú∑ú«úÀúﬂú„ù ù`ùßùÏû3ûwû™ûÒüüüoüsüüêü®ü‡†††_†h†~†ñ†≈†–°°,°H°S°o°†°´°¥°∫°¬°“°÷¢¢;¢<¢G¢m¢¨¢≤££O£õ£°£Ï§6§Å§œ••T•Z•£•¶<¶r¶x¶æßß\ßéßîß‚®
®®Y®¢®®®È©5©Z©`©p©v©¡©ˇ™^™∫™–´ ´n´º´‡´·´˛¨$¨]¨ê¨¿¨Ú≠"≠@≠h≠ô≠±≠”≠‡Æ/Æ~Æ∂Æ“ÆÍØ ØØ:Ø\ØvØèØ¶Ø¡Ø◊ØÓ∞	∞"∞?∞]∞∞£∞ƒ∞‹∞Ù±±6±N±t±â±ß±Ã±Ì≤≤#≤;≤e≤É≤£≤Õ≤˜≥3≥_≥á≥©≥√≥È¥¥/¥Y¥w¥õ¥Ω¥ÎµµMµ{µπµ„∂	∂-∂W∂u∂•∂€∑∑?∑g∑ü∑ø∑Á∏∏E∏g∏ç∏Ø∏Õ∏˜π'πQπÅπ•π€πÏ∫E∫Ä∫Ü∫¬∫”ª ª^ª¬ª˛ºº&º7ºÑºøº≈º‚ºÛΩΩVΩ\ΩsΩÑΩ±ΩÏΩÚæææMæàæéæ¨æ≥æ–øøBø}ø•øΩø‡¿ @¿ @"¿ @b¿ @É¿ @§¿ @«¿ A¿ A¿ AM¿ AÄ¿ A…¿ AÂ¿ B3¿ BV¿ B°¿ B¬¿ B√¿ B–¿ C<¿ Cx¿ C∂¿ CÛ¿ DY¿ Dô¿ DÃ¿ DÒ¿ EZ¿ Eb¿ E´¿ E¨¿ F¿ F_¿ F¡¿ F¬¿ G¿ G:¿ Gh¿ G¢¿ G”¿ G¸¿ H(¿ HZ¿ Hí¿ H¬¿ HÍ¿ I.¿ I4¿ I^¿ IÅ¿ I¬¿ J#¿ Jo¿ Jµ¿ K¿ Kz¿ K◊¿ L4¿ LV¿ Lô¿ L∆¿ M¿ MT¿ Mô¿ M“¿ M˛¿ N"¿ Nm¿ Nâ¿ N“¿ Nı¿ O¿ O#¿ OO¿ Oó¿ OÁ¿ P5¿ P~¿ P„¿ Q.¿ Q¿ Qº¿ Q·¿ R¿ RF¿ Rj¿ Rà¿ R¶¿ RÃ¿ RÏ¿ S ¿ S'¿ Sg¿ Sø¿ T¿ T¿ T/¿ TO¿ Tù¿ T“¿ U!¿ U~¿ Uú¿ UÂ¿ V<¿ VB¿ Vh¿ V¡¿ W(¿ W.¿ WI¿ Wå¿ W›¿ W„¿ X¿ X^¿ X·¿ Y_¿ Y`¿ Yx¿ Y°¿ YÃ¿ Z¿ Z6¿ Z}¿ Z¥¿ ZÁ¿ [¿ [=¿ [f¿ [ô¿ [Œ¿ [˜¿ \&¿ \S¿ \å¿ \…¿ ]¿ ]=¿ ]Ü¿ ]ª¿ ]Ï¿ ^¿ ^P¿ ^y¿ ^¥¿ ^ı¿ _2¿ _o¿ _¢¿ _Â¿ `¿ `C¿ `x¿ `∑¿ `‰¿ a¿ aB¿ ak¿ a†¿ a€¿ b¿ bK¿ bz¿ b{¿ b±¿ b÷¿ c ¿ cï¿ cñ¿ c∞¿ d¿ dR¿ d¢¿ d»¿ d…¿ dË¿ e&¿ e\¿ eò¿ e ¿ e˛¿ f0¿ fJ¿ fp¿ fî¿ f∂¿ f⁄¿ fÈ¿ g	¿ g%¿ gE¿ gy¿ gù¿ gø¿ g›¿ h¿ h¿ h=¿ hc¿ hÖ¿ hØ¿ h€¿ i¿ iE¿ ie¿ iÖ¿ iπ¿ i€¿ i˜¿ j!¿ j=¿ j[¿ jÖ¿ jü¿ j«¿ jÁ¿ k¿ k%¿ kQ¿ kã¿ kµ¿ k€¿ k˚¿ l¿ l;¿ lW¿ l}¿ l•¿ l≈¿ lÁ¿ m¿ m3¿ mc¿ më¿ mΩ¿ m˘¿ n!¿ nE¿ ng¿ nè¿ n´¿ nŸ¿ o¿ o=¿ om¿ oì¿ o…¿ oÁ¿ p¿ p5¿ pg¿ pá¿ p´¿ pÀ¿ pÎ¿ q¿ qA¿ qi¿ qó¿ qπ¿ qÒ¿ r/¿ rc¿ rç¿ r´¿ r”¿ rˇ¿ s¿ s
¿ s¿ sW¿ sí¿ s ¿ s–¿ t¿ tW¿ tv¿ té¿ tﬁ¿ u,¿ uz¿ uû¿ uü¿ uº¿ uÍ¿ v¿ v2¿ vZ¿ vÉ¿ v´¿ v«¿ vÈ¿ w
¿ w*¿ wK¿ wX¿ wß¿ w€¿ x¿ x2¿ xO¿ xn¿ xó¿ x∏¿ xÿ¿ xˆ¿ y¿ y5¿ yS¿ yu¿ yï¿ yπ¿ yﬁ¿ z	¿ z1¿ zP¿ zo¿ zò¿ z∏¿ z’¿ z˘¿ {¿ {:¿ {X¿ {p¿ {ì¿ {≤¿ {–¿ {Ô¿ |¿ |@¿ |d¿ |Ü¿ |•¿ |¬¿ |„¿ } ¿ }"¿ }E¿ }d¿ }Ñ¿ }£¿ }»¿ }Ô¿ ~¿ ~:¿ ~g¿ ~ä¿ ~´¿ ~À¿ ~Ó¿ ¿ 1¿ Z¿ Å¿ ®¿  ¿ Ù¿ Ä¿ Ä4¿ ÄW¿ Ä¿ Äû¿ Äø¿ Äﬁ¿ Ä˝¿ Å ¿ ÅF¿ Åi¿ Åè¿ ÅØ¿ ÅÂ¿ Åˆ¿ ÇO¿ Çä¿ Çê¿ Çµ¿ Ç∆¿ É¿ ÉQ¿ Éµ¿ ÉÒ¿ É˜¿ Ñ¿ Ñ*¿ Ñw¿ Ñ≤¿ Ñ∏¿ Ñ’¿ ÑÊ¿ Ö¿ ÖI¿ ÖO¿ Öf¿ Öw¿ Ö§¿ Öﬂ¿ ÖÂ¿ Ü¿ Ü¿ Ü@¿ Ü{¿ ÜÅ¿ Üü¿ Ü†¿ ÜŸ¿ á$¿ á[¿ áà¿ á©¿ á‘¿ à¿ à1¿ àk¿ àé¿ à∂¿ à∑¿ â¿ â4¿ â:¿ âc¿ âi¿ â•¿ âÒ¿ ä;¿ äÅ¿ äá¿ ä“¿ ã!¿ ã]¿ ãc¿ ãy¿ ãƒ¿ ãË¿ ãÓ¿ ã¸¿ å¿ åV¿ å†¿ å®¿ å≤¿ åƒ¿ å ¿ å¸¿ ç3¿ çN¿ çt¿ çé¿ ç¶¿ ç≠¿ ç¿ çÒ¿ éF¿ é†¿ è ¿ è¿ è¿ è7¿ èa¿ èä¿ èµ¿ èÏ¿ ê¿ ê@¿ ê}¿ ê¨¿ ê·¿ ë¿ ë3¿ ëO¿ ëy¿ ëõ¿ ë¢¿ ë¶¿ ëß¿ ë…¿ ëœ¿ í¿ ík¿ í©¿ íÀ¿ íÎ¿ í¿ íÒ¿ ì7¿ ì=¿ ìã¿ ìŸ¿ î¿ î7¿ îW¿ î\¿ î]¿ îó¿ îù¿ î‡¿ îÊ¿ ï4¿ ïÇ¿ ïà¿ ï◊¿ ïÏ¿ ñO¿ ñP¿ ñt¿ ñz¿ ñ¬¿ ó¿ ó9¿ óp¿ óq¿ óø¿ ò¿ òW¿ òy¿ òz¿ òï¿ òñ¿ ò‰¿ ô¿ ô¿ ôX¿ ô§¿ ô¿ ô˛¿ ö¿ öP¿ öü¿ öÂ¿ õ0¿ õm¿ õs¿ õ™¿ õÏ¿ ú9¿ úÑ¿ úµ¿ úª¿ úı¿ ú˚¿ ùE¿ ùç¿ ù“¿ û¿ û¿ û¿ û¿ ûk¿ ûÉ¿ û“¿ ü¿ üT¿ ü|¿ ü•¿ ü¶¿ üÒ¿ †¿ †¿ †^¿ †©¿ †˜¿ °=¿ °C¿ °ï¿ °‡¿ ¢¿ ¢¿ ¢G¿ ¢M¿ ¢§¿ ¢◊¿ ¢›¿ £¿ £¿ £(¿ £z¿ £î¿ £ö¿ £È¿ £˚¿ §¿ §¿ §¿ §g¿ §†¿ §°¿ §Á¿ §Ì¿ •2¿ •8¿ •k¿ •ó¿ •ò¿ •Ê¿ ¶¿ ¶¿ ¶J¿ ¶}¿ ¶~¿ ¶æ¿ ¶ƒ¿ ß¿ ß]¿ ßn¿ ß£¿ ß§¿ ßË¿ ßÓ¿ ®<¿ ®ä¿ ®∞¿ ®„¿ ®‰¿ ©$¿ ©*¿ ©y¿ ©«¿ ©⁄¿ ©‡¿ ™0¿ ™y¿ ™»¿ ´¿ ´W¿ ´ñ¿ ´Ê¿ ¨7¿ ¨p¿ ¨v¿ ¨≈¿ ≠¿ ≠]¿ ≠≠¿ ≠˛¿ Æ2¿ Æ^¿ Æd¿ Æ∞¿ Æ—¿ Æ“¿ Ø"¿ ØM¿ ØN¿ Øë¿ Ø™¿ Ø∞¿ Ø¿¿ Ø∆¿ ∞¿ ∞X¿ ∞Ö¿ ∞÷¿ ∞¸¿ ±0¿ ±1¿ ±o¿ ±u¿ ±º¿ ≤	¿ ≤;¿ ≤A¿ ≤Ö¿ ≤œ¿ ≤Ú¿ ≤¯¿ ≥?¿ ≥å¿ ≥›¿ ¥.¿ ¥Y¿ ¥_¿ ¥q¿ ¥w¿ ¥≈¿ µ¿ µP¿ µì¿ µô¿ ∂¿ ∂	¿ ∂e¿ ∂¡¿ ∑¿ ∑y¿ ∑’¿ ∑€¿ ∏¿ ∏^¿ ∏d¿ ∏≤¿ π¿ π,¿ π2¿ πL¿ πR¿ πÅ¿ πá¿ πò¿ π’¿ π˝¿ ∫2¿ ∫8¿ ∫M¿ ∫°¿ ∫ª¿ ∫‰¿ ª¿ ª¿ ªê¿ ªŸ¿ º^¿ º´¿ º√¿ ºˆ¿ Ω¿ ΩH¿ Ωô¿ Ω±¿ æ:¿ æp¿ æ†¿ æº¿ æı¿ øA¿ øÜ¿ ø≤¿ ¿¿ ¿9¿ ¿x¿ ¿ò¿ ¿¬¿ ¿Ô¿ ¡$¿ ¡j¿ ¡ß¿ ¬¿ ¬
¿ ¬R¿ ¬â¿ ¬Ω¿ ¬√¿ ¬”¿ ¬Ÿ¿ √¿ √3¿ √4¿ √Ö¿ √ã¿ √∆¿ ƒ¿ ƒZ¿ ƒß¿ ƒ¯¿ ≈1¿ ≈7¿ ≈É¿ ≈‘¿ ∆#¿ ∆r¿ ∆¡¿ «¿ «¿ «\¿ «´¿ «◊¿ «›¿ »'¿ »n¿ »ª¿ »¡¿ …¿ …N¿ …T¿ …£¿ …Ô¿  E¿  t¿  â¿  Æ¿  Ø¿  ∫¿  ª¿  Í¿  ˚¿ À)¿ Àd¿ Àj¿ À†¿ À√¿ Àƒ¿ Ã¿ Ã¿ Ã¿ ÃX¿ Ãq¿ Ãr¿ Ã´¿ Ã±¿ Õ¿ ÕS¿ Õ£¿ ÕÎ¿ Œ¿ Œ2¿ Œ3¿ Œd¿ Œâ¿ Œä¿ Œœ¿ œ¿ œ.¿ œK¿ œL¿ œç¿ œ‘¿ œ⁄¿ –%¿ –G¿ –c¿ –d¿ –Æ¿ –»¿ –…¿ —¿ —9¿ —W¿ —X¿ —ö¿ —¥¿ —Õ¿ —Œ¿ “¿ “(¿ “B¿ “C¿ “¿ “ù¿ “û¿ “Ó¿ “Ù¿ ”@¿ ”à¿ ”÷¿ ‘¿ ‘'¿ ‘(¿ ‘V¿ ‘v¿ ‘w¿ ‘¶¿ ‘«¿ ‘»¿ ’¿ ’a¿ ’à¿ ’â¿ ’ﬂ¿ ÷¿ ÷s¿ ÷±¿ ÷’¿ ÷÷¿ ◊¿ ◊¿ ◊a¿ ◊ö¿ ◊û¿ ◊“¿ ◊Ù¿ ◊ı¿ ÿ@¿ ÿF¿ ÿl¿ ÿr¿ ÿø¿ Ÿ¿ ŸY¿ Ÿ¶¿ Ÿœ¿ ŸÍ¿ ŸÎ¿ ⁄¿ ⁄¿ ⁄"¿ ⁄h¿ ⁄É¿ ⁄Ñ¿ ⁄≈¿ €¿ €5¿ €6¿ €T¿ €U¿ €ô¿ €∫¿ €ª¿ €ˆ¿ ‹¿ ‹¿ ‹Y¿ ‹}¿ ‹~¿ ‹∆¿ ‹„¿ ‹‰¿ ›3¿ ›9¿ ›p¿ ›è¿ ›ê¿ ›¶¿ ›ß¿ ›Û¿ ﬁ'¿ ﬁU¿ ﬁV¿ ﬁ§¿ ﬁ¬¿ ﬁ„¿ ﬁ‰¿ ﬂ¿ ﬂ<¿ ﬂ=¿ ﬂã¿ ﬂ∏¿ ﬂπ¿ ‡¿ ‡9¿ ‡:¿ ‡ã¿ ‡ö¿ ‡Ÿ¿ ‡⁄¿ ·+¿ ·Z¿ ·[¿ ·´¿ ·÷¿ ·◊¿ ‚(¿ ‚?¿ ‚d¿ ‚e¿ ‚ò¿ ‚û¿ ‚‘¿ ‚Ò¿ ‚Ú¿ „A¿ „j¿ „k¿ „ü¿ „•¿ „€¿ „¸¿ „˝¿ ‰D¿ ‰S¿ ‰~¿ ‰¿ ‰Õ¿ ‰‹¿ Â	¿ Â
¿ Â?¿ Â`¿ Âa¿ Â∞¿ Âœ¿ Âˆ¿ Â˜¿ ÊD¿ Êi¿ Êj¿ ÊΩ¿ ÊÓ¿ ÊÔ¿ Á3¿ ÁL¿ ÁÅ¿ ÁÇ¿ ÁÀ¿ Á˛¿ Áˇ¿ ËC¿ ËZ¿ Ëã¿ Ëå¿ Ëœ¿ ËÌ¿ È.¿ È/¿ Ès¿ Èà¿ Èµ¿ È∂¿ È˙¿ Í#¿ Í$¿ Íu¿ Í¥¿ Í€¿ Í‹¿ Î)¿ Îv¿ Î£¿ Î§¿ Îı¿ Ï6¿ ÏW¿ ÏX¿ Ï®¿ Ïƒ¿ Ï˜¿ Ï¯¿ ÌH¿ Ìg¿ Ì†¿ Ì°¿ Ì¿ Ó¿ ÓN¿ ÓO¿ Óì¿ Ó¨¿ Ó·¿ Ó‚¿ Ô/¿ ÔB¿ Ôm¿ Ôn¿ Ô∆¿ ¿ ¿ N¿ q¿ r¿ ¬¿ Ì¿ Ó¿ ÒY¿ ÒÜ¿ Òá¿ Ò›¿ Ú¿ Ú¿ ÚJ¿ ÚP¿ Úà¿ Ú≠¿ ÚÆ¿ Û¿ Û-¿ Û.¿ Û{¿ Û†¿ Û°¿ ÛÙ¿ Ù¿ Ù¿ ÙZ¿ Ùo¿ Ùú¿ Ùù¿ ÙÌ¿ ı ¿ ı!¿ ıq¿ ıû¿ ıü¿ ı„¿ ˆ¿ ˆ¿ ˆZ¿ ˆ`¿ ˆô¿ ˆ¿¿ ˆ¡¿ ˆı¿ ˆˆ¿ ˜E¿ ˜K¿ ˜q¿ ˜Æ¿ ˜◊¿ ˜›¿ ¯(¿ ¯b¿ ¯h¿ ¯x¿ ¯~¿ ¯«¿ ˘¿ ˘[¿ ˘ö¿ ˘©¿ ˙ ¿ ˙9¿ ˙=¿ ˙}¿ ˙~¿ ˙…¿ ˚¿ ˚¿ ˚9¿ ˚r¿ ˚v¿ ˚û¿ ˚∫¿ ˚ª¿ ˚ı¿ ¸!¿ ¸0¿ ¸[¿ ¸î¿ ¸ò¿ ¸ ¿ ¸Î¿ ¸Ï¿ ˝;¿ ˝d¿ ˝s¿ ˝æ¿ ˝˙¿ ˛\¿ ˛ñ¿ ˛ö¿ ˛ÿ¿ ˛ˇ¿ ˇ ¿ ˇP¿ ˇQ¿ ˇû¿ ˇŸ¿ ¿ O¿ P¿ ´¿ ±¿ Ô¿¿V¿§¿Ú¿¿¿4¿Z¿ì¿∆¿ˆ¿(¿X¿v¿û¿œ¿Á¿	¿¿e¿ô¿—¿Ì¿¿¿9¿[¿u¿é¿•¿¿¿÷¿Ì¿¿!¿>¿\¿Ä¿°¿π¿—¿Û¿¿1¿V¿w¿ë¿≠¿≈¿Ô¿¿-¿W¿Å¿Ω¿È¿	¿	3¿	M¿	s¿	ë¿	π¿	„¿
¿
%¿
G¿
u¿
ß¿
◊¿¿C¿m¿ì¿∑¿·¿ˇ¿/¿e¿ó¿…¿Ò¿)¿I¿q¿õ¿œ¿Ò¿¿9¿W¿Å¿±¿€¿¿/¿e¿v¿œ¿
¿¿L¿]¿™¿Ë¿L¿à¿é¿∞¿¡¿¿I¿O¿l¿}¿•¿·¿Á¿˛¿¿<¿x¿~¿ö¿´¿Ÿ¿¿¿8¿?¿Å¿õ¿Ì¿=¿ç¿≥¿¥¿”¿4¿â¿Ó¿=¿è¿ﬁ¿	¿F¿Ä¿∑¿Ò¿ ¿4¿b¿π¿¿E¿|¿≠¿Í¿¿I¿Ü¿Ω¿ ¿F¿û¿Ì¿!¿U¿ß¿…¿˜¿:¿}¿´¿‹¿ˆ¿6¿j¿õ¿œ¿ ¿ p¿ ≥¿ ¿!$¿!R¿!å¿!∫¿!˜¿"7¿"k¿"¢¿"÷¿#¿#h¿#±¿#˜¿$U¿$ï¿$œ¿%¿%F¿%t¿%Ω¿&¿&[¿&ß¿&‰¿'9¿'j¿'ß¿'Á¿(6¿(j¿(§¿(ÿ¿)¿)L¿)ï¿)’¿*¿*U¿*ç¿*Ó¿+<¿+{¿+®¿+‰¿,&¿,-¿,1¿,¿,€¿-2¿-3¿-Ä¿-∂¿-º¿.¿.]¿.≠¿.·¿/1¿/y¿/≈¿0¿0d¿0≥¿1¿1¿1Y¿1j¿1q¿1ø¿1È¿1Í¿2¿2[¿2f¿2â¿2⁄¿3¿3(¿31¿38¿3<¿3=¿3Å¿3ö¿3†¿3¿4!¿4_¿4û¿4ü¿4‹¿5/¿5Å¿5“¿6¿6H¿6l¿6º¿6€¿6·¿6˝¿7¿7¿77¿7=¿7q¿7w¿7ö¿8¿8¿8ñ¿8‹¿9:¿9D¿9d¿9ù¿9ÿ¿:
¿:¿:%¿:)¿:*¿:y¿:ÿ¿;[¿;ª¿;˜¿<á¿<è¿<ì¿<î¿<√¿<…¿<Ô¿<ı¿=¿=V¿=q¿=Å¿=á¿=°¿=Û¿>C¿>ì¿>π¿>∫¿>Ÿ¿?A¿?ù¿?Œ¿@$¿@}¿@”¿A¿A\¿Aû¿A›¿B+¿B:¿B{¿B∂¿B¸¿C[¿C¢¿CÊ¿D$¿Dn¿D©¿DÁ¿E1¿Eu¿E≈¿F¿F}¿FŸ¿G¿G[¿G∫¿G‹¿H¿Hu¿H»¿I¿IH¿Ib¿Iº¿J¿JH¿Jö¿J¯¿Kv¿K’¿L,¿Lh¿L¶¿L¯¿M;¿Më¿MÎ¿N1¿N¿N ¿O,¿Oó¿O˛¿Pa¿P‰¿Q?¿Qí¿Q·¿R<¿R¿RÊ¿SY¿Sƒ¿T/¿TÜ¿T˝¿UC¿Uö¿Uı¿Vc¿V≠¿Vˇ¿WI¿Wè¿WÍ¿XQ¿X´¿Y¿Ya¿Yô¿Z¿Z_¿ZÆ¿ZÎ¿[7¿[â¿[ê¿[î¿[ï¿[°¿[ƒ¿[¿\¿\
¿\+¿\¿\—¿]#¿]K¿]L¿]m¿]∑¿]˘¿^,¿^j¿^™¿^Ë¿_¿_@¿_p¿_û¿_Œ¿_ﬂ¿`¿`3¿`_¿`ü¿`œ¿`˝¿a'¿aY¿aÅ¿a´¿a›¿b¿bA¿by¿bΩ¿b˚¿c'¿cS¿cì¿c∑¿cﬂ¿d¿dK¿ds¿dù¿dπ¿dÌ¿e¿eC¿eo¿eß¿eÌ¿f#¿fU¿fÅ¿f©¿fŸ¿g¿g3¿gg¿gì¿g¡¿gÌ¿h%¿ha¿hõ¿h”¿i¿iO¿i¿i≠¿i·¿j	¿jC¿jÉ¿jø¿j˚¿k-¿ko¿kô¿kÀ¿kˇ¿l=¿li¿lô¿l≈¿lÒ¿m%¿m_¿mì¿mÕ¿m˚¿n5¿n¿nø¿nı¿o¿oS¿oâ¿oç¿oé¿oö¿oØ¿o€¿p-¿p}¿pÕ¿pÛ¿pÙ¿q¿q5¿qS¿qm¿qâ¿q•¿q¬¿qﬁ¿qÓ¿r¿r¿r-¿rB¿rQ¿rd¿ru¿rà¿r•¿r∫¿rŒ¿r‡¿rˆ¿s¿s¿s/¿sC¿s[¿st¿sì¿sØ¿s¬¿s’¿sÚ¿t¿t%¿t=¿tU¿tf¿tx¿tí¿t©¿tº¿tŒ¿t·¿t˙¿u¿u2¿uH¿u[¿ul¿uÅ¿uí¿u®¿uø¿u“¿uÊ¿u˘¿v¿v-¿vG¿v`¿vÅ¿vò¿v≠¿v¡¿vÿ¿vÈ¿w¿w ¿w;¿wV¿wl¿wä¿wú¿w≤¿w…¿wÂ¿w¯¿x¿x ¿x3¿xJ¿xd¿x{¿xï¿x©¿x·¿y¿y ¿y8¿yJ¿ya¿yz¿yÅ¿y§¿y®¿y©¿yµ¿y˙¿z%¿z]¿z≠¿z˚¿{I¿{m¿{n¿{ã¿|¿|⁄¿}Ö¿~¿~û¿)¿¥¿Ä[¿Å	¿Åú¿Ç;¿ÇI¿ÇÕ¿ÉK¿É‚¿ÑÑ¿Ö¿Öï¿Ü¿Ü£¿á!¿á¢¿à/¿à¬¿âX¿âﬂ¿äá¿ã&¿ã™¿å.¿å–¿å¿ç^¿ç⁄¿éR¿éº¿èO¿èg¿èÁ¿ê~¿ë¿ë∏¿íg¿ì6¿ìÂ¿îå¿ï ¿ïj¿ñ¿ñ{¿ó"¿óÕ¿òd¿ô¿ôû¿öQ¿õ¿õï¿úH¿ù¿ù∆¿ûi¿ü¿ü≥¿†F¿†˝¿°¿¿¢{¿£6¿£›¿§§¿•;¿•‚¿¶ç¿ßL¿ß¿¿®c¿®˛¿©n¿™¿™–¿´{¿¨¿¨{¿¨±¿≠[¿≠˝¿Æê¿Ø¿Ø°¿∞7¿∞;¿∞=¿∞>¿∞à¿∞´¿∞Ø¿∞¯¿±E¿±Q¿±U¿±§¿±Ú¿±ˆ¿≤B¿≤Ü¿≤ä¿≤€¿≥&¿≥u¿≥ó¿≥õ¿≥©¿≥≠¿≥˜¿¥F¿¥T¿¥ñ¿¥¿¿µ¿µa¿µÆ¿µ‚¿∂%¿∂v¿∂û¿∂§¿∂⁄¿∂˛¿∑$¿∑3¿∑F¿∑ú¿∑°¿∑¢¿∑«¿∑‡¿∏¿∏M¿∏ç¿∏™¿∏ª¿∏Á¿π¿πN¿πy¿π≠¿πÊ¿∫¿∫ ¿∫!¿∫C¿∫Ä¿∫Å¿∫ç¿∫Ì¿∫Ó¿∫˙¿ªb¿ªc¿ªo¿ªÔ¿ª¿ª¸¿º~¿º¿º∏¿ºæ¿Ω ¿ΩM¿Ωù¿Ω◊¿Ω›¿æ.¿æu¿æµ¿æ¡¿æÓ¿ø
¿ø#¿øG¿øn¿øç¿ø±¿øÃ¿ø”¿¿¿¿¿¿?¿¿_¿¿É¿¿Ω¿¿€¿¡¿¡E¿¡o¿¡x¿¡¿¡É¿¡Ñ¿¡ê¿¡…¿¬	¿¬N¿¬|¿¬í¿¬∆¿¬Õ¿¬—¿¬”¿¬‘¿¬ﬂ¿√¿√N¿√O¿√l¿√ë¿√í¿√‡¿√˘¿ƒ¿ƒ^¿ƒ_¿ƒk¿ƒé¿ƒŸ¿≈¿≈0¿≈a¿≈£¿≈ß¿≈©¿≈™¿≈˘¿∆'¿∆+¿∆z¿∆õ¿∆¥¿∆¿∆Ò¿«A¿«ã¿«õ¿«¿¿«¡¿«¯¿«˛¿»O¿»y¿»ì¿»î¿»ﬂ¿…¿… ¿…F¿…t¿…ç¿…∞¿… ¿…ﬂ¿…Â¿ ¿ 6¿ <¿ _¿ c¿ e¿ f¿ £¿ ß¿ Î¿À9¿Àj¿Àn¿Àº¿Ã¿ÃW¿Ãu¿Ãy¿Ã∆¿Õ¿Õd¿Õn¿Õr¿Õπ¿ÕΩ¿Õœ¿Õ›¿Õı¿Œ	¿ŒT¿Œf¿Œ~¿Œñ¿Œ•¿Œ¿¿Œ‘¿Œÿ¿ŒÊ¿ŒÍ¿œ<¿œn¿œ’¿œ‡¿–
¿–9¿–?¿–å¿–Ÿ¿–Í¿—¿—¿—6¿—a¿—å¿—∑¿—‰¿“¿“¿“5¿“b¿“c¿“Ü¿“≤¿“≥¿“Ò¿“˜¿”D¿”í¿”´¿”‰¿”Â¿‘.¿‘4¿‘Ä¿‘–¿’ ¿’b¿’h¿’§¿÷ ¿÷¿÷F¿÷L¿÷ò¿÷È¿◊3¿◊n¿◊t¿◊∞¿ÿ¿ÿ	¿ÿX¿ÿ°¿ÿß¿ÿÓ¿Ÿ9¿ŸP¿ŸV¿Ÿf¿Ÿl¿Ÿ∏¿ŸÏ¿⁄4¿⁄^¿⁄∆¿⁄«¿€¿€¿€n¿€£¿€©¿€π¿€ø¿‹	¿‹<¿‹à¿‹†¿‹√¿‹‚¿›¿›¿›5¿›V¿›y¿›ë¿›ó¿›∫¿›æ¿›ø¿ﬁ
¿ﬁ ¿ﬁ;¿ﬁS¿ﬁi¿ﬁp¿ﬁä¿ﬁª¿ﬁÊ¿ﬁÌ¿ﬁÒ¿ﬁÚ¿ﬂ(¿ﬂ.¿ﬂy¿ﬂ ¿‡¿‡Y¿‡õ¿‡æ¿‡ƒ¿‡‘¿‡⁄¿·.¿·b¿·À¿·Ê¿·Á¿‚¿‚!¿‚j¿‚ª¿„¿„J¿„å¿„Ø¿„µ¿„≈¿„À¿‰¿‰Q¿‰∫¿‰”¿‰‘¿Â(¿Â.¿Â~¿Â∫¿Â¿¿Ê¿Ê3¿ÊU¿Ê£¿ÊÙ¿Á$¿ÁE¿ÁF¿Áz¿Á~¿Á¿Á±¿Á˚¿Ë¿Ë&¿Ë,¿ËF¿ËÑ¿Ëº¿Ë√¿Ë«¿Ë»¿È¿ÈC¿ÈI¿Èô¿ÈÃ¿Í¿Í>¿Í_¿Í≈¿Î.¿Î5¿Î9¿Î:¿ÎF¿Îi¿Îï¿Î©¿ÎØ¿Î—¿Î˚¿Ï"¿Ï&¿Ï'¿Ï3¿Ïl¿Ïm¿Ïy¿Ïæ¿ÏÈ¿Ì:¿Ìá¿Ìã¿Ìå¿Ìò¿Ì≥¿Ó"¿Ó&¿Ó(¿Ó)¿Ó[¿Ó\¿Óü¿Ó„¿Ô¿Ô>¿Ô?¿Ôt¿Ôî¿Ô≤¿Ô“¿Ô˘¿"¿B¿d¿ç¿∏¿◊¿¯¿Ò ¿ÒJ¿Òf¿ÒÑ¿Ò©¿Ò–¿ÒÒ¿Ú¿Ú2¿ÚR¿Úw¿Úû¿Úº¿Ú·¿Ú˛¿Û¿Û?¿Ûf¿Ûã¿Ûœ¿ÛÒ¿ÛÙ¿Ûı¿Ù)¿ÙH¿Ùf¿ÙÜ¿Ù≠¿Ù÷¿Ùˆ¿ı¿ıA¿ıl¿ıã¿ı¨¿ı‘¿ı˛¿ˆ¿ˆ8¿ˆ]¿ˆÑ¿ˆ•¿ˆ»¿ˆÊ¿˜¿˜+¿˜R¿˜p¿˜ï¿˜≤¿˜Œ¿˜Û¿¯¿¯?¿¯É¿¯•¿¯®¿¯©¿¯Ÿ    ThemeExtension_kLightThemeHighlightColor_kLightThemeSplashColor_kDarkThemeHighlightColor_kDarkThemeSplashColorMaterialTapTargetSize	ThemeDataMaterialBasedCupertinoThemeData_IdentityThemeDataCacheKey
_FifoCacheVisualDensity_colorSchemeLightM3_colorSchemeDarkM3 o(