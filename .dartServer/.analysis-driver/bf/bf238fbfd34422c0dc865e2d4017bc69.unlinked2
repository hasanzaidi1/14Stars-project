Ä˜setupParentDatacomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeightcomputeDistanceToActualBaselinecomputeDryLayoutperformLayoutcomputeSizeForNoChildhitTestChildrenapplyPaintTransformpaintdeferToChildopaquetranslucentbehaviorhitTesthitTestSelfdebugFillPropertiesadditionalConstraints_additionalConstraintsdebugPaintSizemaxWidth	_maxWidth	maxHeight
_maxHeight_limitConstraints_computeSizeaspectRatio_aspectRatio_applyAspectRatio	stepWidth
_stepWidth
stepHeight_stepHeight
_applyStepalwaysNeedsCompositingisRepaintBoundary_alphaopacity_opacityalwaysIncludeSemantics_alwaysIncludeSemanticspaintsChildupdateCompositedLayervisitChildrenForSemantics_currentlyIsRepaintBoundaryattachdetach_updateOpacitylayershaderCallback_shaderCallback	blendMode
_blendModefilter_filter_reclipaddListenerremoveListenergetClipgetApproximateClipRectshouldRecliptoStringshapetextDirectionclipper_clipper_markNeedsClip_defaultClip_clipclipBehavior_clipBehavior_updateClipdescribeApproximatePaintClip_debugPaint
_debugTextdisposeborderRadius_borderRadius_textDirection_cachedRect_cachedPath_getClipPath	elevation
_elevationshadowColor_shadowColorcolor_colordescribeSemanticsConfiguration_shape
background
foreground_painter
decoration_decorationposition	_positionconfiguration_configurationorigin_origin	alignment
_alignmenttransformHitTests
_transform	transformfilterQuality_filterQualitysetIdentityrotateXrotateYrotateZ	translatescale_effectiveTransform_resolvedAlignment_resolve_markNeedResolution_fitAffectsLayoutfit_fit_hasVisualOverflow_clearPaintData_updatePaintData_paintChildWithTransformtranslation_translationonPointerDownonPointerMoveonPointerUponPointerHoveronPointerCancelonPointerPanZoomStartonPointerPanZoomUpdateonPointerPanZoomEndonPointerSignalhandleEvent_opaquehitTestBehavioronEnteronHoveronExitcursor_cursorvalidForMouseTracker_validForMouseTrackertoImagetoImageSyncdebugSymmetricPaintCount_debugSymmetricPaintCountdebugAsymmetricPaintCount_debugAsymmetricPaintCountdebugResetMetrics!debugRegisterRepaintBoundaryPaintignoring	_ignoringignoringSemantics_ignoringSemanticsoffstage	_offstagesizedByParentperformResizedebugDescribeChildren	absorbing
_absorbingmetaDatavalidActions_validActionsonTap_onTaponLongPress_onLongPressonHorizontalDragUpdate_onHorizontalDragUpdateonVerticalDragUpdate_onVerticalDragUpdatescrollFactor_isValidAction_performSemanticScrollLeft_performSemanticScrollRight_performSemanticScrollUp_performSemanticScrollDown
properties_properties	container
_containerexplicitChildNodes_explicitChildNodesexcludeSemantics_excludeSemanticsblockUserActions_blockUserActions_updateAttributedFields_effectiveAttributedLabel_effectiveAttributedValue"_effectiveAttributedIncreasedValue"_effectiveAttributedDecreasedValue_effectiveAttributedHint_attributedLabel_attributedValue_attributedIncreasedValue_attributedDecreasedValue_attributedHint_performTap_performLongPress_performDismiss_performScrollLeft_performScrollRight_performScrollUp_performScrollDown_performIncrease_performDecrease_performCopy_performCut_performPaste$_performMoveCursorForwardByCharacter%_performMoveCursorBackwardByCharacter_performMoveCursorForwardByWord _performMoveCursorBackwardByWord_performSetSelection_performSetText!_performDidGainAccessibilityFocus!_performDidLoseAccessibilityFocusblocking	_blocking	excluding
_excludingindex_indexlink_link_previousLayoutSizeshowWhenUnlinked_showWhenUnlinkedoffset_offsetleaderAnchor_leaderAnchorfollowerAnchor_followerAnchorgetCurrentTransformvalue_valuesized_sized7RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityShaderCallbackRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBase_transparentPaintRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationPointerDownEventListenerPointerMoveEventListenerPointerUpEventListenerPointerCancelEventListener PointerPanZoomStartEventListener!PointerPanZoomUpdateEventListenerPointerPanZoomEndEventListenerPointerSignalEventListenerRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegionÅÚColorGradientImageImageFilterPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEventRenderProxySliver	RenderBoxRenderObjectWithChildMixinchildoptionalTypeArgsToverridevoidRenderObject
parentData
ParentDatadoublegetMinIntrinsicWidthgetMaxIntrinsicWidthgetMinIntrinsicHeightgetMaxIntrinsicHeightTextBaselinegetDistanceToActualBaselinecomputeDistanceToActualBaselineSizeBoxConstraintsgetDryLayoutcomputeSizeForNoChildsizelayoutconstraintsparentUsesSizesmallestboolBoxHitTestResultOffsethitTestpositionMatrix4PaintingContext
paintChilddeferToChildcontainshitTestChildrentranslucentaddBoxHitTestEntryopaqueDiagnosticPropertiesBuilderdebugFillPropertiesEnumPropertydefaultValuedebugAssertIsValidmarkNeedsLayouthasBoundedWidthhasTightWidthminWidthcomputeMinIntrinsicWidthisFinitehasInfiniteWidthconstrainWidthcomputeMaxIntrinsicWidthhasBoundedHeighthasTightHeight	minHeightcomputeMinIntrinsicHeighthasInfiniteHeightconstrainHeightcomputeMaxIntrinsicHeightenforce	constrainzerodebugPaintSizePaintisEmptycolorcanvasdrawRectDiagnosticsPropertymaxWidth	maxHeightinfinityChildLayouterlayoutChildChildLayoutHelperdryLayoutChildDoublePropertyFlutterErrorruntimeTypeisTighttightAlignRowCrossAxisAlignmentstretchceiltightenwidthheightColumngetAlphaFromOpacityintmarkNeedsCompositingBitsUpdatemarkNeedsCompositedLayerUpdatemarkNeedsSemanticsUpdateparentOffsetLayerOpacityLayeroldLayeralphapaintRenderObjectVisitorFlagPropertyvalueifTrueRenderSliverAnimatedOpacityRenderSliver_currentlyIsRepaintBoundary_alpha	Animation_opacityattachedopacityremoveListener_updateOpacityaddListener_alwaysIncludeSemanticsPipelineOwnerattachdetachalwaysIncludeSemanticsShaderRect
ShaderMasklinear	BlendModemodulateShaderMaskLayerlayermarkNeedsPaintneedsCompositingshadermaskRect	blendMode	pushLayerdebugCreatorsrcOverBackdropFilterLayerblurfilterClipRectClipPath	ClipRRectClipOvalShapeBorder
ListenablereclipVoidCallbackStringobjectRuntimeTypePathTextDirectiongetOuterPathtextDirectionshapeClip	antiAliasshouldRecliphasSizeperformLayoutgetClipnonehardEdgeantiAliasWithSaveLayergetApproximateClipRectTextPainterTileModerepeatedstrokeWidthstylePaintingStylestroketextTextSpan	TextStylefontSizertldisposeclipperclipBehavior_clipper_updateClip_clippushClipRectClipRectLayershift_debugPaint
_debugTextRRectBorderRadiusBorderRadiusGeometry_markNeedsClipresolvetoRRectpushClipRRect	outerRectClipRRectLayer	drawRRect	tlRadiusXaddOvalcenterdxdydistanceSquaredpushClipPathClipPathLayerdrawPathaddRectdebugDisableShadowsalwaysNeedsCompositingSemanticsConfigurationdescribeSemanticsConfiguration	elevationColorPropertyshadowColorBoxShape	rectanglecircle
fromRectXYaddRRectCanvas
drawShadow	drawPaintinflate
DecorationImageConfiguration
backgroundempty
BoxPainterBoxDecorationImageProvidercreateBoxPaintercopyWithgetSaveCount	fromPartsDiagnosticsNodeErrorSummaryErrorDescriptionDiagnosticsTreeStyleerrorProperty	isComplexsetIsComplexHint
foregroundtoDiagnosticsNodenameAlignmentGeometryFilterQuality	transform	alignmentfilterQualityoriginAlignmentDirectionalcenterStart	Alignmentxltr	centerEndlocalToGlobalglobalToLocalcopysetIdentityrotateXrotateYrotateZ	translateyzscaleidentity	alongSizemultiplyaddWithPaintTransformMatrixUtilsgetAsTranslationdeterminantpushTransformTransformLayertranslationValuesmatrixstorageImageFilterLayerimageFilterTransformPropertyBoxFitcontain	scaleDowncoverfill	fitHeightfitWidthdebugCheckingIntrinsicsdebugCannotComputeDryLayoutreasonloosensizeConstraints,constrainSizeAndAttemptToPreserveAspectRatiounconstrainedSizeFittedSizesapplyBoxFitdestinationsourceinscribelefttopeverysetZerodebugNeedsLayoutaddWithPaintOffsetoffsetListenerPointerPanZoomStartEventPointerPanZoomUpdateEventPointerPanZoomEndEventPointerSignalEventbehaviorPointerHoverEventListenerbiggestHitTestEntrydebugHandleEventcallPointerHoverEventFlagsSummaryFunctionifEmptyMouseRegionMouseTrackerAnnotationMouseCursordeferPointerEnterEventListenerPointerExitEventListenerifFalsedebugDumpRenderTree
pixelRatiodebugNeedsPainttoImageFuturetoImageSyncincludedParentincludedChildMessagePropertyPercentPropertyunittooltipmessage
DeprecatedSemanticsNodevisitChildrenForSemanticsisBlockingUserActionsdescription%markNeedsLayoutForSizedByParentChangecomputeDryLayoutperformResizeListoffstagesparsedynamicGestureTapCallbackGestureLongPressCallbackGestureDragUpdateCallbackSemanticsActiontap
scrollLeftscrollRightSet	setEqualsonTap	longPressonLongPressonScrollRightonScrollLeftscrollUp
onScrollUp
scrollDownonScrollDownDragUpdateDetailsdeltaprimaryDeltaglobalPositionIterablePropertySemanticsPropertiesattributedLabelisSemanticBoundaryExcludeSemantics	SemanticsAttributedStringlabelattributedValueattributedIncreasedValueincreasedValueattributedDecreasedValuedecreasedValueattributedHinthintexplicitChildNodesscopesRoutetoggledcheckedenabled	isEnabled	isCheckedmixedisCheckStateMixed	isToggledselected
isSelectedbuttonisButtonlinkisLinksliderisSliderkeyboardKeyisKeyboardKeyheaderisHeader	textFieldisTextFieldreadOnly
isReadOnly	focusableisFocusablefocused	isFocusedinMutuallyExclusiveGroupisInMutuallyExclusiveGroupobscured
isObscured	multilineisMultilinehiddenisHiddenimageisImagehintOverrides
isNotEmpty
namesRoute
liveRegionmaxValueLengthcurrentValueLengthsortKeytagForChildrenaddTagForChildren	onDismiss
onIncrease
onDecreaseonCopyonCutonPasteonMoveCursorForwardByCharacteronMoveCursorBackwardByCharacteronMoveCursorForwardByWordonMoveCursorBackwardByWordonSetSelection	onSetTextonDidGainAccessibilityFocusonDidLoseAccessibilityFocuscustomSemanticsActionsTextSelection+isBlockingSemanticsOfPreviouslyPaintedNodesisMergingSemanticsOfDescendants
ScrollViewscrollIndexCustomScrollViewindexInParentCompositedTransformTargetLeaderLayer	LayerLink
leaderSizeCompositedTransformFollowerFollowerLayertopLeft
bottomLeftgetLastTransformleadershowWhenUnlinkedlinkedOffsetunlinkedOffsetchildPaintBoundsfromLTRBnegativeInfinityAnnotatedRegionLayerLayerfindObject	RenderBoxRenderObjectWithChildMixinRenderProxyBoxMixinRenderProxyBoxRenderAnimatedOpacityMixin
ListenableCustomClipper_RenderCustomClip_RenderPhysicalModelBase!RenderProxyBoxWithHitTestBehaviorMouseTrackerAnnotationT˘2ùÿÒCºËE'42] Ç7ÇöPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEvent Çpackage:flutter/gestures.dartÄºÄ‰ColorGradientImageImageFilter Ä¶  Ä∂uiÄπdart:ui  ÄË  package:flutter/animation.dart  Å  package:flutter/foundation.dart  Å;  package:flutter/gestures.dart  Åc  package:flutter/semantics.dart  Åå  package:flutter/services.dart  Åµ  box.dart  Å»  
layer.dart  Å›  layout_helper.dart  Å˙  object.dart    	dart:core¿Wq ¿Ñhì∏ <ÄÜÄ§Ä•ÄÊÄÁÅÅ:ÅbÅãÅ≥Å¥Å«Å‹Å˘ÇÇÇ<ÇRÇfÇvÇäÇúÇùÇ›Ç·É*ÉxÉ«ÑÑÑ^ÑØÑ˛ÖÖÖ$Ö(ÖxÖâÖ˝ÜÜ%ÜmÜ∫ÜÃÜÛááááá:á>á{á∆àààeàïàßâââ=âââ¨â◊â˛äää	ääHääÉäÑäêä√ä˙ä˛äˇãã>ãuãyãzãÜãπããÙãıååDå|å∏åºåΩå…åˇçRçVçWçcç|ç¡çç¸é ééJééé…éÍéÓéÔé˚èKèãèèèêèúè‚è„èÔê&êOêhêvê|ê£êßê©ê™êŒêÂë3ëoëëÄëÀíí7íAíBíèí íŸí€í‹ìì5ìì≤ì∏ì¸î"îTîjîîÄî—ïïïLïRïôïµï∂ï¬ñ
ñ&ñIñ°ñ„óó ó&ó<ó@óAóMóòóôó•óÍòòròvòxòyò™òÆò˝ôFôñô£ôßô˜ö@ö]öëö«öÕõõ5õKõ~õπõúúúFúåúµúÈùù<ùJùPùtùãùèùêùúùœû)ûWû]ûûû∫ûÓü)ü/üAüEüFüRüÖüﬂ†††T†p†§†ﬂ†Â†˜†˚†¸°°;°ó°∆°Ã¢¢+¢`¢ù¢£¢∂¢∫¢ª¢«¢˙£V£Ö£ã£Õ£Í§§\§b§u§y§z§Ü§ü§ÿ§Ò•I•c•p•ø•≈•…• •÷¶¶%¶t¶Å¶–¶÷¶⁄¶€¶Áß'ßRßbß{ß≠ß≈ßÚ®)®1®D®N®R®S®_®§®œ©8©<©>©?©x©ª©ø™™W™¢™Ò´
´´Y´ü´Ø´ﬂ¨0¨e¨k¨≤¨∆¨€¨Ò≠≠@≠`≠Å≠û≠Ω≠“≠”Æ(ÆLÆ`ÆÆôÆ∑Æ≈ÆÀÆ‚Æ˘Æ˝Æ˛ØUØ{ØêØ∞Ø ØÈØ˜Ø˝∞∞,∞0∞1∞r∞ç∞≥±±F±∂±Ω±¡±¬≤$≤=≤è≤æ≤ƒ≥≥≥	≥≥K≥d≥Ñ≥π≥¿≥ƒ≥≈≥—≥Í¥¥#¥U¥\¥`¥a¥m¥≤¥›µ6µëµïµóµòµ”µ◊∂#∂r∂¿∂ƒ∑∑\∑î∑ò∑Â∏3∏Ç∏…∏Õππjπª∫	∫W∫•∫ÛªAªéª‘ººEºÇºàºÀº·º˜ΩΩ:Ω_ΩÇΩóΩòΩ¬Ω»ææ_æâæ†æ¬æ€æ˜øø&ø,øFø]øaøbønø°øºø‡øÊøˇ¿ @1¿ @7¿ @G¿ @K¿ @L¿ @X¿ @ã¿ @¶¿ @ ¿ @–¿ @È¿ A¿ A!¿ A1¿ A5¿ A6¿ AB¿ Au¿ Aè¿ A≤¿ A∏¿ A—¿ B¿ B	¿ B¿ B¿ B¿ B*¿ B]¿ Bw¿ Bö¿ B†¿ Bπ¿ BÎ¿ BÒ¿ C¿ C¿ C¿ C=¿ Ck¿ C{¿ C∆¿ C‚¿ D¿ Do¿ D¿¿ E¿ E0¿ E;¿ EC¿ EV¿ E`¿ Ea¿ EÄ¿ E£¿ E©¿ E™¿ E”¿ EÊ¿ EÁ¿ F4¿ FÄ¿ Fó¿ F±¿ F÷¿ F„¿ G	¿ G.¿ G4¿ G5¿ GÉ¿ GÕ¿ H¿ H0¿ H1¿ HY¿ H}¿ H¢¿ H®¿ H©¿ H”¿ H˘¿ I¿ I$¿ I%¿ IM¿ Iq¿ Iñ¿ Iú¿ Iù¿ I«¿ IÌ¿ J¿ J¿ J¿ JP¿ JT¿ JU¿ Ja¿ Jó¿ J¬¿ J∆¿ J«¿ J”¿ JÏ¿ K¿ K/¿ K`¿ Kf¿ Kj¿ Kk¿ Kw¿ Kº¿ KÁ¿ L'¿ L+¿ L-¿ L.¿ Lj¿ Ln¿ Lª¿ M¿ M?¿ MC¿ Mè¿ Mﬂ¿ N+¿ Nu¿ N¬¿ NÍ¿ NÓ¿ O>¿ Oä¿ O»¿ OÃ¿ P¿ Pg¿ P∂¿ PÕ¿ P—¿ Pﬂ¿ P„¿ Q2¿ Qy¿ Q«¿ Q⁄¿ R&¿ Ri¿ R∂¿ RÍ¿ S¿ Sn¿ St¿ Sƒ¿ SÂ¿ S˛¿ T¿ T-¿ TC¿ Tx¿ TØ¿ TŒ¿ TÔ¿ U¿ U¿ UP¿ UV¿ U~¿ U•¿ Uª¿ U‹¿ V¿ V%¿ V3¿ V9¿ VQ¿ Vh¿ Vl¿ Vm¿ Vπ¿ Vø¿ VÁ¿ W¿ W'¿ WI¿ Ws¿ Wì¿ W°¿ Wß¿ W¿¿ W◊¿ W€¿ W‹¿ X¿ X1¿ XI¿ X]¿ Xc¿ Xå¿ Xê¿ Xë¿ Xù¿ X–¿ X˝¿ Y¿ Y¿ Y¿ YA¿ YZ¿ Yl¿ Yr¿ Y∞¿ Y⁄¿ Yﬁ¿ Yﬂ¿ YÎ¿ Z¿ Z7¿ ZI¿ ZO¿ Zj¿ Z£¿ Z©¿ Z≈¿ [¿ [0¿ [4¿ [5¿ [A¿ [t¿ [ç¿ [ü¿ [•¿ [¿¿ [˘¿ [ˇ¿ \¿ \Z¿ \Ü¿ \ä¿ \ã¿ \Ï¿ ]¿ ]-¿ ]~¿ ]û¿ ]Ô¿ ]˜¿ ^¿ ^j¿ ^ã¿ ^ﬂ¿ ^Á¿ _¿ _#¿ _F¿ _L¿ _P¿ _Q¿ _]¿ _ì¿ _¨¿ _·¿ `¿ `¿ `¿ `¿ `¿ `2¿ `K¿ `}¿ `ù¿ `§¿ `®¿ `©¿ `µ¿ `˙¿ a%¿ aa¿ aü¿ a£¿ a•¿ a¶¿ a€¿ aﬂ¿ b-¿ b}¿ b≤¿ b∂¿ c¿ cR¿ c†¿ cÎ¿ d9¿ db¿ df¿ d≥¿ e¿ eP¿ eg¿ ek¿ ey¿ e}¿ eÃ¿ f¿ fc¿ fv¿ f≈¿ g	¿ gX¿ gç¿ g¬¿ h¿ h-¿ hC¿ hX¿ hY¿ he¿ hò¿ h±¿ h√¿ h…¿ hÂ¿ i#¿ i)¿ iF¿ iv¿ iz¿ i{¿ iá¿ i∫¿ i”¿ iÂ¿ iÎ¿ j¿ jE¿ jK¿ jh¿ jò¿ jú¿ jù¿ j©¿ j‹¿ k	¿ k¿ k¿ ko¿ kà¿ k±¿ l¿ l$¿ l_¿ lg¿ lñ¿ l£¿ l∆¿ lÃ¿ l–¿ l—¿ l›¿ m¿ m,¿ ma¿ mÅ¿ mà¿ må¿ mç¿ mô¿ m≤¿ mÀ¿ m˝¿ n¿ n$¿ n(¿ n*¿ n+¿ nV¿ nZ¿ n™¿ nﬂ¿ n„¿ o.¿ ox¿ o¿¿ p¿ p=¿ pr¿ px¿ pΩ¿ pœ¿ pÈ¿ q¿ q(¿ qY¿ qt¿ q≠¿ q‰¿ q˘¿ q˙¿ r¿ rH¿ rI¿ rU¿ rç¿ ré¿ rú¿ rù¿ r“¿ rÿ¿ s(¿ sA¿ sG¿ sk¿ sq¿ sµ¿ s¸¿ t¿ t/¿ tB¿ t`¿ tä¿ tß¿ tµ¿ tª¿ t˜¿ u ¿ u6¿ uk¿ u£¿ uÀ¿ u—¿ u˜¿ v9¿ v[¿ va¿ ve¿ vf¿ v¨¿ v≤¿ v¿ vˆ¿ w¿ wM¿ wm¿ wò¿ wƒ¿ w“¿ wÿ¿ w˝¿ x¿ x!¿ x"¿ x.¿ xT¿ xv¿ xç¿ xë¿ xí¿ xû¿ xÒ¿ y,¿ yF¿ yX¿ y\¿ y]¿ yi¿ y†¿ y»¿ y÷¿ y‹¿ y˛¿ z¿ z¿ z¿ zO¿ zì¿ z™¿ z∞¿ z¥¿ zµ¿ z¡¿ {¿ {1¿ {i¿ {Ê¿ {Í¿ {Ï¿ {Ì¿ |>¿ |B¿ |ë¿ |Ê¿ }(¿ }Ñ¿ }ì¿ }î¿ }†¿ }Ô¿ ~¿ ~¿ ~!¿ ~t¿ ~∂¿ ~◊¿ ~¿ ~Ù¿ ~ı¿ 3¿ 9¿ â¿ ¢¿ ®¿ Ò¿ Ä¿ Ä¿ Äo¿ Ä∂¿ Ä‰¿ Å¿ Å,¿ ÅI¿ ÅW¿ Å]¿ ÅÖ¿ Å≥¿ Åπ¿ Åœ¿ Å„¿ Ç¿ Ç¿ Ç*¿ Ç.¿ Ç/¿ Çu¿ Ç{¿ Çπ¿ Çø¿ Çÿ¿ Çﬁ¿ É.¿ Éu¿ É¥¿ É’¿ Ñ ¿ Ñ,¿ Ñ:¿ Ñ@¿ Ñe¿ ÑÖ¿ Ñâ¿ Ñä¿ Ññ¿ Ñª¿ Ñ‘¿ Ñ˝¿ ÖD¿ ÖH¿ ÖI¿ ÖU¿ Ög¿ Öì¿ Öß¿ Ö´¿ Ö¨¿ Ö∆¿ ÖË¿ Ü"¿ Ü@¿ ÜÑ¿ Üµ¿ á¿ á/¿ á7¿ á_¿ áâ¿ á≠¿ áµ¿ áª¿ áø¿ á¿¿ áÃ¿ áı¿ à¿ à5¿ à9¿ à:¿ àF¿ à}¿ àî¿ à¢¿ à®¿ à ¿ àŒ¿ àœ¿ à€¿ â¿ â_¿ âv¿ â|¿ âÄ¿ âÅ¿ âç¿ â“¿ â˝¿ äM¿ ä ¿ äŒ¿ ä–¿ ä—¿ ã¿ ã¿ ãm¿ ãô¿ ã˘¿ å.¿ å4¿ åc¿ å}¿ å•¿ åŒ¿ å‰¿ å˙¿ ç¿ çP¿ çT¿ çV¿ çW¿ ç†¿ ç§¿ ç‡¿ é¿ é¿ éQ¿ éU¿ é§¿ éŸ¿ è	¿ èa¿ èg¿ èÆ¿ è√¿ èŸ¿ ê¿ ê3¿ ê\¿ ê{¿ êê¿ êë¿ êù¿ êﬁ¿ êﬂ¿ ë¿ ë#¿ ër¿ ëª¿ ë¡¿ í¿ í¿ íi¿ í°¿ íŸ¿ í˚¿ ì(¿ ìL¿ ìZ¿ ì`¿ ì}¿ ìì¿ ìó¿ ìò¿ ì‹¿ ì‚¿ î1¿ î|¿ î•¿ îΩ¿ î‡¿ îˇ¿ ï¿ ï¿ ï+¿ ïA¿ ïE¿ ïF¿ ïR¿ ïÜ¿ ïá¿ ïì¿ ï ¿ ï„¿ ñ¿ ñ&¿ ñ3¿ ñj¿ ñç¿ ñØ¿ ñÂ¿ ñ˜¿ ó#¿ ó8¿ óD¿ óQ¿ óe¿ ók¿ óo¿ óq¿ ór¿ ó¿¿ óƒ¿ ò¿ ò(¿ ò\¿ ò}¿ òÉ¿ ò±¿ òÔ¿ ô¿ ôî¿ ô¨¿ ô ¿ ôﬁ¿ ôﬂ¿ ôÎ¿ ö4¿ ö5¿ öÖ¿ öñ¿ öú¿ öÈ¿ ö¸¿ õ$¿ õ>¿ õc¿ õ¿ õç¿ õì¿ õ®¿ õæ¿ õ¬¿ õ√¿ ú¿ ú+¿ ú1¿ úi¿ úí¿ ú™¿ úÕ¿ úÏ¿ ú˙¿ ù ¿ ù¿ ù.¿ ù2¿ ù3¿ ù?¿ ùs¿ ùt¿ ùÄ¿ ù∑¿ ù–¿ ù¿ û¿ û6¿ û[¿ ûë¿ û£¿ ûœ¿ û‰¿ û¿ û˝¿ ü¿ ü¿ ü¿ ü¿ ü¿ üK¿ üO¿ üò¿ ü©¿ ü≠¿ ü˛¿ †¿ †K¿ †ó¿ †®¿ †¨¿ †˜¿ °E¿ °ñ¿ °Ê¿ °Í¿ °¯¿ °¸¿ ¢E¿ ¢ê¿ ¢Ÿ¿ £"¿ £q¿ £¶¿ £∆¿ £Ã¿ §¿ §_¿ §`¿ §}¿ §~¿ §¡¿ §«¿ •¿ •f¿ •}¿ •â¿ •÷¿ •◊¿ ¶'¿ ¶X¿ ¶^¿ ¶≠¿ ¶˝¿ ß¿ ß ¿ ßs¿ ßt¿ ßø¿ ß„¿ ß˚¿ ß¸¿ ®A¿ ®Ñ¿ ®∏¿ ®æ¿ ©¿ ©I¿ ©å¿ ©”¿ ™¿ ™¿ ™a¿ ™≤¿ ´¿ ´T¿ ´Z¿ ´¢¿ ´Ò¿ ´˛¿ ¨¿ ¨R¿ ¨^¿ ¨d¿ ¨™¿ ¨ˆ¿ ≠*¿ ≠f¿ ≠g¿ ≠s¿ ≠¥¿ ≠∂¿ ≠∑¿ ≠˛¿ Æ5¿ Æ\¿ Æb¿ Æè¿ Æï¿ Æ›¿ Ø,¿ Øy¿ Øº¿ ØŸ¿ ØÚ¿ ∞
¿ ∞¿ ∞¿ ∞P¿ ∞k¿ ∞l¿ ∞¥¿ ∞∫¿ ±¿ ±,¿ ±R¿ ±S¿ ±à¿ ±î¿ ±∞¿ ≤¿ ≤¿ ≤¿ ≤¿ ≤H¿ ≤Ä¿ ≤ì¿ ≤ô¿ ≤Í¿ ≥¿ ≥O¿ ≥S¿ ≥U¿ ≥V¿ ≥ì¿ ≥©¿ ≥ø¿ ≥ﬁ¿ ¥¿ ¥!¿ ¥F¿ ¥[¿ ¥\¿ ¥ö¿ ¥«¿ ¥Â¿ µ¿ µ5¿ µC¿ µI¿ µ|¿ µó¿ µÕ¿ ∂¿ ∂=¿ ∂l¿ ∂Ñ¿ ∂ä¿ ∂û¿ ∂–¿ ∂ˇ¿ ∑¿ ∑	¿ ∑
¿ ∑¿ ∑;¿ ∑T¿ ∑¿ ∑É¿ ∑Ñ¿ ∑ê¿ ∑¢¿ ∑–¿ ∑‰¿ ∑Ë¿ ∑È¿ ∏¿ ∏¿ ∏+¿ ∏K¿ ∏O¿ ∏P¿ ∏f¿ ∏r¿ ∏s¿ ∏ù¿ ∏æ¿ ∏‡¿ ∏˝¿ π¿ π¿ π¿ π5¿ π6¿ πB¿ π[¿ πå¿ πß¿ π¬¿ π÷¿ π‹¿ π‡¿ π·¿ π¯¿ ∫/¿ ∫3¿ ∫4¿ ∫@¿ ∫{¿ ∫ó¿ ∫≠¿ ∫¬¿ ∫‹¿ ∫˜¿ ª¿ ªl¿ ªr¿ ªv¿ ªw¿ ªç¿ ª®¿ ª¥¿ ªÙ¿ º¿ º"¿ ºI¿ º`¿ ºÑ¿ º˚¿ Ω'¿ ΩD¿ ΩN¿ Ωj¿ Ωí¿ Ω¥¿ Ω“¿ ΩÁ¿ æ¿ æ)¿ æG¿ æV¿ æc¿ æµ¿ æø¿ æ”¿ æÊ¿ æ¿ æÙ¿ æı¿ ø¿ ø¿ ø/¿ øF¿ ø[¿ ø_¿ øa¿ øb¿ øâ¿ øç¿ ø€¿ ¿,¿ ¿B¿ ¿y¿ ¿õ¿ ¿°¿ ¿Ò¿ ¡¿ ¡¿ ¡H¿ ¡x¿ ¡ã¿ ¡ú¿ ¡Ø¿ ¡«¿ ¡Õ¿ ¡Œ¿ ¡⁄¿ ¬	¿ ¬
¿ ¬¿ ¬^¿ ¬z¿ ¬è¿ ¬¨¿ ¬‘¿ ¬Í¿ ¬Ú¿ ¬¯¿ √.¿ √2¿ √3¿ √?¿ √v¿ √è¿ √∂¿ √Õ¿ √Û¿ ƒ¿ ƒ!¿ ƒ3¿ ƒJ¿ ƒp¿ ƒù¿ ƒ®¿ ƒ∑¿ ƒ„¿ ƒ˘¿ ≈¿ ≈¿ ≈"¿ ≈(¿ ≈,¿ ≈-¿ ≈9¿ ≈y¿ ≈â¿ ≈§¿ ≈”¿ ≈¸¿ ∆C¿ ∆¿¿ ∆ ¿ ∆“¿ ∆Â¿ ∆Ô¿ ∆Û¿ ∆ı¿ ∆ˆ¿ «%¿ «)¿ «y¿ ««¿ «›¿ »¿ »@¿ »F¿ »ñ¿ »≤¿ »∏¿ »¯¿ »˛¿ …G¿ …w¿ …ã¿ …ú¿ …◊¿ …Í¿  ¿  $¿  I¿  p¿  q¿  °¿  ß¿  Ú¿ À¿ À¿ ÀI¿ ÀÉ¿ À©¿ À⁄¿ À¸¿ Ã
¿ Ã¿ Ã+¿ ÃA¿ ÃE¿ ÃF¿ ÃÖ¿ Ãª¿ Ã‹¿ Õ¿ Õ+¿ Õ9¿ Õ?¿ Õ[¿ Õq¿ Õu¿ Õv¿ ÕÇ¿ Õ‡¿ Õ·¿ ÕÌ¿ Œ5¿ ŒQ¿ Œf¿ ŒÉ¿ Œ´¿ Œ¡¿ Œ…¿ Œœ¿ œ¿ œ	¿ œ
¿ œ¿ œM¿ œf¿ œç¿ œ§¿ œÀ¿ œÁ¿ œ˘¿ –¿ –'¿ –>¿ –d¿ –í¿ –ù¿ –¨¿ –ÿ¿ –Ó¿ –ˆ¿ —¿ —¿ —¿ —!¿ —"¿ —.¿ —n¿ —~¿ —ô¿ —»¿ —Ò¿ “9¿ “¥¿ “æ¿ “∆¿ “Ÿ¿ “„¿ “Á¿ “È¿ “Í¿ ”¿ ”¿ ”_¿ ”®¿ ”Ú¿ ‘)¿ ‘L¿ ‘R¿ ‘¢¿ ‘ø¿ ‘≈¿ ’¿ ’>¿ ’Q¿ ’b¿ ’u¿ ’ç¿ ’ì¿ ’î¿ ’©¿ ’¬¿ ’√¿ ’‰¿ ÷¿ ÷¿ ÷P¿ ÷V¿ ÷n¿ ÷r¿ ÷s¿ ÷¿ ÷Æ¿ ÷Ø¿ ÷ª¿ ◊¿ ◊¿ ◊1¿ ◊Z¿ ◊¶¿ ◊»¿ ◊¯¿ ÿ)¿ ÿ0¿ ÿe¿ ÿ°¿ ÿµ¿ ÿª¿ ÿÒ¿ ÿı¿ ÿˆ¿ Ÿ¿ Ÿ9¿ ŸR¿ Ÿy¿ Ÿê¿ Ÿ∂¿ Ÿ“¿ Ÿ‰¿ Ÿˆ¿ ⁄¿ ⁄-¿ ⁄S¿ ⁄Ä¿ ⁄ã¿ ⁄ö¿ ⁄∆¿ ⁄‹¿ ⁄‰¿ ⁄Ò¿ €¿ €¿ €¿ €¿ €¿ €\¿ €l¿ €á¿ €∂¿ €ﬂ¿ ‹4¿ ‹«¿ ‹—¿ ‹Ÿ¿ ‹Ï¿ ‹ˆ¿ ‹˙¿ ‹¸¿ ‹˝¿ ›¿ ›#¿ ›h¿ ›©¿ ›≠¿ ›Î¿ ﬁ	¿ ﬁ¿ ﬁG¿ ﬁá¿ ﬁ ¿ ﬂ¿ ﬂ¿ ﬂ"¿ ﬂs¿ ﬂ¿¿ ‡¿ ‡#¿ ‡)¿ ‡r¿ ‡¢¿ ‡µ¿ ‡∆¿ ‡Ÿ¿ ‡Ò¿ ‡˜¿ ‡¯¿ ·¿ ·D¿ ·E¿ ·Q¿ ·ô¿ ·µ¿ · ¿ ·Á¿ ‚¿ ‚%¿ ‚-¿ ‚3¿ ‚i¿ ‚m¿ ‚n¿ ‚z¿ ‚±¿ ‚ ¿ ‚Ò¿ „¿ „.¿ „J¿ „\¿ „z¿ „å¿ „£¿ „…¿ „ˆ¿ ‰¿ ‰¿ ‰<¿ ‰R¿ ‰Z¿ ‰g¿ ‰{¿ ‰Å¿ ‰Ö¿ ‰Ü¿ ‰í¿ ‰“¿ ‰‚¿ ‰˝¿ Â,¿ ÂU¿ Âú¿ Â—¿ Â€¿ Â„¿ Âˆ¿ Ê ¿ Ê¿ Ê¿ Ê¿ ÊK¿ ÊO¿ Ê†¿ Ê÷¿ Á ¿ Ám¿ Áß¿ Áƒ¿ Áﬁ¿ Á˝¿ Ë¿ Ë7¿ Ë[¿ Ën¿ Ëè¿ ËÆ¿ Ë≈¿ ËË¿ ËÈ¿ È8¿ È>¿ È_¿ Èe¿ È≥¿ È·¿ Í¿ Í¿ Í<¿ ÍV¿ Ít¿ ÍÇ¿ Íà¿ Íƒ¿ Í‹¿ Î¿ Î<¿ ÎB¿ ÎX¿ Î\¿ Î]¿ Îu¿ Îû¿ Î¥¿ Î’¿ Îı¿ Ï¿ Ï	¿ Ï#¿ Ï9¿ Ï=¿ Ï>¿ ÏZ¿ Ïw¿ Ïá¿ Ï¢¿ Ïº¿ Ï ¿ Ï–¿ Ï‰¿ Ï˙¿ Ï˛¿ Ïˇ¿ Ì¿ ÌR¿ ÌÑ¿ Ì¶¿ Ì™¿ Ì´¿ Ì∑¿ Ì˝¿ Ó)¿ Óf¿ Óö¿ Ó‘¿ Óÿ¿ Ó⁄¿ Ó€¿ Ô%¿ Ô&¿ Ôk¿ Ôz¿ Ô~¿ Ô¬¿ ¿ 0¿ 6¿ U¿ [¿ ¶¿ Ó¿ Ò¿ Ò¿ Ò+¿ ÒT¿ Òl¿ Òå¿ Òß¿ Ò¡¿ ÒÚ¿ Ú¿ Ú*¿ ÚO¿ ÚP¿ Ún¿ Út¿ Ú√¿ Ú€¿ Ú˚¿ Û¿ Û,¿ ÛF¿ ÛT¿ ÛZ¿ Ûn¿ ÛÑ¿ Ûà¿ Ûâ¿ Ûπ¿ Ûø¿ Ù
¿ Ù%¿ Ù+¿ Ùv¿ Ù|¿ Ù∂¿ ÙÈ¿ ı¿ ı2¿ ıS¿ ıa¿ ıg¿ ıÇ¿ ıò¿ ıú¿ ıù¿ ı©¿ ıƒ¿ ıŸ¿ ˆ¿ ˆ¿ ˆ8¿ ˆz¿ ˆñ¿ ˆﬁ¿ ˆ‰¿ ˆË¿ ˆÈ¿ ˆı¿ ˜=¿ ˜Y¿ ˜n¿ ˜ã¿ ˜≥¿ ˜…¿ ˜—¿ ˜◊¿ ¯¿ ¯¿ ¯¿ ¯¿ ¯U¿ ¯n¿ ¯Ç¿ ¯ê¿ ¯ñ¿ ¯ó¿ ¯™¿ ¯ﬁ¿ ˘ ¿ ˘>¿ ˘N¿ ˘o¿ ˘é¿ ˘≤¿ ˘À¿ ˘ﬂ¿ ˙¿ ˙0¿ ˙_¿ ˙l¿ ˙v¿ ˙î¿ ˙ú¿ ˙Ø¿ ˙π¿ ˙∫¿ ˙‰¿ ˚¿ ˚)¿ ˚D¿ ˚Y¿ ˚l¿ ˚â¿ ˚í¿ ˚ò¿ ˚‰¿ ˚˛¿ ¸¿ ¸+¿ ¸J¿ ¸S¿ ¸Y¿ ¸|¿ ¸î¿ ¸¢¿ ¸º¿ ¸ ¿ ¸˚¿ ˝¿ ˝T¿ ˝£¿ ˝Ú¿ ˛6¿ ˛s¿ ˛}¿ ˛£¿ ˛¨¿ ˛÷¿ ˛¯¿ ˛ˇ¿ ˇ ¿ ˇ¿ ˇ:¿ ˇM¿ ˇW¿ ˇ[¿ ˇ\¿ ˇh¿ ˇÆ¿ ˇ⁄¿ ¿ t¿ x¿ z¿ {¿ ¿¿ ƒ¿¿¿¿¿j¿z¿Ω¿‰¿Í¿#¿)¿w¿±¿…¿⁄¿
¿"¿=¿W¿à¿©¿™¿∂¿ˆ¿˜¿¿K¿g¿|¿ô¿¡¿◊¿ﬂ¿Â¿¿¿ ¿,¿c¿|¿ê¿û¿§¿•¿∏¿Â¿¿5¿E¿f¿Ö¿®¿¿¿‘¿¯¿%¿T¿a¿k¿â¿ë¿§¿Æ¿Ø¿Ÿ¿¿N¿ô¿ÿ¿	¿	.¿	R¿	m¿	v¿	è¿	£¿	∏¿	À¿	Ë¿	Ò¿	˜¿
C¿
]¿
t¿
à¿
ß¿
∞¿
∂¿
ÿ¿
¿
˛¿¿&¿W¿t¿∞¿ˇ¿N¿í¿œ¿Ÿ¿ˇ¿¿1¿S¿Z¿[¿k¿ï¿®¿≤¿∂¿∑¿√¿	¿5¿à¿å¿é¿è¿¥¿Œ¿¿¿¿J¿X¿Z¿[¿û¿–¿Ô¿ı¿C¿Ç¿à¿◊¿¿¿=¿~¿ø¿’¿ˆ¿¿:¿O¿P¿h¿i¿â¿è¿±¿›¿˜¿¿<¿J¿P¿i¿~¿ó¿≠¿±¿≤¿˝¿-¿M¿x¿ñ¿§¿™¿¡¿◊¿€¿‹¿'¿k¿Ö¿ã¿Œ¿¿N¿s¿£¿∆¿‘¿⁄¿ˆ¿¿¿¿¿/¿H¿]¿q¿∂¿ˇ¿K¿ó¿“¿Ë¿Ï¿Ì¿˘¿¿{¿¿Ä¿å¿√¿¿Y¿é¿©¿ª¿Û¿¿¿X¿j¿©¿„¿K¿i¿≈¿%¿Ç¿ë¿¿Ä¿é¿ò¿≠¿π¿€¿ˇ¿¿¿/¿d¿®¿ ¿Ó¿ˆ¿¸¿  ¿ ¿ ¿ R¿ }¿ ƒ¿!!¿!%¿!'¿!(¿!`¿!è¿!»¿!Œ¿!ˇ¿"¿"3¿"G¿"i¿"ã¿"Æ¿"–¿"Ê¿"¸¿#¿#<¿#d¿#å¿#¶¿#™¿#´¿#˚¿$3¿$9¿$à¿$À¿$Ï¿$ˇ¿%¿%9¿%G¿%M¿%b¿%x¿%ò¿%ú¿%ù¿%·¿%Á¿&3¿&}¿&É¿&”¿'¿'c¿'≤¿'Ò¿(B¿(t¿(ï¿(¡¿(‡¿(Ó¿(Ù¿)¿)"¿)B¿)F¿)G¿)É¿)â¿)ÿ¿*¿*F¿*g¿*ì¿*∂¿*ƒ¿* ¿*Ê¿*¸¿+¿+ ¿+!¿+-¿+{¿+|¿+…¿,¿,5¿,;¿,ã¿,‹¿,ˆ¿,˜¿-¿-]¿-|¿-Ç¿-Œ¿.¿.B¿.å¿.´¿.π¿.ø¿.Â¿.˚¿/¿/¿/ ¿/r¿/x¿/∏¿/Ó¿0¿0;¿0^¿0l¿0r¿0Æ¿0 ¿1¿1*¿10¿1F¿1J¿1K¿1|¿1ì¿1≤¿1»¿1Ë¿1Ï¿1Ì¿20¿2Q¿2s¿2â¿2©¿2≠¿2Æ¿2Ò¿3¿34¿3J¿3j¿3n¿3o¿3≤¿3”¿3ı¿4¿4+¿4/¿40¿4r¿4≥¿4◊¿4Ì¿5¿5¿5¿5A¿5t¿5î¿5™¿5 ¿5Œ¿5œ¿5Ù¿6@¿6x¿6ë¿6ó¿6∆¿6·¿7¿7¿72¿7W¿7é¿7∆¿7Ã¿7Ó¿8¿8N¿8T¿8o¿8£¿8©¿8º¿8¿¿8¡¿8Õ¿9¿9L¿9â¿9«¿9·¿:¿:¿:¿:*¿:z¿:π¿:‚¿;#¿;=¿;y¿;ª¿;ƒ¿;À¿;œ¿;–¿;‹¿<¿<,¿<b¿<Ö¿<“¿<ı¿=J¿=é¿=ƒ¿=Ô¿>	¿>¿>)¿>R¿>p¿>Ñ¿>õ¿>¥¿?¿?¿?#¿?Y¿?q¿?{¿?ä¿?Í¿@.¿@k¿@ë¿@∫¿@≈¿@Ó¿A9¿Ae¿Av¿AØ¿Aπ¿AÒ¿B¿B3¿BJ¿BX¿B`¿Bf¿Bj¿Bk¿Bw¿B∏¿BÊ¿BÍ¿BÎ¿B˜¿C<¿Cg¿CÆ¿CÒ¿DE¿D™¿E¿E¿E¿E¿EM¿E|¿E∞¿E∂¿EÚ¿F¿F'¿F[¿F}¿Fì¿F∂¿F…¿FË¿G¿G4¿GI¿GJ¿Gk¿Gl¿GÄ¿G¶¿G¥¿G∫¿Gı¿G˘¿G˙¿H¿H8¿HN¿HR¿HS¿Hz¿Hç¿H™¿Hø¿H⁄¿HÛ¿I¿I(¿ID¿I\¿Ir¿Ix¿I|¿I}¿I≈¿Iﬂ¿IÓ¿J¿J!¿J/¿J5¿JV¿Jh¿J™¿J√¿J–¿JÈ¿K¿K¿K¿K¿KE¿KK¿Kõ¿KÏ¿L¿L"¿La¿Lâ¿L∫¿L⁄¿M¿M$¿M2¿M8¿MP¿Mg¿MÇ¿MÜ¿Má¿M√¿M…¿N¿NP¿NÜ¿Nß¿N”¿Nˆ¿O¿O
¿O&¿O=¿OX¿O\¿O]¿Oû¿Oü¿O´¿O·¿O˙¿PD¿PE¿Pë¿Pﬂ¿Q+¿QL¿Qq¿QÉ¿Q‰¿R¿R¿R&¿R2¿RP¿R|¿Rº¿R»¿R‚¿RÍ¿RÎ¿S ¿S¿Sf¿Sÿ¿T¿T0¿TK¿Te¿TÑ¿T¢¿Tº¿U¿U¿U'¿UJ¿UP¿UT¿UU¿Ua¿Uz¿Uì¿U÷¿UÎ¿V
¿VQ¿V≈¿W ¿W¿W8¿WR¿Wq¿Wè¿W©¿X¿X	¿X"¿X/¿XR¿XX¿X\¿X]¿Xy¿Xê¿Xë¿X«¿XÕ¿Y¿Y,¿YN¿Yo¿Yë¿YÆ¿Y∆¿YË¿YÓ¿YÚ¿YÛ¿Z¿Z-¿ZD¿ZH¿ZI¿Ze¿ZÉ¿Zë¿Zó¿Zò¿Z±¿Z”¿Z˙¿[¿[¿[C¿[á¿[—¿\¿\Ä¿\Ë¿]O¿]Å¿]ﬁ¿^¿^;¿^Ü¿^å¿^ê¿^ë¿^Ê¿_1¿_P¿_t¿_é¿_û¿_≥¿_»¿`¿`¿`+¿`]¿`c¿`t¿`x¿`y¿`Ö¿`º¿`¸¿a
¿a¿a(¿aC¿a¿a£¿aΩ¿aÕ¿aÈ¿b¿bV¿bz¿bÉ¿bê¿b…¿bœ¿b”¿b‘¿b‡¿c0¿cj¿c~¿cÑ¿cú¿c≈¿c‚¿c¸¿d8¿dz¿dÉ¿dä¿dé¿dè¿dõ¿d¡¿d„¿e¿e¿e¿e%¿ef¿eÖ¿e†¿e≠¿e«¿eÓ¿eÙ¿e¯¿e˘¿f¿fJ¿fu¿f´¿fˇ¿gd¿gh¿gj¿gk¿gØ¿g≥¿h¿hL¿hÉ¿há¿hƒ¿i¿i$¿i_¿i£¿i©¿i‹¿i¸¿j¿j@¿jV¿jy¿jé¿jè¿jÿ¿jﬁ¿k-¿kf¿kê¿kß¿k…¿kÍ¿k¯¿k˛¿l¿l.¿lN¿lR¿lS¿l_¿lß¿lÍ¿m'¿me¿m¿m∑¿mª¿mº¿n	¿nR¿nu¿n{¿nÀ¿o¿o6¿o7¿oC¿oì¿o≤¿oÿ¿o¯¿pF¿pX¿pr¿pÆ¿p¿p˘¿q ¿q¿q¿q¿qH¿qg¿qÄ¿q£¿q‘¿r¿r¿r¿r¿r¿r'¿rh¿rÅ¿r§¿r»¿rœ¿r”¿r‘¿r‡¿s%¿sP¿sù¿sÙ¿s¯¿s˙¿s˚¿t5¿t9¿tm¿t∑¿t∏¿tÚ¿tˆ¿u*¿ut¿uu¿u≠¿u±¿uÂ¿v+¿v,¿vh¿vl¿v†¿vÓ¿vÔ¿w1¿w5¿wi¿w√¿wƒ¿x¿x¿x?¿xõ¿xú¿x‹¿x‡¿y¿yj¿yk¿yß¿y´¿yﬂ¿z-¿z.¿zh¿zl¿z¥¿{ ¿{¿{T¿{ö¿{≈¿{…¿|	¿|¿|\¿|§¿|Ì¿|Û¿}=¿}W¿}o¿}á¿}ù¿}∂¿}–¿}¿~¿~/¿~I¿~]¿~n¿~t¿~u¿~ø¿¿ ¿K¿L¿ú¿«¿»¿Ä¿Ä5¿Ä\¿Ä]¿Ä´¿Äÿ¿ÄŸ¿Å)¿ÅY¿Åà¿Åâ¿ÅŒ¿Ç	¿Ç
¿Ç3¿Çp¿Çq¿Çò¿Çœ¿Ç–¿É¿É;¿É<¿ÉH¿ÉÉ¿É£¿Éß¿É®¿É¥¿ÉÒ¿Ñ¿ÑB¿Ñk¿Ñq¿Ññ¿Ñø¿Ñ≈¿ÑË¿Ö¿Ö¿Ö;¿Öe¿Ök¿Öí¿ÖΩ¿Ö√¿Ö¿Ü!¿Ü'¿ÜU¿Üá¿Üç¿Ü∏¿ÜÁ¿ÜÌ¿á¿á?¿áE¿áI¿áJ¿áV¿áõ¿á∆¿áÚ¿à¿à ¿à?¿à^¿ày¿àö¿àΩ¿àÏ¿â¿âH¿âk¿ât¿âç¿âï¿âô¿âõ¿âú¿âÍ¿âÓ¿ä:¿äá¿ä•¿ä©¿ä¯¿ãH¿ãi¿ãm¿ã∞¿ã¥¿å¿å
¿å¿å¿å^¿åz¿å‡¿ç)¿ç/¿ç{¿ç ¿çÎ¿é¿é¿é%¿é6¿éb¿éà¿é†¿é±¿é¿è	¿è>¿èW¿èö¿èõ¿èß¿èÔ¿ê0¿ê4¿ê5¿êA¿ê~¿ê™¿ê„¿ë¿ë¿ë¿ë¿ë]¿ëÆ¿ë…¿ëœ¿í¿í`¿í®¿í„¿íÈ¿ì:¿ìÖ¿ì™¿ì∞¿ìÕ¿ìÎ¿ì˚¿î¿î2¿îI¿îñ¿îÆ¿î¥¿î∏¿îπ¿î·¿îÁ¿ï ¿ïT¿ïÑ¿ï ¿ïÍ¿ñ¿ñR¿ñj¿ñp¿ñt¿ñu¿ñÅ¿ñß¿ñ®¿ñÛ¿ó
¿ó¿óT¿óz¿ó{¿óá¿ó´¿ó¨¿ó∏¿ó›¿óÙ¿ò¿ò2¿òI¿òç¿ò ¿ò‚¿òË¿òÏ¿òÌ¿ò˘¿ô3¿ôQ¿ôR¿ô^¿ôÉ¿ôú¿ôæ¿ô¬¿ô√¿ôœ¿ô·¿ö,¿öá¿öØ¿ö“¿öÊ¿öÍ¿öÎ¿ö˜¿õ2¿õR¿õV¿õW¿õc¿õ®¿õ”¿õˇ¿ú¿ú-¿úG¿úa¿úy¿úÇ¿úõ¿ú£¿ù¿ùa¿ùÒ¿ùı¿ù˜¿ù¯¿û+¿û/¿û{¿û«¿ü¿ü`¿üÆ¿üˇ¿†¿†¿†m¿†ª¿°¿°[¿°¶¿°ˆ¿¢D¿¢á¿¢ã¿¢—¿£¿£j¿£π¿§ ¿§M¿§Ç¿§≥¿§Ò¿§Ú¿§˛¿•$¿•%¿•o¿•¿•Ö¿•’¿¶¿¶¿¶h¿¶ñ¿¶ú¿¶Í¿ß#¿ßr¿ß¡¿ß„¿ßÈ¿ßˇ¿®¿®L¿®n¿®t¿®Ç¿®Ø¿®”¿®Ÿ¿®Î¿©$¿©,¿©2¿©e¿©ê¿©ñ¿©¡¿™:¿™u¿™“¿´¿´2¿´<¿´B¿´T¿´Å¿´£¿´ø¿´⁄¿´˚¿¨#¿¨w¿¨à¿¨ó¿¨§¿¨Æ¿¨∂¿¨¿¿¨“¿¨ÿ¿¨Ë¿¨Ó¿≠3¿≠É¿≠Ω¿≠€¿Æ¿Æb¿Æf¿Æg¿Æ±¿Æœ¿Æ’¿Ø%¿Øa¿Øg¿Øº¿ØÍ¿Ø¿∞>¿∞w¿∞∆¿±¿±7¿±=¿±è¿±ﬁ¿±‰¿±˙¿≤ ¿≤G¿≤s¿≤y¿≤á¿≤Ω¿≤Í¿≤¿≥¿≥M¿≥U¿≥[¿≥†¿≥À¿≥—¿≥¿¥i¿¥¢¿¥Á¿¥Ò¿¥˜¿µ	¿µ6¿µX¿µt¿µè¿µ∞¿µ⁄¿∂.¿∂?¿∂N¿∂[¿∂e¿∂m¿∂w¿∂â¿∂è¿∂ü¿∂•¿∂Ó¿∑B¿∑x¿∑ñ¿∑—¿∏!¿∏%¿∏&¿∏v¿∏≈¿π¿π^¿πd¿π±¿πΩ¿π√¿∫¿∫^¿∫s¿∫¥¿∫Ÿ¿∫⁄¿ª)¿ªw¿ª√¿º¿ºX¿ºé¿ºî¿º·¿ºÌ¿ºÛ¿ΩD¿Ωè¿Ωß¿ΩÍ¿æ¿æ¿æ]¿æs¿æy¿æƒ¿æ·¿æÒ¿ø¿ø<¿øO¿øY¿ø]¿ø^¿øj¿ø—¿ø·¿¿¿¿6¿¿E¿¿n¿¿v¿¿â¿¿ì¿¿ó¿¿ò¿¿§¿¿È¿¡¿¡3¿¡C¿¡`¿¡ß¿¬¿¬¿¬ì¿¬≥¿¬˚¿√S¿√x¿√‡¿ƒ¿ƒS¿ƒy¿≈¿≈;¿≈•¿≈⁄¿∆;¿∆L¿∆∞¿∆∫¿«U¿«ñ¿«û¿«±¿«ª¿«‘¿»A¿»G¿»K¿»M¿»N¿»à¿»å¿»€¿…*¿…{¿…§¿…®¿…›¿…·¿…Ô¿…Û¿ A¿ o¿ ¢¿ ‚¿ Ë¿À¿À0¿ÀF¿À`¿Àq¿À¡¿À¸¿Ã¿Ã¿Ã<¿Ãk¿ÃÄ¿ÃÅ¿Ã¡¿Ã«¿Õ¿Õe¿Õk¿Õ¢¿Õƒ¿Õ÷¿ÕÛ¿Œ¿Œ¿Œ%¿Œ<¿Œa¿ŒÉ¿Œâ¿Œç¿Œé¿ŒÓ¿ŒÙ¿œ+¿œ1¿œÄ¿œè¿œ›¿–¿–¿–O¿–k¿–í¿–π¿–«¿–Õ¿–Ì¿—¿—¿—¿—¿—f¿—©¿—≠¿—Æ¿—∫¿—˙¿“!¿“/¿“5¿“c¿“g¿“h¿“t¿“ª¿“Ì¿”>¿”[¿”©¿”≠¿”Æ¿”∫¿”ˇ¿‘*¿‘p¿‘Ñ¿‘•¿‘¬¿‘ﬁ¿’9¿’B¿’I¿’M¿’O¿’P¿’†¿’Ô¿÷¿÷5¿÷^¿÷q¿÷ã¿÷°¿÷æ¿÷”¿÷‘¿◊¿◊¿◊b¿◊≥¿◊‡¿◊Ê¿ÿ#¿ÿE¿ÿW¿ÿt¿ÿí¿ÿ†¿ÿ¶¿ÿΩ¿ÿÍ¿ÿÓ¿ÿÔ¿ÿ˚¿Ÿ.¿ŸB¿ŸT¿ŸZ¿Ÿç¿Ÿë¿Ÿí¿Ÿû¿Ÿ—¿ŸÂ¿Ÿ˜¿Ÿ˝¿⁄0¿⁄4¿⁄5¿⁄A¿⁄t¿⁄à¿⁄ö¿⁄†¿⁄”¿⁄◊¿⁄ÿ¿⁄‰¿€¿€+¿€=¿€C¿€v¿€z¿€{¿€á¿€ ¿€ﬁ¿€Ò¿€˜¿‹3¿‹7¿‹8¿‹D¿‹j¿‹k¿‹w¿‹≠¿‹¡¿‹‰¿‹Í¿›¿›¿›¿›+¿›D¿›Z¿›u¿›y¿›z¿›Ü¿›ü¿›≥¿›’¿›‚¿›ˇ¿ﬁ¿ﬁ	¿ﬁ
¿ﬁ¿ﬁ^¿ﬁ°¿ﬁ•¿ﬁ¶¿ﬁ≤¿ﬁÿ¿ﬁ˙¿ﬂ¿ﬂ¿ﬂ¿ﬂ!¿ﬂX¿ﬂl¿ﬂz¿ﬂÄ¿ﬂ¢¿ﬂ¶¿ﬂß¿ﬂ≥¿ﬂÛ¿‡¿‡¿‡¿‡I¿‡M¿‡N¿‡Z¿‡ü¿‡ ¿·¿·¿·¿· ¿·R¿·k¿·ç¿·ì¿·±¿·—¿·Ë¿‚?¿‚H¿‚O¿‚S¿‚U¿‚V¿‚î¿‚ò¿‚„¿„/¿„Ä¿„Õ¿„ı¿„˘¿‰.¿‰2¿‰@¿‰D¿‰é¿‰ÿ¿Â¿ÂS¿ÂY¿Âä¿Â¢¿Â∏¿Â”¿Â‰¿Ê4¿Êo¿Êu¿Êí¿Ê±¿Ê‡¿Êı¿Êˆ¿Á<¿ÁB¿Áç¿Á‹¿ÁÏ¿ÁÚ¿Ë)¿ËM¿Ë`¿Ë~¿Ëù¿Ë´¿Ë±¿Ë…¿ËÓ¿È¿È¿È¿È¿Èk¿ÈÅ¿Èá¿Èæ¿Èƒ¿Í¿Í"¿Íp¿Í©¿Í≠¿Í‚¿Í˛¿Î%¿ÎL¿ÎZ¿Î`¿ÎÄ¿Î†¿Î§¿Î•¿Î±¿Î˘¿Ï¿Ï0¿Ïe¿Ïi¿Ïj¿Ïv¿Ï∂¿Ï›¿ÏÎ¿ÏÒ¿Ì¿Ì#¿Ì$¿Ì0¿Ìw¿Ì©¿Ì˙¿Ó¿Óe¿Ói¿Ój¿Óv¿Óª¿ÓÊ¿Ô-¿ÔA¿Ôb¿Ô¿Ôö¿ÔÛ¿Ô¸¿¿¿	¿
¿9¿=¿é¿ﬂ¿Ò*¿ÒO¿Òê¿Ò ¿Ò–¿Ú¿Ú-¿Ú@¿ÚT¿Úe¿Úk¿Úl¿Úü¿Ú≥¿Ú¥¿Ú¿¿Û¿Û0¿Ûx¿Û|¿Û~¿Û¿Û∆¿Û‚¿Ù2¿Ù}¿ÙÉ¿Ù«¿ÙÈ¿Ù˙¿ı¿ıD¿ı{¿ı∞¿ıÕ¿ı·¿ı¯¿ˆ¿ˆT¿ˆâ¿ˆä¿ˆŸ¿˜¿˜	¿˜W¿˜§¿˜≈¿˜À¿¯¿¯_¿¯Æ¿¯¯¿˘C¿˘a¿˘ú¿˘√¿˘ı¿˙1¿˙?¿˙E¿˙`¿˙Ä¿˙Ñ¿˙Ö¿˙ª¿˙Ê¿˚¿˚-¿˚H¿˚V¿˚\¿˚à¿˚ú¿˚≈¿˚Á¿˚Ì¿˚Ò¿˚Ú¿¸E¿¸Ç¿¸¨¿¸·¿˝¿˝¿˝¿˝H¿˝b¿˝ã¿˝≠¿˝≥¿˝∑¿˝∏¿˝¯¿˛L¿˛Ç¿˛√¿˛Ô¿˛˝¿ˇ¿ˇ@¿ˇe¿ˇé¿ˇ∞¿ˇ∂¿ˇ∫¿ˇª¿ˇÍ¿ :¿ n¿ ≠¿ ◊¿ Â¿ Î¿&¿I¿r¿î¿ö¿û¿ü¿‚¿)¿i¿®¿æ¿’¿÷¿‚¿)¿[¿\¿ú¿∏¿æ¿
¿2¿8¿b¿õ¿◊¿ﬂ¿¿Q¿Y¿_¿á¿Ω¿Û¿˚¿3¿m¿u¿{¿¿Ä¿∞¿Û¿˜¿¯¿¿H¿Ü¿∑¿˝¿>¿H¿N¿R¿S¿z¿§¿·¿	¿	X¿	ô¿	£¿	©¿	≠¿	Æ¿	“¿	˙¿
9¿
h¿
Æ¿
Ô¿
˘¿
ˇ¿¿¿*¿R¿ê¿ø¿¿F¿P¿V¿Z¿[¿g¿¨¿◊¿¿#¿P¿è¿ ¿—¿Ì¿¿¿U¿Y¿[¿\¿ô¿”¿¿¿M¿S¿æ¿›¿Û¿ ¿<¿a¿Ñ¿ß¿…¿È¿¿I¿w¿ü¿¡¿ÿ¿¿¿¿U¿ä¿≠¿€¿˚¿	¿¿(¿R¿r¿v¿w¿æ¿¿3¿9¿ç¿‹¿¯¿¿/¿M¿k¿y¿¿ó¿∑¿ª¿º¿	¿L¿R¿¢¿Ú¿¿R¿ñ¿∫¿¿¿ı¿E¿y¿Ø¿À¿Ú¿¿(¿.¿O¿o¿s¿t¿¿¿€¿·¿-¿{¿√¿ı¿¿4¿Z¿h¿n¿ç¿≠¿±¿≤¿ˆ¿¸¿B¿}¿†¿“¿Ï¿¿7¿E¿K¿j¿ä¿é¿è¿À¿¿=¿à¿”¿
¿¿¿Z¿~¿≈¿…¿ ¿ ¿ 9¿ Ä¿ Ñ¿ Ö¿ Ω¿ ‡¿!¿!3¿!F¿!~¿!Ç¿!É¿!ª¿!ﬁ¿"¿"6¿"I¿"Å¿"Ö¿"Ü¿"–¿"Û¿#8¿#<¿#=¿#c¿#â¿#∏¿#Á¿$¿$¿$]¿$j¿$p¿$∂¿$‚¿%¿%H¿%ã¿%¡¿%‚¿&¿&0¿&>¿&D¿&`¿&Ä¿&Ñ¿&Ö¿&ë¿&—¿&Ì¿&˚¿'¿'/¿'3¿'4¿'@¿'á¿'π¿'‰¿(¿(M¿(Y¿(¬¿)
¿)¿)¿)h¿)±¿)∏¿)π¿)‡¿*¿*¿*;¿*i¿*o¿*î¿*»¿*Œ¿*ı¿+#¿+)¿+Q¿+Ç¿+à¿+Æ¿+€¿+·¿,¿,.¿,4¿,Z¿,á¿,ç¿,∏¿,Ô¿,ı¿-¿-H¿-N¿-w¿-™¿-∞¿-ÿ¿.	¿.¿.8¿.k¿.q¿.ò¿.«¿.Õ¿/¿/V¿/\¿/Ñ¿/µ¿/ª¿/‰¿0¿0¿0C¿0p¿0v¿0õ¿0∆¿0Ã¿0¿1"¿1(¿1L¿1~¿1Ñ¿1±¿1ı¿1˚¿2(¿2l¿2r¿2ï¿2≈¿2À¿2Ú¿3¿3%¿3{¿3≥¿3π¿3‰¿4¿4¿4I¿4|¿4Ç¿4¨¿4ﬂ¿4Â¿5¿5M¿5S¿5Ö¿5«¿5Õ¿5Ó¿6¿6 ¿6G¿6s¿6y¿6ß¿6‰¿6Í¿77¿7Ü¿7»¿7Ì¿8¿8¿8@¿8n¿8t¿8ù¿8«¿8Õ¿8˘¿9)¿9/¿9\¿9é¿9î¿9æ¿9Í¿9¿:¿:L¿:R¿:|¿:®¿:Æ¿:ÿ¿;¿;
¿;0¿;T¿;Z¿;¿;°¿;ß¿;Œ¿;Ù¿;˙¿<8¿<å¿<í¿<—¿='¿=-¿=f¿=∞¿=∂¿=¿><¿>B¿>p¿>§¿>™¿>”¿>˝¿?¿?>¿?å¿?í¿?Õ¿@¿@!¿@W¿@¢¿@®¿@¨¿@≠¿@ƒ¿@„¿@Á¿@Ë¿A¿A*¿A.¿A/¿AJ¿Am¿Aq¿Ar¿Aê¿A∂¿A∫¿Aª¿A⁄¿B¿B¿B¿B"¿BF¿BJ¿BK¿Bi¿Bè¿Bì¿Bî¿B∞¿B‘¿Bÿ¿BŸ¿Bı¿C¿C¿C¿C6¿CV¿CZ¿C[¿Cr¿Cë¿Cï¿Cñ¿CØ¿C–¿C‘¿C’¿D¿D`¿Dd¿De¿D™¿DÚ¿Dˆ¿D˜¿E6¿Ex¿E|¿E}¿EΩ¿F ¿F¿F¿F<¿Fm¿Fq¿Fr¿Fò¿Fø¿F√¿Fƒ¿FÒ¿G&¿G*¿G+¿GX¿Gç¿Gë¿Gì¿Gî¿G„¿Gˇ¿H¿HR¿HÜ¿H∫¿I	¿I¿I/¿IE¿I_¿I|¿Ië¿Ií¿Iﬂ¿J/¿JQ¿Jc¿JÄ¿Jû¿J¨¿J≤¿J…¿JÈ¿JÌ¿JÓ¿J˙¿KA¿Ks¿K∂¿K∫¿Kª¿K«¿L¿L7¿L|¿LÄ¿LÇ¿LÉ¿L∆¿M	¿M¿M!¿Mh¿MØ¿M·¿N¿Nc¿N†¿N°¿N≠¿NÙ¿O&¿O1¿OS¿OÉ¿Oá¿Oâ¿Oä¿Oº¿O¿¿P¿P+¿P/¿Pv¿P±¿PÁ¿Q0¿QK¿Qa¿Q|¿Qõ¿Q∞¿Q±¿Qˆ¿R¿R-¿RK¿Rj¿Rx¿R~¿Rñ¿R∂¿R∫¿Rª¿R«¿S¿S¿S*¿S0¿S^¿Sb¿Sc¿So¿S¥¿Sﬂ¿T&¿T*¿T,¿T-¿Tj¿Tn¿T∏¿U¿U3¿U]¿Ua¿Uo¿Us¿U∂¿UÏ¿V<¿VW¿Vm¿VÖ¿Vú¿V±¿V≤¿VÂ¿W ¿W¿W'¿WA¿WO¿WU¿Wi¿Wâ¿Wç¿Wé¿Wö¿W·¿X¿X5¿X9¿X:¿XF¿Xã¿X∂¿XÙ¿X¯¿X˙¿X˚¿Y/¿Y3¿YA¿YE¿YÉ¿Yƒ¿Yı¿Z.¿Z4¿ZW¿Zm¿Zä¿Z†¿Zµ¿Z ¿ZÀ¿[¿[7¿[=¿[ä¿[»¿[Á¿[˙¿\¿\2¿\@¿\F¿\c¿\v¿\ù¿\À¿\—¿\Á¿\Î¿\Ï¿\¯¿]#¿]$¿]r¿]¿¿^¿^¿^ ¿^,¿^E¿^`¿^Ä¿^ú¿^†¿^°¿^≠¿^‰¿^˝¿_4¿_A¿_~¿_ê¿_¶¿_¡¿_«¿` ¿`¿`:¿`M¿`W¿`[¿`\¿`h¿`≠¿`ÿ¿a¿a¿a ¿a!¿ao¿a¢¿a¶¿aÚ¿aˆ¿bA¿bí¿b¶¿b™¿b∏¿bº¿b¸¿c?¿cr¿c≠¿c≥¿cÌ¿d¿d"¿dD¿de¿dï¿d«¿d›¿dÚ¿e¿e8¿e]¿eÜ¿eõ¿eú¿e‚¿f¿f7¿fJ¿fh¿fÇ¿fê¿fñ¿f©¿fø¿f√¿fƒ¿g¿gF¿gL¿gù¿gﬂ¿gÂ¿h6¿hÖ¿hπ¿hÎ¿i¿i*¿iP¿i^¿id¿iÉ¿iô¿iù¿iû¿iÎ¿j¿j5¿jG¿jd¿jÄ¿jé¿jî¿j©¿jø¿j√¿jƒ¿k¿k,¿k2¿kw¿kº¿l¿lM¿lú¿l›¿m¿mH¿m]¿mc¿mä¿mπ¿m‘¿m˙¿n¿n*¿n0¿nK¿na¿ne¿nf¿n≤¿nÏ¿nÚ¿o4¿o:¿oa¿oî¿o±¿oŸ¿o˝¿p¿p¿p.¿pD¿pH¿pI¿pU¿pg¿py¿pç¿pë¿pí¿pû¿p…¿p ¿q ¿q¿qI¿qJ¿qö¿q†¿q¿r!¿rp¿rä¿r¨¿rË¿rÏ¿rÌ¿r˘¿sA¿sÇ¿s∂¿s ¿s–¿t¿tH¿tÜ¿t†¿tÿ¿t‹¿t›¿tÈ¿u9¿ub¿uä¿u§¿u‡¿v"¿v+¿v2¿v6¿v7¿vC¿vz¿v®¿v¥¿w¿wd¿wØ¿w⁄¿w·¿x¿x1¿xå¿x•¿x¬¿x÷¿y¿y/¿yO¿yX¿ye¿yq¿yà¿y∂¿yÂ¿z¿z¿z%¿z3¿zF¿zY¿zÜ¿z‰¿{¿{&¿{?¿{X¿{a¿{h¿{x¿{¢¿{µ¿{ø¿{√¿{ƒ¿{–¿|¿|@¿|D¿|E¿|Q¿|ñ¿|¡¿}¿}X¿}õ¿}ı¿}˘¿}˚¿}¸¿~K¿~O¿~]¿~a¿~•¿~Í¿1¿2¿y¿ã¿ë¿ﬁ¿Ä¿Ä¿ÄE¿Ä_¿Äu¿Äé¿Ä§¿Äª¿Ä“¿ÄÁ¿ÄË¿Å!¿Å:¿ÅF¿Åa¿Å¿Åç¿Åì¿Å™¿Å¿¿Åƒ¿Å≈¿Ç¿Ç5¿ÇD¿Ç^¿Çy¿Çá¿Çç¿Ç°¿Ç∑¿Çª¿Çº¿Ç»¿ÇÙ¿Çı¿É¿É8¿Éí¿É’¿É‚¿Ñ¿Ñ(¿Ñ/¿Ñb¿Ñf¿Ñh    
Ä•Ä∫ÄºÄ‰ÄÁ  Å  Å:  Åb  Åã  Å¥  Å«  Å‹  Å˘  ÇÇ7Çö )ÇùÑsÖèÇÎ/// A base class for render boxes that resemble their children.
///
/// A proxy box has a single child and mimics all the properties of that
/// child by calling through to the child for each function in the render box
/// protocol. For example, a proxy box determines its size by asking its child
/// to layout with the same constraints and then matching the size.
///
/// A proxy box isn't useful on its own because you might as well just replace
/// the proxy box with its child. However, RenderProxyBox is a useful base class
/// for render objects that wish to mimic most, but not all, of the properties
/// of their child.
///
/// See also:
///
///  * [RenderProxySliver], a base class for render slivers that resemble their
///    children. ÖˇÅ ÜŒÜ‹Äƒ/// Creates a proxy render box.
///
/// Proxy render boxes are rarely created directly because they proxy
/// the render box protocol to [child]. Instead, consider using one of the
/// subclasses.ÜﬁÜÍ       í‹ÖõìDX/// A RenderProxyBox subclass that allows you to customize the
/// hit-testing behavior. ìÅÄ˝ ì˛îv/// Initializes member variables for subclasses.
///
/// By default, the [behavior] is [HitTestBehavior.deferToChild].î&,î,  îXîd  î6îEîFîqîvî|îwîÇÅ1ï´Å/// How to behave during hit testing when deciding how the hit test propagates
/// to children and whether to consider targets behind this one.
///
/// Defaults to [HitTestBehavior.deferToChild].
///
/// See [HitTestBehavior] for the allowed values and their meanings.  ï∏Åáï…  ï—ï„  ïÏï˝  ï∏ïπóCTóT  ó`óh  óCóDóõÄ⁄ó¨  ó¿&ó›  óõóú òyêƒöcÅ„/// Imposes additional constraints on its child.
///
/// A render constrained box proxies most functions in the render box protocol
/// to its child, except that when laying out its child, it tightens the
/// constraints provided by its parent by enforcing the [additionalConstraints]
/// as well.
///
/// For example, if you wanted [child] to have a minimum height of 50.0 logical
/// pixels, you could use `const BoxConstraints(minHeight: 50.0)` as the
/// [additionalConstraints]. öìÅq õõ2ÄÑ/// Creates a render box that constrains its child.
///
/// The [additionalConstraints] argument must not be null and must be valid.õ9õE  õO-õh  õÖõãõ∂õåõ°õ¢õ¥õµõ◊õ¿õŸõ˜õ¸úõ˝úé%úù  úÄÉú[=/// Additional constraints to apply to [child] during layout.   ú∑Ä◊úª  ú—ú·   ùíÅ≤ù•  ùæù∆  ùíùìüHÅ≤ü[  ütü|  üHüI†˛Åª°  °+°3  †˛†ˇ¢ΩÅª¢–  ¢Í¢Ú  ¢Ω¢æ§|ÅL§ç   §|§}•ÃÅ•›  •Ó•˛  •Ã•Õ¶›Åt¶Ó  ¶˝ß  ßß  ¶›¶ﬁ®UÄÊ®f  ®z&®ó  ®U®V ©?åW´µÇo/// Constrains the child's [BoxConstraints.maxWidth] and
/// [BoxConstraints.maxHeight] if they're otherwise unconstrained.
///
/// This has the effect of giving the child a natural dimension in unbounded
/// environments. For example, by providing a [maxHeight] to a widget that
/// normally tries to be as big as possible, the widget will normally size
/// itself to fit its parent, but when placed in a vertical list, it will take
/// on the given height.
///
/// This is useful when composing widgets that normally try to match their
/// parents' size, so that they behave reasonably in lists (which are
/// unbounded). ´·Å ¨»¨ÿÄ‹/// Creates a render box that imposes a maximum width or maximum height on its
/// child if the child is otherwise unconstrained.
///
/// The [maxWidth] and [maxHeight] arguments not be null and must be
/// non-negative.¨ﬂ¨Î  ¨ı!¨˝  ≠"≠$  ≠≠≠≠/≠5≠6≠G≠M≠]≠W≠N≠Z≠g≠m≠~≠x≠n≠{≠í≠à≠î≠∞≠•≠≤≠ƒ≠…≠œ≠ ÆNÆU  Ø}ØÑ  ≠’vÆ5R/// The value to use for maxWidth if the incoming maxWidth constraint is infinite.   ÆbÄöÆf  ÆoÆw   Ø zØbT/// The value to use for maxHeight if the incoming maxHeight constraint is infinite.   ØíÄùØñ  Ø†Ø®   ∞3Åç∞B  ∞T∞d   ±ƒÅC±…  ±◊#±  ±¸"≤   ≥Ä∏≥  ≥-≥=  ≥≥≥«Äò≥ÿ   ≥«≥»¥cÅ1¥t  ¥à&¥•  ¥c¥d µòñîºÜ{/// Attempts to size the child to a specific aspect ratio.
///
/// The render object first tries the largest width permitted by the layout
/// constraints. The height of the render object is determined by applying the
/// given aspect ratio to the width, expressed as a ratio of width to height.
///
/// For example, a 16:9 width:height aspect ratio would have a value of
/// 16.0/9.0. If the maximum width is infinite, the initial width is determined
/// by applying the aspect ratio to the maximum height.
///
/// Now consider a second example, this time with an aspect ratio of 2.0 and
/// layout constraints that require the width to be between 0.0 and 100.0 and
/// the height to be between 0.0 and 100.0. We'll select a width of 100.0 (the
/// biggest allowed) and a height of 50.0 (to match the aspect ratio).
///
/// In that same situation, if the aspect ratio is 0.5, we'll also select a
/// width of 100.0 (still the biggest allowed) and we'll attempt to use a height
/// of 200.0. Unfortunately, that violates the constraints because the child can
/// be at most 100.0 pixels tall. The render object will then take that value
/// and apply the aspect ratio again to obtain a width of 50.0. That width is
/// permitted by the constraints and the child receives a width of 50.0 and a
/// height of 100.0. If the width were not permitted, the render object would
/// continue iterating through the constraints. If the render object does not
/// find a feasible size after consulting each constraint, the render object
/// will eventually select a size for the child that meets the layout
/// constraints but fails to meet the aspect ratio constraints. ºGÅO ºÕºﬁ/// Creates as render object with a specific aspect ratio.
///
/// The [aspectRatio] argument must be a finite, positive value.ºÂºÒ  º˚Ω  ΩΩ%Ω7Ω2Ω&Ω4ΩAΩGΩ\ΩHΩSΩTΩsΩfΩuΩâΩéΩîΩèæãæí  ΩöÄÓælÄæ/// The aspect ratio to attempt to use.
///
/// The aspect ratio is expressed as a ratio of width to height. For example,
/// a 16:9 width:height aspect ratio would have a value of 16.0/9.0.   æ¢Äææ¶  æ≤æ∫   ødÄÊøw  øêøò  ødøe¿ @NÄÊ¿ @a  ¿ @z¿ @Ç  ¿ @N¿ @O¿ A8Ä‰¿ AK  ¿ Ae¿ Am  ¿ A8¿ A9¿ B Ä‰¿ B3  ¿ BM¿ BU  ¿ B ¿ B!¿ CáK¿ C  ¿ C¿ C/   ¿ JWn¿ Jh  ¿ Jy¿ Jâ  ¿ JW¿ JX¿ J…Ä†¿ J⁄   ¿ J…¿ J ¿ KmÄΩ¿ K~  ¿ Kí&¿ KØ  ¿ Km¿ Kn ¿ L.ïv¿ RÜº/// Sizes its child to the child's maximum intrinsic width.
///
/// This class is useful, for example, when unlimited width is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable width.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic width, then the child will get less width
/// than it otherwise would. Likewise, if the minimum width constraint is
/// larger than the child's maximum intrinsic width, the child will be given
/// more width than it otherwise would.
///
/// If [stepWidth] is non-null, the child's width will be snapped to a multiple
/// of the [stepWidth]. Similarly, if [stepHeight] is non-null, the child's
/// height will be snapped to a multiple of the [stepHeight].
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicWidth],
///    allowing the [RenderIntrinsicWidth]'s child to be smaller than that of
///    its parent.
///  * [Row], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the width constraints that are passed to the
///    [RenderIntrinsicWidth], allowing the [RenderIntrinsicWidth]'s child's
///    width to be smaller than that of its parent. ¿ S Å„ ¿ SÁ¿ S˚Äæ/// Creates a render object that sizes itself to its child's intrinsic width.
///
/// If [stepWidth] is non-null it must be > 0.0. Similarly If [stepHeight] is
/// non-null it must be > 0.0.¿ T¿ T  ¿ T¿ T"  ¿ T1¿ T=  ¿ TJ¿ TP¿ Tu¿ Tc¿ T[¿ TQ¿ T^¿ Tp¿ Tf¿ Tr¿ T¿ TÖ¿ T¨¿ Tô¿ Të¿ TÜ¿ Tî¿ Tß¿ Tú¿ T©¿ T¡¿ T∂¿ T√¿ T·¿ T’¿ T„¿ Tˆ¿ T˚¿ U¿ T¸¿ Uß¿ UØ  ¿ W¿ W  ¿ UÄù¿ Uår/// If non-null, force the child's width to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ UΩÄÆ¿ U¡  ¿ UÀ¿ U‘   ¿ VoÄ†¿ Vıs/// If non-null, force the child's height to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ W)Ä±¿ W-  ¿ W8¿ WA   	¿ WﬁÄ±¿ WÏ  ¿ W˜¿ Wˇ  ¿ X¿ X   ¿ Xìm¿ X¶  ¿ Xø¿ X«  ¿ Xì¿ Xî¿ YÄŸ¿ Y  ¿ Y0¿ Y8  ¿ Y¿ Y¿ Y·ÅR¿ YÙ  ¿ Z¿ Z  ¿ Y·¿ Y‚¿ [7ÅR¿ [J  ¿ [d¿ [l  ¿ [7¿ [8¿ \çÇ¬¿ \í  ¿ \†"¿ \∏  ¿ \ƒ#¿ \›   ¿ _SÄ∏¿ _d  ¿ _u¿ _Ö  ¿ _S¿ _T¿ `Äò¿ `    ¿ `¿ `¿ `´Ä˜¿ `º  ¿ `–&¿ `Ì  ¿ `´¿ `¨ ¿ a¶åÉ¿ gìÖÁ/// Sizes its child to the child's intrinsic height.
///
/// This class is useful, for example, when unlimited height is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable height.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic height, then the child will get less height
/// than it otherwise would. Likewise, if the minimum height constraint is
/// larger than the child's maximum intrinsic height, the child will be given
/// more height than it otherwise would.
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicHeight],
///    allowing the [RenderIntrinsicHeight]'s child to be smaller than that of
///    its parent.
///  * [Column], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the height constraints that are passed to the
///    [RenderIntrinsicHeight], allowing the [RenderIntrinsicHeight]'s child's
///    height to be smaller than that of its parent. ¿ gƒÄì ¿ h¿ h*N/// Creates a render object that sizes itself to its child's intrinsic height.¿ h1¿ h=  ¿ hJ¿ hO¿ hU¿ hP  ¿ h[Å¿ hn  ¿ há¿ hè  ¿ h[¿ h\¿ i}Å¿ iê  ¿ i©¿ i±  ¿ i}¿ i~¿ jüm¿ j≤  ¿ jÃ¿ j‘  ¿ jü¿ j†¿ kÅø¿ k  ¿ k#"¿ k;  ¿ kG#¿ k`   ¿ l”Ä∏¿ l‰  ¿ lı¿ m  ¿ l”¿ l‘¿ mèÄò¿ m†   ¿ mè¿ mê ¿ n+ç¿¿ pÅ‰/// Makes its child partially transparent.
///
/// This class paints its child into an intermediate buffer and then blends the
/// child back into the scene partially transparent.
///
/// For values of opacity other than 0.0 and 1.0, this class is relatively
/// expensive because it requires painting the child into an intermediate
/// buffer. For the value 0.0, the child is not painted at all. For the
/// value 1.0, the child is painted immediately without an intermediate buffer. ¿ p?Åπ ¿ pø¿ pÃy/// Creates a partially transparent render object.
///
/// The [opacity] argument must be between 0.0 and 1.0, inclusive.¿ p”¿ p€  ¿ pÌ#¿ pÛ  ¿ q¿ q"   ¿ p‰¿ q¿ q/¿ q5¿ qV¿ qE¿ q>¿ q6¿ qA¿ qP¿ qH¿ qS¿ qi¿ q`¿ qk¿ qì¿ q{¿ qï¿ qª¿ q¥¿ qΩ¿ qø¿ q¿¿ q≈¿ q∆¿ qŸ¿ q·¿ q⁄¿ qÎ¿ q¿ qˆ¿ qÒ¿ rê
¿ rî  ¿ t1¿ t8  ¿ wO¿ wT  ¿ q¸K¿ r   ¿ q¸¿ q˝¿ rKA¿ r`   ¿ rK¿ rL¿ rüÅè¿ tÅ[/// The fraction to scale the child's alpha value.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// The opacity must not be null.
///
/// Values 1.0 and 0.0 are painted with a fast path. Other values
/// require painting the child into an intermediate buffer, which is
/// expensive.   ¿ tDÇ ¿ tH  ¿ tP¿ tX   ¿ vhÄ‰¿ wÄû/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.   ¿ woÄ±¿ ws  ¿ wä
¿ wê   ¿ x$l¿ x5  ¿ xA¿ xL  ¿ x$¿ x%¿ xîÄ«¿ x¨  ¿ x√)¿ xÂ  ¿ xî¿ xï¿ y_Ä¢¿ yp  ¿ yv¿ yá  ¿ yè¿ yó  ¿ y_¿ y`¿ zÄÆ¿ z  ¿ z0¿ zE  ¿ z¿ z¿ z∑Å2¿ z»  ¿ z‹&¿ z˘  ¿ z∑¿ z∏ ¿ ä—ÇÑ¿ ãüÄ«/// Makes its child partially transparent, driven from an [Animation].
///
/// This is a variant of [RenderOpacity] that uses an [Animation<double>] rather
/// than a [double] to control the opacity. ¿ ã˚ÅX ¿ åe¿ åzc/// Creates a partially transparent render object.
///
/// The [opacity] argument must not be null.¿ åÅ"¿ åù  ¿ å©#¿ åØ  ¿ å“¿ åﬁ  ¿ å«¿ åÎ¿ å¿ åˆ¿ åÒ    ¿ éâX¿ éﬂÄ¿/// Applies a mask generated by a [Shader] to its child.
///
/// For example, [RenderShaderMask] can be used to gradually fade out the edge
/// of a child by using a [ui.Gradient.linear] mask. ¿ èÅÑ ¿ è∞¿ è¿Äû/// Creates a render object that applies a mask generated by a [Shader] to its child.
///
/// The [shaderCallback] and [blendMode] arguments must not be null.¿ è«¿ è”  ¿ è›&¿ èˆ  ¿ ê	(¿ ê  ¿ ê¿ ê(¿ ê)¿ êJ¿ ê:¿ êL¿ ên¿ êc¿ êp¿ êÇ¿ êá¿ êç¿ êà¿ í€¿ íÍ  ¿ îß¿ î±  ¿ êìJ¿ ê¥   ¿ êì¿ êî¿ ê·Å˜¿ í∂Å-/// Called to creates the [Shader] that generates the mask.
///
/// The shader callback is called with the current size of the child so that
/// it can customize the shader to the size and location of the child.
///
/// The rectangle will always be at the origin when called by
/// [RenderShaderMask].   ¿ í˝Äô¿ ì  ¿ ì¿ ì    ¿ ìöÅ
¿ îåÄ€/// The [BlendMode] to use when applying the shader to the child.
///
/// The default, [BlendMode.modulate], is useful for applying an alpha blend
/// to the child. Other blend modes can be used to create other effects.   ¿ îøÄÖ¿ î√  ¿ îÕ¿ îÿ   ¿ ïH=¿ ï]   ¿ ïH¿ ïI¿ ïâÅÂ¿ ïö  ¿ ï†¿ ï±  ¿ ïπ¿ ï¡  ¿ ïâ¿ ïä ¿ órá™¿ ò.Äµ/// Applies a filter to the existing painted content and then paints [child].
///
/// This effect is relatively expensive, especially if the filter is non-local,
/// such as a blur. ¿ ò^Å ¿ ô ¿ ô4Ä∑/// Creates a backdrop filter.
///
/// The [filter] argument must not be null.
/// The [blendMode] argument, if provided, must not be null
/// and will default to [BlendMode.srcOver].¿ ô7¿ ôC  ¿ ôI¿ ôb  ¿ ôi'¿ ôt  ¿ ô¿ ôà¿ ôâ¿ ô¢¿ ôö¿ ô§¿ ôΩ¿ ô≤¿ ôø¿ ô–¿ ô’¿ ô€¿ ô÷¿ õ&¿ õ5  ¿ úî¿ úû  ¿ ô·R¿ ö   ¿ ô·¿ ô‚¿ ö7ÄÏ¿ õÄº/// The image filter to apply to the existing painted content before painting
/// the child.
///
/// For example, consider using [ui.ImageFilter.blur] to create a backdrop
/// blur effect.   ¿ õ@ÄÅ¿ õD  ¿ õK¿ õ[   ¿ õ≈ÄÃ¿ úyÄù/// The blend mode to use to apply the filtered background content onto the background
/// surface.
///
/// {@macro flutter.widgets.BackdropFilter.blendMode}   ¿ ú¨ÄÖ¿ ú∞  ¿ ú∫¿ ú≈   ¿ ù5=¿ ùJ   ¿ ù5¿ ù6¿ ùvÅ§¿ ùá  ¿ ùç¿ ùû  ¿ ù¶¿ ùÆ  ¿ ùv¿ ùw ¿ üéó¿ £ÄÑR/// An interface for providing custom clips.
///
/// This class is used by a number of clip widgets (e.g., [ClipRect] and
/// [ClipPath]).
///
/// The [getClip] method is called whenever the custom clip needs to be updated.
///
/// The [shouldReclip] method is called when a new instance of the class
/// is provided, to check if the new instance actually represents different
/// information.
///
/// The most efficient way to update the clip provided by this class is to
/// supply a `reclip` argument to the constructor of the [CustomClipper]. The
/// custom object will listen to this animation and update the clip whenever the
/// animation ticks, avoiding both the build and layout phases of the pipeline.
///
/// See also:
///
///  * [ClipRect], which can be customized with a [CustomClipper<Rect>].
///  * [ClipRRect], which can be customized with a [CustomClipper<RRect>].
///  * [ClipOval], which can be customized with a [CustomClipper<Rect>].
///  * [ClipPath], which can be customized with a [CustomClipper<Path>].
///  * [ShapeBorderClipper], for specifying a clip path using a [ShapeBorder].¿ £é¿ £é¿ £®Ä∂ ¿ §%¿ §2p/// Creates a custom clipper.
///
/// The clipper will update its clip whenever [reclip] notifies its listeners.¿ §5¿ §B  ¿ §U¿ §M¿ §W¿ §b¿ §t   ¿ §ÄÅU¿ •êÄÙ/// Register a closure to be notified when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ •ú¿ •™  ¿ •¿ •Ä¿ •ŸÅô¿ ß'Å0/// Remove a previously registered closure from the list of closures that the
/// object notifies when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ß6¿ ßD  ¿ ß¿ ß¿ ßvÄÑ¿ ßÁj/// Returns a description of the clip given that the render object being
/// clipped is of the given size. ¿ ßÔ	¿ ßı   ¿ ß˛Ç¿ ©⁄Å∆/// Returns an approximation of the clip returned by [getClip], as
/// an axis-aligned Rect. This is used by the semantics layer to
/// determine whether widgets should be excluded.
///
/// By default, this returns a rectangle that is the same size as
/// the RenderObject. If getClip returns a shape that is roughly the
/// same size as the RenderObject (e.g. it's a rounded rectangle
/// with very small arcs in the corners), then this may be adequate. ¿ ©Ò	¿ ©˜   ¿ ™ÉO¿ ≠1Ç˜/// Called whenever a new instance of the custom clipper delegate class is
/// provided to the clip object, or any time that a new clip object is created
/// with a new instance of the custom clipper delegate class (which amounts to
/// the same thing, because the latter is implemented in terms of the former).
///
/// If the new instance represents different information than the old
/// instance, then the method should return true, otherwise it should return
/// false.
///
/// If the method returns false, then the [getClip] call might be optimized
/// away.
///
/// It's possible that the [getClip] method will get called even if
/// [shouldReclip] returns false or if the [shouldReclip] method is never
/// called at all (e.g. if the box changes size). ¿ ≠>%¿ ≠Z   ¿ ≠iJ¿ ≠|   ¿ ≠i¿ ≠j ¿ ≠∑Öù¿ ÆF/// A [CustomClipper] that clips to the outer path of a [ShapeBorder]. ¿ Æ7Åÿ ¿ Øƒ¿ Ø÷Åv/// Creates a [ShapeBorder] clipper.
///
/// The [shape] argument must not be null.
///
/// The [textDirection] argument must be provided non-null if [shape]
/// has a text direction dependency (for example if it is expressed in terms
/// of "start" and "end" instead of "left" and "right"). It may be null if
/// the border will not need the text direction to paint itself.¿ Ø›¿ ØÏ  ¿ Øˆ¿ Ø¸   ¿ ∞V¿ ∞d</// The shape border whose outer path this clipper clips to. ¿ ∞nÄ‚¿ ±CÄ∑/// The text direction to use for getting the outer path for [shape].
///
/// [ShapeBorder]s can depend on the text direction (e.g having a "dent"
/// towards the start of the shape).  ¿ ±UÄØ¿ ±õ2/// Returns the outer path of [shape] as the clip. ¿ ±£	¿ ±©  ¿ ±ä¿ ±ã¿ ≤ÅJ¿ ≤  ¿ ≤&¿ ≤;  ¿ ≤¿ ≤	 ¿ ≥Vå
¿ ≥e ¿ ≥w¿ ≥w¿ ≥ïÄ≈ ¿ ≥ï¿ ≥¶ ¿ ≥≠¿ ≥π  ¿ ≥√¿ ≥÷  ¿ ≥‚"¿ ≥Ë  ¿ ≥ˆ¿ ≥˙¿ ≥˚¿ ¥¿ ¥¿ ¥¿ ¥6¿ ¥(¿ ¥8¿ ¥M¿ ¥R¿ ¥X¿ ¥S¿ ¥…¿ ¥€  ¿ ∏h¿ ∏k  ¿ π!¿ π&  ¿ ªy¿ ªÄ  ¿ ªè¿ ªú  ¿ ¥^h¿ ¥≤;/// If non-null, determines which clip to use on the child.   ¿ ¥ÁÇ!¿ ¥Î  ¿ ¥Û¿ µ   ¿ ∏R¿ ∏X    ¿ ∏u'¿ ∏~    ¿ ∏ü¿ ∏£  ¿ ∏∞
¿ ∏∂   ¿ ∑v¿ ∑  ¿ ∑$¿ ∑3  ¿ ∑¿ ∑¿ ∑Üa¿ ∑ó   ¿ ∑Ü¿ ∑á¿ ∑Îc¿ ∑    ¿ π8Äß¿ πI   ¿ π8¿ π9¿ π„O¿ πË    ¿ ∫6Å?¿ ∫H  ¿ ∫e¿ ∫s  ¿ ∫6¿ ∫7¿ ª™ÉI¿ ªª  ¿ ª ¿ ª€  ¿ ª„¿ ªÎ  ¿ ª™¿ ª´¿ æ˜g¿ ø   ¿ æ˜¿ æ¯ ¿ øbáí¿ ¿HÄﬂ/// Clips its child using a rectangle.
///
/// By default, [RenderClipRect] prevents its child from painting outside its
/// bounds, but the size and location of the clip rect can be customized using a
/// custom [clipper]. ¿ ¿{ÅQ ¿ ¡z¿ ¡àÄ/// Creates a rectangular clip.
///
/// If [clipper] is null, the clip will match the layout size and position of
/// the child.
///
/// The [clipBehavior] must not be null. If [clipBehavior] is
/// [Clip.none], no clipping will be applied.¿ ¡è¿ ¡ñ  ¿ ¡†¿ ¡ß  ¿ ¡≥¿ ¡∫    ¿ ¡–8¿ ¡Â   ¿ ¡–¿ ¡—¿ ¬Å%¿ ¬  ¿ ¬%¿ ¬7  ¿ ¬@¿ ¬Q  ¿ ¬¿ ¬¿ √5Åˆ¿ √F  ¿ √L¿ √]  ¿ √e¿ √m  ¿ √5¿ √6¿ ≈/Å√¿ ≈@  ¿ ≈O¿ ≈`  ¿ ≈h¿ ≈p  ¿ ≈/¿ ≈0 ¿ ∆ˆãÚ¿ «„ÄÊ/// Clips its child using a rounded rectangle.
///
/// By default, [RenderClipRRect] uses its own bounds as the base rectangle for
/// the clip, but the size and location of the clip can be customized using a
/// custom [clipper]. ¿ »ÇW ¿ …y¿ …àÅN/// Creates a rounded-rectangular clip.
///
/// The [borderRadius] defaults to [BorderRadius.zero], i.e. a rectangle with
/// right-angled corners.
///
/// If [clipper] is non-null, then [borderRadius] is ignored.
///
/// The [clipBehavior] argument must not be null. If [clipBehavior] is
/// [Clip.none], no clipping will be applied.¿ …è¿ …ñ  ¿ …†5¿ …∂  ¿ …€¿ …‚  ¿ …Ó¿ …ı  ¿  ¿    	¿ …ƒ¿ …–¿ …—¿  9¿  +¿  ;¿  _¿  P¿  a¿ ÀÖ"¿ Àö  ¿ ÃΩ¿ ÃÃ  ¿  sÅ¿ ÀdÄÀ/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This value is ignored if [clipper] is non-null.   ¿ À´Äô¿ ÀØ  ¿ Àº¿ À“   ¿ ÃHr¿ Ãö</// The text direction with which to resolve [borderRadius].   ¿ ÃﬁÄñ¿ Ã‚  ¿ Ã¿ Õ    ¿ Õxg¿ Õé   ¿ Õx¿ Õy¿ Õ„Å%¿ ÕÙ  ¿ Õ¸¿ Œ  ¿ Œ¿ Œ(  ¿ Õ„¿ Õ‰¿ œÇ¿ œ  ¿ œ#¿ œ4  ¿ œ<¿ œD  ¿ œ¿ œ¿ —$Å¬¿ —5  ¿ —D¿ —U  ¿ —]¿ —e  ¿ —$¿ —% ¿ “Íä¿ ”¯Å/// Clips its child using an oval.
///
/// By default, inscribes an axis-aligned oval into its layout dimensions and
/// prevents its child from painting outside that oval, but the size and
/// location of the clip oval can be customized using a custom [clipper]. ¿ ‘+Åg ¿ ’@¿ ’NÅ/// Creates an oval-shaped clip.
///
/// If [clipper] is null, the oval will be inscribed into the layout size and
/// position of the child.
///
/// The [clipBehavior] argument must not be null. If [clipBehavior] is
/// [Clip.none], no clipping will be applied.¿ ’U¿ ’\  ¿ ’f¿ ’m  ¿ ’y¿ ’Ä   ¿ ’ñ¿ ’ú  ¿ ’´¿ ’µ  ¿ ÷u8¿ ÷ä   ¿ ÷u¿ ÷v¿ ’≈Ä¨¿ ’   ¿ ’◊	¿ ’›   ¿ ÷±ÇC¿ ÷¬  ¿ ÷ ¿ ÷‹  ¿ ÷Â¿ ÷ˆ  ¿ ÷±¿ ÷≤¿ ÿ¯Ç¿ Ÿ	  ¿ Ÿ¿ Ÿ   ¿ Ÿ(¿ Ÿ0  ¿ ÿ¯¿ ÿ˘¿ €ÅÁ¿ €#  ¿ €2¿ €C  ¿ €K¿ €S  ¿ €¿ € ¿ ‹˝â¿ ﬁ–ÅÃ/// Clips its child using a path.
///
/// Takes a delegate whose primary method returns a path that should
/// be used to prevent the child from painting outside the path.
///
/// Clipping to a path is expensive. Certain shapes have more
/// optimized render objects:
///
///  * To clip to a rectangle, consider [RenderClipRect].
///  * To clip to an oval or circle, consider [RenderClipOval].
///  * To clip to a rounded rectangle, consider [RenderClipRRect]. ¿ ﬂÅÛ ¿ ‡§¿ ‡≤Åé/// Creates a path clip.
///
/// If [clipper] is null, the clip will be a rectangle that matches the layout
/// size and location of the child. However, rather than use this default,
/// consider using a [RenderClipRect], which can achieve the same effect more
/// efficiently.
///
/// The [clipBehavior] argument must not be null. If [clipBehavior] is
/// [Clip.none], no clipping will be applied.¿ ‡π¿ ‡¿  ¿ ‡ ¿ ‡—  ¿ ‡›¿ ‡‰    ¿ ‡˙I¿ ·   ¿ ‡˙¿ ‡˚¿ ·GÅ%¿ ·X  ¿ ·`¿ ·r  ¿ ·{¿ ·å  ¿ ·G¿ ·H¿ ‚pÇ¿ ‚Å  ¿ ‚á¿ ‚ò  ¿ ‚†¿ ‚®  ¿ ‚p¿ ‚q¿ ‰àÅ{¿ ‰ô  ¿ ‰®¿ ‰π  ¿ ‰¡¿ ‰…  ¿ ‰à¿ ‰â ¿ Êà“¿ ÊÂÄŒ/// A physical model layer casts a shadow based on its [elevation].
///
/// The concrete implementations [RenderPhysicalModel] and [RenderPhysicalShape]
/// determine the actual shape of the physical model.¿ Ê˛¿ Ê˛¿ Á"Å≈ ¿ Á©¿ Á¡ÄÇ/// The [shape], [elevation], [color], and [shadowColor] must not be null.
/// Additionally, the [elevation] must be non-negative.¿ Á»¿ Áÿ  ¿ Á‚¿ ÁÛ  ¿ Ë¿ Ë  ¿ Ë¿ Ë+  ¿ Ë;¿ ËB  ¿ Ë_¿ Ëf  ¿ ËP¿ ËT¿ ËU¿ Ëu¿ Ë{¿ Ëå¿ ËÜ¿ Ë|¿ Ëâ¿ Ë°¿ Ëñ¿ Ë£¿ Ëº¿ Ëµ¿ Ëæ¿ ËŸ¿ ËÃ¿ Ë€¿ Í	¿ Í  ¿ Î†¿ Î¶  ¿ Ïy¿ Ï  ¿ ËÎÅ¿ ÈÓÄÎ/// The z-coordinate relative to the parent at which to place this material.
///
/// The value is non-negative.
///
/// If [debugDisableShadows] is set, this value is ignored and no shadow is
/// drawn (an outline is rendered instead).   ¿ ÍÅ=¿ Í"  ¿ Í,¿ Í4   ¿ Î_>¿ ÎÅ/// The shadow color.   ¿ Î∂ÄÜ¿ Î∫  ¿ Î∆¿ ÎÕ   ¿ Ï@6¿ Ïf/// The background color.   ¿ Ïât¿ Ïç  ¿ Ïì¿ Ïö   ¿ ÌÄ®¿ Ì  ¿ Ì1¿ ÌI  ¿ Ì¿ Ì¿ Ì≠Å*¿ Ìæ  ¿ Ì“'¿ ÌÔ  ¿ Ì≠¿ ÌÆ ¿ Ô&ëS¿ Ô»Äõ/// Creates a physical model layer that clips its child to a rounded
/// rectangle.
///
/// A physical model layer casts a shadow based on its [elevation]. ¿ ÇF ¿ Ò¿ ÒÄÌ/// Creates a rounded-rectangular clip.
///
/// The [color] is required.
///
/// The [shape], [elevation], [color], [clipBehavior], and [shadowColor]
/// arguments must not be null. Additionally, the [elevation] must be
/// non-negative.¿ Ò¿ Ò%  ¿ Ò/#¿ Ò9  ¿ ÒX¿ Ò_  ¿ Òp¿ Ò  ¿ Òê¿ Òó  ¿ Ò´¿ Òª  ¿ Ò≈+¿ ÒÃ  ¿ Ò@¿ ÒH¿ ÒI¿ Ò¢¿ ÒŸ¿ Òﬂ¿ Ò‰¿ ÒÔ¿ ÒÂ¿ Ò˘¿ Òˇ¿ Ú¿ Ú
¿ Ú ¿ Ú¿ Ú!¿ Ú¿ Ú#¿ Ú?¿ Ú1¿ ÚA¿ Ú˝¿ Û  ¿ ÙÎ¿ Ù˘  ¿ ÚRÄ®¿ ÚÍÄÇ/// The shape of the layer.
///
/// Defaults to [BoxShape.rectangle]. The [borderRadius] affects the corners
/// of the rectangle.   ¿ Ûw¿ Û  ¿ Û¿ Û$   ¿ ÛãÅ]¿ Ù Å/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This property is ignored if the [shape] is not [BoxShape.rectangle].
///
/// The value null is treated like [BorderRadius.zero].   ¿ ı
Äë¿ ı  ¿ ı¿ ı*   ¿ ıüÅH¿ ıµ   ¿ ıü¿ ı†¿ ˆÎÅ%¿ ˆ¸  ¿ ˜¿ ˜  ¿ ˜¿ ˜0  ¿ ˆÎ¿ ˆÏ¿ ¯áF¿ ¯%  ¿ ¯+¿ ¯<  ¿ ¯D¿ ¯L  ¿ ¯¿ ¯¿ ˇ^Å¿ ˇo  ¿ ˇÉ'¿ ˇ†  ¿ ˇ^¿ ˇ_ ¿ {é¿ÄÄ˛/// Creates a physical shape layer that clips its child to a [Path].
///
/// A physical shape layer casts a shadow based on its [elevation].
///
/// See also:
///
///  * [RenderPhysicalModel], which is optimized for rounded rectangles and
///    circles. ¿øÅÈ ¿≥¿∆ÄÁ/// Creates an arbitrary shape clip.
///
/// The [color] and [clipper] parameters are required.
///
/// The [clipper], [elevation], [color] and [shadowColor] must not be null.
/// Additionally, the [elevation] must be non-negative.¿Õ¿‘  ¿ﬁ*¿  ¿¿  ¿&¿-  ¿A¿Q  ¿[+¿b  ¿8¿o¿u¿z¿Ö¿{¿è¿ï¿¶¿†¿ñ¿£ ¿¨I¿¡   ¿¨¿≠¿˘Å%¿
  ¿¿$  ¿-¿>  ¿˘¿˙¿"àì¿3  ¿9¿J  ¿R¿Z  ¿"¿#¿πÄ“¿   ¿ﬁ'¿˚  ¿π¿∫ ¿[ëÀ¿§B/// Paints a [Decoration] either before or after its child paints. ¿“Ç| ¿¿Å#/// Creates a decorated box.
///
/// The [decoration], [position], and [configuration] arguments must not be
/// null. By default the decoration paints behind the child.
///
/// The [ImageConfiguration] will be passed to the decoration (with the size
/// filled in) to let it resolve images.¿¿2  ¿A;¿U  ¿Ç;¿ñ  ¿√¿œ  ¿_¿q¿r¿•¿∑¿∏¿Ë¿‹¿Í¿¿˝¿	¿)¿¿+¿A¿F¿L¿G¿R¿^  ¿ﬂ¿Í  ¿/¿B  ¿P!¿c  ¿kq¿¬A/// What decoration to paint.
///
/// Commonly a [BoxDecoration].   ¿˘Ä∑¿˝  ¿¿   ¿¥x¿H/// Whether to paint the box decoration behind or in front of the child.   ¿OÄã¿S  ¿\¿p   ¿ﬁÅo¿-Å+/// The settings to pass to the decoration when painting, so that it can
/// resolve images appropriately. See [ImageProvider.resolve] and
/// [BoxPainter.paint].
///
/// The [ImageConfiguration.textDirection] field is also used by
/// direction-sensitive [Decoration]s for painting and hit-testing.   ¿uÄö¿y  ¿á¿õ   ¿Åÿ¿$   ¿¿¿ÔÄè¿   ¿¿  ¿Ô¿¿ÇÜ}¿ì  ¿ô¿™  ¿≤¿∫  ¿Ç¿É¿ Å!¿   ¿ (&¿ E  ¿ ¿  ¿!(£ﬁ¿!f7/// Applies a transformation before painting its child. ¿!ëÇ ¿"¿"i/// Creates a render object that transforms its child.
///
/// The [transform] argument must not be null.¿"¿")  ¿"7¿"@  ¿"K¿"_  ¿"m¿"}  ¿"è¿"ï  ¿"≤¿"¬  ¿"‘¿"‡  ¿"®¿"Ì¿"Ú¿"¯¿"Û¿$Ó¿$ˆ  ¿(v¿(â  ¿*H¿*W  ¿+~Åv¿,„ÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// [applyPaintTransform], and therefore [localToGlobal] and [globalToLocal],
/// always honor the transformation, regardless of the value of this property. ¿,˘¿-  ¿/¿/ˇ  ¿#≠Å>¿$ŸÅ/// The origin of the coordinate system (relative to the upper left corner of
/// this render object) in which to apply the matrix.
///
/// Setting an origin is equivalent to conjugating the transform matrix by a
/// translation. This property is provided just for convenience.   ¿%Äö¿%  ¿%¿%   ¿%üÇ‘¿([Çé/// The alignment of the origin, relative to the size of the box.
///
/// This is equivalent to setting an origin based on the size of the box.
/// If it is specified at the same time as an offset, both are applied.
///
/// An [AlignmentDirectional.centerStart] value is the same as an [Alignment]
/// whose [Alignment.x] value is `-1.0` if [textDirection] is
/// [TextDirection.ltr], and `1.0` if [textDirection] is [TextDirection.rtl].
/// Similarly [AlignmentDirectional.centerEnd] is the same as an [Alignment]
/// whose [Alignment.x] value is `1.0` if [textDirection] is
/// [TextDirection.ltr], and `-1.0` if [textDirection] is [TextDirection.rtl].   ¿(óÄÆ¿(õ  ¿(•¿(π   ¿)IÄ¸¿*%Ä¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿*iÄ∂¿*m  ¿*{¿*ã   ¿+#W¿+8   ¿+#¿+$¿-Ç¿.HÅ'/// The matrix to transform the child by during painting. The provided value
/// is copied on assignment.
///
/// There is no getter for [transform], because [Matrix4] is mutable, and
/// mutations outside of the control of the render object could not reliably
/// be reflected in the rendering. ¿.R¿.[   ¿/"ÄÀ¿/ÕÄë/// The filter quality with which to apply the transform as a bitmap operation.
///
/// {@macro flutter.widgets.Transform.optional.FilterQuality}   ¿0Å8¿0  ¿0#¿03   ¿5—ÇÓ¿5ﬁ    ¿1MÄû¿1É./// Sets the transform to the identity matrix.   ¿1ÔÄΩ¿27@/// Concatenates a rotation about the x axis into the transform. ¿2?¿2G   ¿2∞ÄΩ¿2¯@/// Concatenates a rotation about the y axis into the transform. ¿3 ¿3   ¿3qÄΩ¿3π@/// Concatenates a rotation about the z axis into the transform. ¿3¡¿3…   ¿42Äﬁ¿4y?/// Concatenates a translation by (x, y, z) into the transform. ¿4É¿4ã  ¿4è¿4ó  ¿4ü¿4ß  ¿4ö¿4™¿5Äπ¿5H,/// Concatenates a scale into the transform. ¿5N¿5V  ¿5Z	¿5c  ¿5e	¿5n   ¿8√ÅY¿8‘  ¿8‹¿8Ó  ¿8˜¿9  ¿8√¿8ƒ¿: ÅÆ¿:1  ¿:A¿:S  ¿:\¿:m  ¿: ¿:!¿;“Üó¿;„  ¿;È¿;˙  ¿<¿<
  ¿;“¿;”¿Bm|¿B~  ¿Bí¿Bù  ¿B£¿B¨  ¿Bm¿Bn¿BÌÇ¿B˛  ¿C&¿C/  ¿BÌ¿BÓ ¿E¢a¿ESD/// Scales and positions its child within itself according to [fit]. ¿E~Å  ¿EÙ¿Fo/// Scales and positions its child within itself.
///
/// The [fit] and [alignment] arguments must not be null.¿F
¿F  ¿F+.¿F>  ¿F_¿Fo  ¿FÅ¿Fç  ¿Fó¿Fù  ¿F¿F¿F¿FI¿FR¿FS¿F´¿FØ¿F∞¿F¬¿FΩ¿Fƒ¿F€¿F–¿F›¿F˛¿FÔ¿G ¿G$¿G¿G&¿G;¿G@¿GF¿GA¿GL¿GW  ¿I·¿IË  ¿Lº¿LŒ  ¿Nà¿Nó  ¿X_¿Xe  ¿X{¿XÑ  ¿Y.¿Y3 ¿YC¿YG¿YH¿I_¿I“E/// How to inscribe the child into the space allocated during layout.   ¿IÅ¿IÙ  ¿I¯¿J    ¿KÅ´¿L°Ål/// How to align the child within its parent's bounds.
///
/// An alignment of (0.0, 0.0) aligns the child to the top-left corner of its
/// parent's bounds. An alignment of (1.0, 0.5) aligns the child to the middle
/// of the right edge of its parent's bounds.
///
/// If this is set to an [AlignmentDirectional] object, then
/// [textDirection] must not be null.   ¿L‹Ä©¿L‡  ¿LÍ¿L˝   ¿MâÄ¸¿NeÄ¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿N©Ä≤¿N≠  ¿Nª¿NÀ   ¿XìÄò¿Yj/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none], and must not be null.   ¿YPÄ°¿YT  ¿Ya
¿Yg   ¿GnÄä¿Gs    ¿G¸U¿H    ¿HUÅ&¿HZ  ¿Hl
¿Ht   ¿O°Ö≤¿O≤  ¿O√¿O”  ¿O°¿O¢¿UWÉ¿Uh   ¿UW¿UX¿YıR¿Y˙    ¿ZKÑD¿ZP    ¿^ìÅ‰¿^£  ¿^º¿^Õ  ¿^’¿^›   ¿`{ÇW¿`å  ¿`í¿`£  ¿`´¿`≥  ¿`{¿`|¿b÷Å∑¿bÁ  ¿b˜¿c	  ¿c¿c#  ¿b÷¿b◊¿dëÄÜ¿d¢  ¿dÆ¿dπ  ¿dë¿dí¿eÄ‹¿e,  ¿e@¿eK  ¿eQ¿eZ  ¿e¿e¿e˚Ål¿f  ¿f &¿f=  ¿e˚¿e¸ ¿gkåé¿i*Å∏/// Applies a translation transformation before painting its child.
///
/// The translation is expressed as an [Offset] scaled to the child's size. For
/// example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.
///
/// Hit tests will only be detected inside the bounds of the
/// [RenderFractionalTranslation], even if the contents are offset such that
/// they overflow. ¿iaÅ, ¿iﬁ¿i˘v/// Creates a render object that translates its child's painting.
///
/// The [translation] argument must not be null.¿j ¿j  ¿j!¿j'  ¿jD¿jP  ¿j:¿jj¿j]¿jl¿jÄ¿jÖ¿jã¿jÜ¿kí¿kô  ¿mæÅv¿o#ÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// applyPaintTransform(), and therefore localToGlobal() and globalToLocal(),
/// always honor the transformation, regardless of the value of this property. ¿jëÄ˛¿ksÄŒ/// The translation to apply to the child, scaled to the child's size.
///
/// For example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.   ¿k©Ä®¿k≠  ¿kπ¿k¡   ¿lUÅe¿lf  ¿ln¿lÄ  ¿lâ¿lö  ¿lU¿lV¿o9Å ¿oJ  ¿oZ¿ol  ¿ou¿oÜ  ¿o9¿o:¿qÅ¿q  ¿q¿q/  ¿q7¿q?  ¿q¿q¿rÄµ¿r.  ¿rB¿rM  ¿rS¿r\  ¿r¿r¿r÷Å!¿rÁ  ¿r˚&¿s  ¿r÷¿r◊ ¿z.èl¿|bÇ-/// Calls callbacks in response to common pointer events.
///
/// It responds to events that can construct gestures, such as when the
/// pointer is pointer is pressed and moved, and then released or canceled.
///
/// It does not respond to events that are exclusive to mouse, such as when the
/// mouse enters and exits a region without pressing any buttons. For
/// these events, use [RenderMouseRegion].
///
/// If it has a child, defers to the child for sizing behavior.
///
/// If it does not have a child, grows to fit the parent-provided constraints. ¿|¶ÅÕ ¿}?¿}TÄí/// Creates a render object that forwards pointer events to callbacks.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿}[¿}a  ¿}s¿}y  ¿}ã¿}ë  ¿}°¿}ß  ¿}∫¿}¿  ¿}‘¿}⁄  ¿}Ù¿}˙  ¿~¿~  ¿~3¿~9  ¿~M¿~T  ¿~a¿~h   	¿~wÄ“¿<Ä§/// Called when a pointer comes into contact with the screen (for touch
/// pointers), or has its button pressed (for mouse pointers) at this widget's
/// location. ¿Nw¿∏M/// Called when a pointer that triggered an [onPointerDown] changes position. ¿ Äê¿ÄOh/// Called when a pointer that triggered an [onPointerDown] is no longer in
/// contact with the screen. ¿Ä_w¿Ä»K/// Called when a pointer that has not an [onPointerDown] changes position. ¿Ä€Ä´¿Åw{/// Called when the input from a pointer that triggered an [onPointerDown] is
/// no longer directed towards this receiver. ¿Åã|¿ÅÚB/// Called when a pan/zoom begins such as from a trackpad gesture. ¿Çb¿ÇX&/// Called when a pan/zoom is updated. ¿ÇsZ¿Ç∫$/// Called when a pan/zoom finishes. ¿Ç“g¿É*9/// Called when a pointer signal occurs over this object.  ¿É>h¿ÉO  ¿Ée¿Éu  ¿É>¿É?¿É™Éû¿Éª  ¿É«¿É’  ¿É€¿ÉÈ  ¿É™¿É´¿áLÇL¿á]  ¿áq&¿áé  ¿áL¿áM ¿âúîZ¿åÄÇ›/// Calls callbacks in response to pointer events that are exclusive to mice.
///
/// It responds to events that are related to hovering, i.e. when the mouse
/// enters, exits (with or without pressing buttons), or moves over a region
/// without pressing buttons.
///
/// It does not respond to common events that construct gestures, such as when
/// the pointer is pressed, moved, then released or canceled. For these events,
/// use [RenderPointerListener].
///
/// If it has a child, it defers to the child for sizing behavior.
///
/// If it does not have a child, it grows to fit the parent-provided constraints.
///
/// See also:
///
///  * [MouseRegion], a widget that listens to hover events using
///    [RenderMouseRegion]. ¿å‚Ç∑ ¿çÌ¿ç˛Å /// Creates a render object that forwards pointer events to callbacks.
///
/// All parameters are optional. By default this method creates an opaque
/// mouse region with no callbacks and cursor being [MouseCursor.defer]. The
/// [cursor] must not be null.¿é¿é  ¿é¿é  ¿é)¿é/  ¿é:&¿éG  ¿éf ¿él  ¿éå¿éí  ¿é§¿é´  ¿éµ9¿é«  ¿éO¿éZ¿é[¿éÇ¿éö¿éÿ¿éÁ¿éË¿éˇ¿é˜¿è¿è&¿è¿è(¿èM¿èE¿èO¿è^¿èc¿èó¿èl¿èd¿è~¿èn¿èÅ¿èê¿èë¿ìÌ¿ìÚ  ¿ñw.¿ñû ¿ñw¿ñx¿ñ™ÄŒ¿óqÄ£/// Triggered when a pointer has moved onto or within the region without
/// buttons pressed.
///
/// This callback is not triggered by the movement of the object. ¿ó},¿ó£ ¿ó}¿ó~¿óﬂ¿óÎ  ¿ô5¿ô:  ¿ëÇ‹¿ìÿÇ§/// Whether this object should prevent [RenderMouseRegion]s visually behind it
/// from detecting the pointer, thus affecting how their [onHover], [onEnter],
/// and [onExit] behave.
///
/// If [opaque] is true, this object will absorb the mouse pointer and
/// prevent this object's siblings (or any other objects that are not
/// ancestors or descendants of this object) from detecting the mouse
/// pointer even when the pointer is within their areas.
///
/// If [opaque] is false, this object will not affect how [RenderMouseRegion]s
/// behind it behave, which will detect the mouse pointer as long as the
/// pointer is within their areas.
///
/// This defaults to true.   ¿ì˝Ä∫¿î  ¿î
¿î   ¿îªÄò¿ï7`/// How to behave during hit testing.
///
/// This defaults to [HitTestBehavior.opaque] if null.   ¿ïVÅ¿ïZ  ¿ïj¿ï|   ¿óÆ.¿ó    ¿óÆ¿óØ¿óˆÄı¿ó˙  ¿ò¿ò   ¿òÔC¿ô   ¿òÔ¿ò¿èùÄñ¿èÆ  ¿è∂¿è»  ¿è—¿è‚  ¿èù¿èû¿ê7Ä”¿êH  ¿êT¿êb  ¿êh¿êv  ¿ê7¿ê8¿ôTm¿ôe  ¿ôl¿ô{  ¿ôT¿ôU¿ô≈Å$¿ô÷   ¿ô≈¿ô∆¿öÌh¿ö˛  ¿õ¿õ$  ¿öÌ¿öÓ¿õYÇõ¿õj  ¿õ~&¿õõ  ¿õY¿õZ ¿ù¯™T¿§SÜT/// Creates a separate display list for its child.
///
/// This render object creates a separate display list for its child, which
/// can improve performance if the subtree repaints at different times than
/// the surrounding parts of the tree. Specifically, when the child does not
/// repaint but its parent does, we can re-use the display list we recorded
/// previously. Similarly, when the child repaints but the surround tree does
/// not, we can re-record its display list without re-recording the display list
/// for the surround tree.
///
/// In some cases, it is necessary to place _two_ (or more) repaint boundaries
/// to get a useful effect. Consider, for example, an e-mail application that
/// shows an unread count and a list of e-mails. Whenever a new e-mail comes in,
/// the list would update, but so would the unread count. If only one of these
/// two parts of the application was behind a repaint boundary, the entire
/// application would repaint each time. On the other hand, if both were behind
/// a repaint boundary, a new e-mail would only change those two parts of the
/// application and the rest of the application would not repaint.
///
/// To tell if a particular RenderRepaintBoundary is useful, run your
/// application in debug mode, interacting with it in typical ways, and then
/// call [debugDumpRenderTree]. Each RenderRepaintBoundary will include the
/// ratio of cases where the repaint boundary was useful vs the cases where it
/// was not. These counts can also be inspected programmatically using
/// [debugAsymmetricPaintCount] and [debugSymmetricPaintCount] respectively. ¿§Ñl ¿§µ¿§ ./// Creates a repaint boundary around [child].¿§Õ¿§Ÿ  ¿§„¿§Ë¿§Ó¿§È¿∫∂!¿∫∫ ¿∫÷¿ΩÏ"¿Ω ¿æ¿§Ù/¿•	   ¿§Ù¿§ı¿∏(Çã¿∫}Ç6/// The number of times that this render object repainted at the same time as
/// its parent. Repaint boundaries are only useful when the parent and child
/// paint at different times. When both paint at the same time, the repaint
/// boundary is redundant, and may be actually making performance worse.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugAsymmetricPaintCount]
/// for the corresponding count of times where only the parent or only the
/// child painted.   ¿∫‹É¿Ω±Ç≤/// The number of times that either this render object repainted without the
/// parent being painted, or the parent repainted without this object being
/// painted. When a repaint boundary is used at a seam in the render tree
/// where the parent tends to repaint at entirely different times than the
/// child, it can improve performance by reducing the number of paint
/// operations that have to be recorded each frame.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugSymmetricPaintCount] for
/// the corresponding count of times where both the parent and the child
/// painted together.   ¿•'â>¿≠ñáÁ/// Capture an image of the current state of this render object and its
/// children.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImage], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to a PNG:
///
/// ```dart
/// class PngHome extends StatefulWidget {
///   const PngHome({super.key});
///
///   @override
///   State<PngHome> createState() => _PngHomeState();
/// }
///
/// class _PngHomeState extends State<PngHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   Future<void> _capturePng() async {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = await boundary.toImage();
///     final ByteData? byteData = await image.toByteData(format: ui.ImageByteFormat.png);
///     final Uint8List pngBytes = byteData!.buffer.asUint8List();
///     print(pngBytes);
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _capturePng,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImage] for a similar API at the layer level.
///  * [dart:ui.Scene.toImage] for more information about the image returned. ¿≠†¿≠®  ¿≠¥¿Æiâª¿∑Màb/// Capture an image of the current state of this render object and its
/// children synchronously.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImageSync], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// This API functions like [toImage], except that rasterization begins eagerly
/// on the raster thread and the image is returned before this is completed.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to an image handle:
///
/// ```dart
/// class ImageCaptureHome extends StatefulWidget {
///   const ImageCaptureHome({super.key});
///
///   @override
///   State<ImageCaptureHome> createState() => _ImageCaptureHomeState();
/// }
///
/// class _ImageCaptureHomeState extends State<ImageCaptureHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   void _captureImage() {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = boundary.toImageSync();
///     print('Image dimensions: ${image.width}x${image.height}');
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _captureImage,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImageSync] for a similar API at the layer level.
///  * [dart:ui.Scene.toImageSync] for more information about the image returned. ¿∑[¿∑c  ¿∑o¿æÅI¿æÀÄ™/// Resets the [debugSymmetricPaintCount] and [debugAsymmetricPaintCount]
/// counts to zero.
///
/// Only valid when asserts are enabled. Does nothing in release builds.   ¿ø`Å6¿øq  ¿øï¿øõ  ¿ø±¿ø∑  ¿ø`¿øa¿ø´¿ø∆¿¿öá∞¿¿´  ¿¿ø&¿¿‹  ¿¿ö¿¿õ ¿»Nç ¿ uÇ /// A render object that is invisible during hit testing.
///
/// When [ignoring] is true, this render object (and its subtree) is invisible
/// to hit testing. It still consumes space during layout and paints its child
/// as usual. It just cannot be the target of located events, because its render
/// object returns false from [hitTest].
///
/// {@macro flutter.widgets.IgnorePointer.Semantics}
///
/// See also:
///
///  * [RenderAbsorbPointer], which takes the pointer events but prevents any
///    nodes in the subtree from seeing them. ¿ §Å€ ¿À¿À-o/// Creates a render object that is invisible to hit testing.
///
/// The [ignoring] argument must not be null.¿À4¿À@  ¿ÀJ¿ÀP  ¿ÀdÄπ¿Ã  ¿ÀZ¿Àd¿Àe¿Ào¿Ã ¿Àw¿À«¿Ã0¿Ã&¿Ã2¿ÃV¿ÃC¿ÃX¿Ãr¿Ãw¿Ã}¿Ãx¿Õ∆¿ÕÀ  ¿–Q¿–W  ¿ÃÉÅ@¿Õ≠Å/// Whether this render object is ignored during hit testing.
///
/// Regardless of whether this render object is ignored during hit testing, it
/// will still consume space during layout and be visible during painting.
///
/// {@macro flutter.widgets.IgnorePointer.Semantics}   ¿ÕÿÄ¥¿Õ‹  ¿ÕÂ
¿ÕÎ   ¿ŒêÅæ¿–&ÄÁ/// Whether the semantics of this render object is ignored when compiling the semantics tree.
///
/// {@macro flutter.widgets.IgnorePointer.Semantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿œÇ¿œÉ¿œç¿–¿œì¿œ·¿–mÄ£¿–q  ¿–É¿–ä   ¿—Äò¿—%  ¿—-¿—?  ¿—H¿—Y  ¿—¿—¿—∞Ä∂¿—¡  ¿—€¿—  ¿—∞¿—±¿“jÅB¿“{  ¿“ö¿“≤  ¿“j¿“k¿”∞Åú¿”¡  ¿”’&¿”Ú  ¿”∞¿”± ¿’Pç¿÷Ä∂/// Lays the child out as if it was in the tree, but without painting anything,
/// without making the child available for hit testing, and without taking any
/// room in the parent. ¿÷7Äõ ¿÷`¿÷n&/// Creates an offstage render object.¿÷u¿÷{  ¿÷è¿÷õ  ¿÷Ö¿÷≤¿÷®¿÷¥¿÷≈¿÷ ¿÷–¿÷À¿ÿG¿ÿL  ¿÷÷Ån¿ÿ.Å@/// Whether the child is hidden from the rest of the tree.
///
/// If true, the child is laid out as if it was in the tree, but without
/// painting anything, without making the child available for hit testing, and
/// without taking any room in the parent.
///
/// If false, the child is included in the tree as normal.   ¿ÿYÄî¿ÿ]  ¿ÿf
¿ÿl   ¿‹:/¿‹O   ¿‹:¿‹;¿ÿÒÄü¿Ÿ  ¿Ÿ¿Ÿ%  ¿ÿÒ¿ÿÚ¿ŸîÄü¿Ÿß  ¿Ÿ¿¿Ÿ»  ¿Ÿî¿Ÿï¿⁄7Äü¿⁄J  ¿⁄d¿⁄l  ¿⁄7¿⁄8¿⁄⁄Äü¿⁄Ì  ¿€¿€  ¿⁄⁄¿⁄€¿€}Äπ¿€ë  ¿€±¿€ø  ¿€}¿€~¿‹mÄ∞¿‹~  ¿‹è¿‹ü  ¿‹m¿‹n¿›!W¿›2   ¿›!¿›"¿›|Äå¿›ç   ¿›|¿›}¿ﬁÄò¿ﬁ  ¿ﬁ%¿ﬁ7  ¿ﬁ@¿ﬁQ  ¿ﬁ¿ﬁ¿ﬁ®k¿ﬁπ  ¿ﬁ≈¿ﬁ–  ¿ﬁ®¿ﬁ©¿ﬂÄé¿ﬂ(  ¿ﬂ.¿ﬂ?  ¿ﬂG¿ﬂO  ¿ﬂ¿ﬂ¿ﬂ©Ä£¿ﬂ∫  ¿ﬂ‘¿ﬂÈ  ¿ﬂ©¿ﬂ™¿‡PÄ¬¿‡a  ¿‡u&¿‡í  ¿‡P¿‡Q¿·Å<¿·8   ¿·¿· ¿‚Vç≤¿‰ﬁÇÅ/// A render object that absorbs pointers during hit testing.
///
/// When [absorbing] is true, this render object prevents its subtree from
/// receiving pointer events by terminating hit testing at itself. It still
/// consumes space during layout and paints its child as usual. It just prevents
/// its children from being the target of located events, because its render
/// object returns true from [hitTest].
///
/// {@macro flutter.widgets.AbsorbPointer.Semantics}
///
/// See also:
///
///  * [RenderIgnorePointer], which has the opposite effect: removing the
///    subtree from considering entirely for the purposes of hit testing. ¿ÂÅÁ ¿Âå¿Âüx/// Creates a render object that absorbs pointers during hit testing.
///
/// The [absorbing] argument must not be null.¿Â¶¿Â≤  ¿Âº¿Â¬  ¿Â◊Äπ¿ÊÄ  ¿ÂÕ¿Â◊¿Âÿ¿Â‚¿Ês¿ÂÍ¿Ê:¿Ê§¿Êô¿Ê¶¿ÊÀ¿Ê∏¿ÊÕ¿ÊÁ¿ÊÏ¿ÊÚ¿ÊÌ¿ËO¿ËT  ¿Í‰¿ÍÍ  ¿Ê¯ÅT¿Ë4Å$/// Whether this render object absorbs pointers during hit testing.
///
/// Regardless of whether this render object absorbs pointers during hit
/// testing, it will still consume space during layout and be visible during
/// painting.
///
/// {@macro flutter.widgets.AbsorbPointer.Semantics}   ¿ËbÄ∑¿Ëf  ¿Ëp
¿Ëv   ¿ÈÅƒ¿ÍπÄÎ/// Whether the semantics of this render object is ignored when compiling the
/// semantics tree.
///
/// {@macro flutter.widgets.AbsorbPointer.Semantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿Í¿Í¿Í ¿Í´¿Í&¿Ít¿Î Ä£¿Î  ¿Î¿Î   ¿ÎßÄ¡¿Î∏  ¿Î¿¿Î“  ¿Î€¿ÎÏ  ¿Îß¿Î®¿ÏlÄ∂¿Ï}  ¿Ïó¿Ï¨  ¿Ïl¿Ïm¿Ì&ÅB¿Ì7  ¿ÌV¿Ìn  ¿Ì&¿Ì'¿ÓlÅö¿Ó}  ¿Óë&¿ÓÆ  ¿Ól¿Óm ¿
És¿ÒUÅD/// Holds opaque meta data in the render tree.
///
/// Useful for decorating the render tree with information that will be consumed
/// later. For example, you could store information in the render tree that will
/// be used when the user interacts with the render tree but has no visual
/// impact prior to the interaction. ¿ÒíÄÿ ¿Ú¿Ú*ÄÉ/// Creates a render object that hold opaque meta data.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿Ú1¿Ú7  ¿ÚD¿ÚK  ¿ÚX¿Ú_   ¿ÚnC¿Ú©0/// Opaque meta data ignored by the render tree.  ¿Ú∂Ä≈¿Ú«  ¿Ú€&¿Ú¯  ¿Ú∂¿Ú∑ ¿Ûö€¿ÛËb/// Listens for the specified gestures from the semantics server (e.g.
/// an accessibility tool). ¿Ù4ÇT ¿Ù…¿ÙÊÄé/// Creates a render object that listens for specific semantic gestures.
///
/// The [scrollFactor] and [behavior] arguments must not be null.¿ÙÌ¿ÙÙ  ¿Ù˛¿ı  ¿ı%¿ı8  ¿ıH1¿ıd  ¿ı/¿ıõ  ¿ı¥¿ı∫  ¿ı—¿ıÿ  ¿ı»¿ıÔ¿ıË¿ıÒ¿ˆ¿ıˇ¿ˆ¿ˆ:¿ˆ"¿ˆ<¿ˆq¿ˆ[¿ˆs¿˘û#¿˘¥  ¿˙Ë¿˙¸  ¿¸Ñ&¿¸û  ¿˛N2¿˛i  ¿ <0¿ W  ¿°Å2¿«Å/// The fraction of the dimension of this render box to use when
/// scrolling. For example, if this is 0.8 and the box is 200 pixels
/// wide, then when a left-scroll action is received from the
/// accessibility system, it will translate into a 160 pixel
/// leftwards drag. 
¿ˆåÉ¿˘}Çº/// If non-null, the set of actions to allow. Other actions will be omitted,
/// even if their callback is provided.
///
/// For example, if [onTap] is non-null but [validActions] does not contain
/// [SemanticsAction.tap], then the semantic description of this node will
/// not claim to support taps.
///
/// This is normally used to filter the actions made available by
/// [onHorizontalDragUpdate] and [onVerticalDragUpdate]. Normally, these make
/// both the right and left, or up and down, actions available. For example,
/// if [onHorizontalDragUpdate] is set but [validActions] only contains
/// [SemanticsAction.scrollLeft], then the [SemanticsAction.scrollRight]
/// action will be omitted.   ¿˘≈Äæ¿˘…  ¿˘÷¿˘Ì   ¿˙á^¿˙’3/// Called when the user taps on the render object.   ¿˚ÄÍ¿˚
  ¿˚¿˚%   ¿˚ÙÄç¿¸eP/// Called when the user presses on the render object for a long period of time.   ¿¸ÆÅ¿¸≤  ¿¸æ¿¸Ÿ   ¿˝∫Äë¿˛=/// Called when the user scrolls to the left or to the right.   ¿˛ÑÅ5¿˛à  ¿˛ü ¿˛ª   ¿ˇΩ|¿ ,/// Called when the user scrolls up or down.   ¿ pÅ-¿ t  ¿ â ¿ •   ¿ÿÉ¶¿È  ¿¿   ¿ÿ¿Ÿ¿Çt¿á  ¿ñ¿ß   ¿˙ÅW¿ˇ    ¿UÅW¿Z    ¿	∞ÅR¿	µ    ¿ÅS¿    ¿]Å˚¿n  ¿Ç&¿ü  ¿]¿^ ¿\π6¿ü</// Add annotations to the [SemanticsNode] for this subtree. ¿’É0 ¿¿¿⁄Ä‡/// Creates a render object that attaches a semantic annotation.
///
/// The [container] argument must not be null.
///
/// If the [SemanticsProperties.attributedLabel] is not null, the [textDirection] must also not be null.¿·¿Ì  ¿˜'¿  ¿$¿*  ¿@¿F  ¿e¿k  ¿à¿é  ¿´¿ª  ¿5¿Z¿}¿†¿‹¿—¿ﬁ¿¿Ò¿¿5¿#¿7¿c¿Q¿e¿é¿¿ê¿≥¿ß¿µ¿…¿Œ¿‘¿œ¿å¿†  ¿¿#  ¿±¿∂  ¿˜¿¸  ¿‘¿Ÿ  ¿#?"¿#Q  ¿#e"¿#w  ¿#ã+¿#ù  ¿#∫+¿#Ã  ¿#È!¿#˚  ¿%√¿%“  ¿	ÄÄ¿oK/// All of the [SemanticsProperties] for this [RenderSemanticsAnnotations].   ¿ØÄ∆¿≥  ¿æ¿”   ¿yÅ¢¿År/// If 'container' is true, this [RenderObject] will introduce a new
/// node in the semantics tree. Otherwise, the semantics will be
/// merged with the semantics of any ancestors.
///
/// Whether descendants of this [RenderObject] can add their semantic information
/// to the [SemanticsNode] introduced by this configuration is controlled by
/// [explicitChildNodes].   ¿1Äâ¿5  ¿?
¿E   ¿æÇ¿ÑÇ¢/// Whether descendants of this [RenderObject] are allowed to add semantic
/// information to the [SemanticsNode] annotated by this widget.
///
/// When set to false descendants are allowed to annotate [SemanticsNode]s of
/// their parent with the semantic information they want to contribute to the
/// semantic tree.
/// When set to true the only way for descendants to contribute semantic
/// information to the semantic tree is to introduce new explicit
/// [SemanticsNode]s to the tree.
///
/// This setting is often used in combination with
/// [SemanticsConfiguration.isSemanticBoundary] to create semantic boundaries
/// that are either writable or not for children.   ¿ÕÄ•¿—  ¿‰
¿Í   ¿vÅ~¿ŒÅB/// Whether descendants of this [RenderObject] should have their semantic
/// information ignored.
///
/// When this flag is set to true, all child semantics nodes are ignored.
/// This can be used as a convenience for cases where a child is wrapped in
/// an [ExcludeSemantics] widget and then another [Semantics] widget.   ¿Äü¿  ¿&
¿,   ¿¥Å¿´Ä„/// Whether to block user interactions for the semantics subtree.
///
/// Setting this true prevents user from activating pointer related
/// [SemanticsAction]s, such as [SemanticsAction.tap] or
/// [SemanticsAction.longPress].   ¿ÓÄü¿Ú  ¿
¿	   ¿$Å±¿%†Åm/// If non-null, sets the [SemanticsNode.textDirection] semantic to the given
/// value.
///
/// This must not be null if [SemanticsProperties.attributedLabel],
/// [SemanticsProperties.attributedHint],
/// [SemanticsProperties.attributedValue],
/// [SemanticsProperties.attributedIncreasedValue], or
/// [SemanticsProperties.attributedDecreasedValue] are not null.   ¿%‰Äü¿%Ë  ¿%ˆ¿&   ¿ëÅ|¿ñ  ¿Æ¿√   ¿Ä∑¿#  ¿=¿R   ¿ÃÄ∑¿ﬁ  ¿¯¿    ¿ áÄ˙¿ ô  ¿ √¿ ÿ   ¿!ÖÄˇ¿!ó  ¿!¡¿!÷   ¿"àÄ≥¿"ö  ¿"≥¿"»   ¿&áÄ´¿&ò  ¿&≤¿&«  ¿&á¿&à¿'6ôu¿'G  ¿'f¿'~  ¿'6¿'7¿@Ø7¿@¥    ¿@ÍC¿@Ô    ¿A1?¿A6    ¿AtE¿Ay    ¿AΩG¿A¬    ¿BA¿B    ¿BME¿BR    ¿BñA¿Bõ    ¿B€A¿B‡    ¿C 9¿C%    ¿C]7¿Cb    ¿Cò;¿Cù    ¿C◊Äå¿C‹  ¿D¿D   ¿DgÄé¿Dl  ¿Dí¿Dò   ¿D˘ÄÇ¿D˛  ¿E¿E$   ¿EÄÑ¿EÑ  ¿E•¿E´   ¿Fi¿F  ¿F!¿F0   ¿FtN¿Fy  ¿Fâ¿Fë   ¿F∆c¿FÀ    ¿G-c¿G2     ¿GîÑÌ¿HåÄÒ/// Causes the semantics of all earlier render objects below the same semantic
/// boundary to be dropped.
///
/// This is useful in a stack where an opaque mask should prevent interactions
/// with the render objects painted below the mask. ¿HºÄ‘ ¿I¿I,W/// Create a render object that blocks semantics for nodes below it in paint
/// order.¿I3¿I?  ¿II¿IO  ¿IY¿Ip¿If¿Ir¿IÉ¿Ià¿Ié¿Iâ¿JS¿JX  ¿IîÄº¿J:Äò/// Whether this render object is blocking semantics of previously painted
/// [RenderObject]s below a common semantics boundary from the semantic tree.   ¿JeÄá¿Ji  ¿Jr
¿Jx   ¿JÄ…¿K  ¿K ¿K8  ¿J¿JÒ¿KΩÄ¬¿KŒ  ¿K‚&¿Kˇ  ¿KΩ¿Kæ ¿LÉÉ¿MÁÅ]/// Causes the semantics of all descendants to be merged into this
/// node such that the entire subtree becomes a single leaf in the
/// semantics tree.
///
/// Useful for combining the semantics of multiple render objects that
/// form part of a single conceptual widget, e.g. a checkbox, a label,
/// and the gesture detector that goes with them. ¿NÄà ¿Ne¿NyK/// Creates a render object that merges the semantics from its descendants.¿N|¿Nà  ¿Ní¿Nó¿Nù¿Nò  ¿N£Ä„¿N¥  ¿N”¿NÎ  ¿N£¿N§ ¿OäÑ°¿P∑Å&/// Excludes this subtree from the semantic tree.
///
/// When [excluding] is true, this render object (and its subtree) is excluded
/// from the semantic tree.
///
/// Useful e.g. for hiding text that is redundant with other text next
/// to it (e.g. text included only for the visual effect). ¿PÈÄ∆ ¿Q2¿QHF/// Creates a render object that ignores the semantics of its subtree.¿QO¿Q[  ¿Qe¿Qk  ¿Qv¿Qé¿QÉ¿Qê¿Q¢¿Qß¿Q≠¿Q®¿R¿R!  ¿Q≥f¿RB/// Whether this render object is excluded from the semantic tree.   ¿R/Ää¿R3  ¿R=
¿RC   ¿RΩÄ§¿RŒ  ¿RË¿R˝  ¿RΩ¿Ræ¿SeÄƒ¿Sv  ¿Sä&¿Sß  ¿Se¿Sf ¿T-ÑÃ¿UºÅà/// A render objects that annotates semantics with an index.
///
/// Certain widgets will automatically provide a child index for building
/// semantics. For example, the [ScrollView] uses the index of the first
/// visible child semantics node to determine the
/// [SemanticsConfiguration.scrollIndex].
///
/// See also:
///
///  * [CustomScrollView], for an explanation of scroll semantics. ¿UÓÄ¬ ¿V>¿VTM/// Creates a render object that annotates the child semantics with an index.¿V[¿Vg  ¿Vq¿V  ¿Vì¿Vå¿Vï¿V£¿V®¿VÆ¿V©¿W
¿W  ¿V¥K¿VÔ0/// The index used to annotated child semantics.   ¿W|¿W  ¿W	¿W   ¿WêÄ®¿W°  ¿W¿¿Wÿ  ¿Wê¿Wë¿X<Äª¿XM  ¿Xa&¿X~  ¿X<¿X= ¿X˚à$¿Y Ä»/// Provides an anchor for a [RenderFollowerLayer].
///
/// See also:
///
///  * [CompositedTransformTarget], the corresponding widget.
///  * [LeaderLayer], the layer that this render object creates. ¿Y˜Ä“ ¿ZY¿Zj[/// Creates a render object that uses a [LeaderLayer].
///
/// The [link] must not be null.¿Zq¿ZÖ  ¿Zé¿Zö  ¿Z≠¿Zß¿ZØ¿Zº¿Z¡¿Z«¿Z¬¿[È¿[Û  ¿^¿^
  ¿ZÕÅ¿[ÿÄÚ/// The link object that connects this [RenderLeaderLayer] with one or more
/// [RenderFollowerLayer]s.
///
/// This property must not be null. The object must not be associated with
/// another [RenderLeaderLayer] that is also being painted.   ¿[¸ÄÓ¿\   ¿\¿\   ¿\Ó4¿]   ¿\Ó¿\Ô¿^"}¿^3   ¿^"¿^#¿^£Å∑¿^¥  ¿^∫¿^À  ¿^”¿^€  ¿^£¿^§¿`^Äø¿`o  ¿`É&¿`†  ¿`^¿`_ ¿a!úŸ¿cEÇ/// Transform the child so that its origin is [offset] from the origin of the
/// [RenderLeaderLayer] with the same [LayerLink].
///
/// The [RenderLeaderLayer] in question must be earlier in the paint order.
///
/// Hit testing on descendants of this render object will only work if the
/// target position is within the box that this render object's parent considers
/// to be hittable.
///
/// See also:
///
///  * [CompositedTransformFollower], the corresponding widget.
///  * [FollowerLayer], the layer that this render object creates. ¿ctÇ& ¿cÔ¿dt/// Creates a render object that uses a [FollowerLayer].
///
/// The [link] and [offset] arguments must not be null.¿d	¿d  ¿d&¿d,  ¿dH¿dP  ¿di*¿dt  ¿dô,¿d§  ¿dÀ¿d◊  ¿d>¿dX¿d^¿d_¿dÇ¿dã¿då¿d¥¿dΩ¿dæ¿dÍ¿d‰¿dÏ¿e¿d˘¿e¿e.¿e&¿e0¿eM¿e?¿eO¿et¿ed¿ev¿eç¿eí¿eò¿eì¿f9¿fC  ¿hÌ¿hÚ  ¿j7¿j>  ¿mª¿m≈  ¿oñ¿o†  ¿eûÄò¿f(w/// The link object that connects this [RenderFollowerLayer] with a
/// [RenderLeaderLayer] earlier in the paint order.   ¿fLv¿fP  ¿fU¿f`   ¿f∆Ç$¿hƒÅ‚/// Whether to show the render object's contents when there is no
/// corresponding [RenderLeaderLayer] with the same [link].
///
/// When the render object is linked, the child is positioned such that it has
/// the same global position as the linked [RenderLeaderLayer].
///
/// When the render object is not linked, then: if [showWhenUnlinked] is true,
/// the child is visible and not repositioned; if it is false, then child is
/// hidden, and its hit testing is also disabled.   ¿iÄï¿i  ¿i
¿i"   ¿i†Äî¿j"r/// The offset to apply to the origin of the linked [RenderLeaderLayer] to
/// obtain this render object's origin.   ¿jIy¿jM  ¿jT¿j\   ¿j∆ÇÚ¿möÇ©/// The anchor point on the linked [RenderLeaderLayer] that [followerAnchor]
/// will line up with.
///
/// {@template flutter.rendering.RenderFollowerLayer.leaderAnchor}
/// For example, when [leaderAnchor] and [followerAnchor] are both
/// [Alignment.topLeft], this [RenderFollowerLayer] will be top left aligned
/// with the linked [RenderLeaderLayer]. When [leaderAnchor] is
/// [Alignment.bottomLeft] and [followerAnchor] is [Alignment.topLeft], this
/// [RenderFollowerLayer] will be left aligned with the linked
/// [RenderLeaderLayer], and its top edge will line up with the
/// [RenderLeaderLayer]'s bottom edge.
/// {@endtemplate}
///
/// Defaults to [Alignment.topLeft].   ¿m÷Äé¿m⁄  ¿mÁ¿mÚ   ¿nhÅ+¿oqÄÓ/// The anchor point on this [RenderFollowerLayer] that will line up with
/// [followerAnchor] on the linked [RenderLeaderLayer].
///
/// {@macro flutter.rendering.RenderFollowerLayer.leaderAnchor}
///
/// Defaults to [Alignment.topLeft].   ¿o≥Äî¿o∑  ¿o∆¿o—   ¿pî4¿p©   ¿pî¿pï¿pÃ|¿q!3/// The layer we created when we were last painted.  ¿q¿q¿pKE¿p\   ¿pK¿pL¿qLÅü¿rîÅ3/// Return the transform that was used in the last composition phase, if any.
///
/// If the [FollowerLayer] has not yet been created, was never composited, or
/// was unable to determine the transform (see
/// [FollowerLayer.getLastTransform]), this returns the identity matrix (see
/// [Matrix4.identity].   ¿rÔÅÏ¿s   ¿s¿s  ¿s#¿s4  ¿rÔ¿r¿tﬂÅV¿t  ¿u ¿u  ¿u¿u,  ¿tﬂ¿t‡¿v9Öâ¿vJ  ¿vP¿va  ¿vi¿vq  ¿v9¿v:¿{∆}¿{◊  ¿{Î¿{ˆ  ¿{¸¿|  ¿{∆¿{«¿|GÅ±¿|X  ¿|l&¿|â  ¿|G¿|H ¿}¸Ük¿~ÄÌ/// Render object which inserts an [AnnotatedRegionLayer] into the layer tree.
///
/// See also:
///
///  * [Layer.find], for an example of how this value is retrieved.
///  * [AnnotatedRegionLayer], the layer this render object creates.¿¿¿4Å≤ ¿ÄG¿Ä\Å/// Creates a new [RenderAnnotatedRegion] to insert [value] into the
/// layer tree.
///
/// If [sized] is true, the layer is provided with the size of this render
/// object to clip the results of [Layer.find].
///
/// Neither [value] nor [sized] can be null.¿Äc¿Äo  ¿Äy¿Äà  ¿Äí¿Äû  
¿Ä≤¿Ä´¿Ä¥¿Ä…¿Ä¬¿ÄÀ¿ÄŸ¿Äﬁ¿Ä‰¿Äﬂ¿Å<¿Å>  ¿Ç7¿Ç<  ¿Çæ4¿Ç’ ¿Çæ¿Çø¿ÇÓ¿ÄÍO¿Å)6/// A value which can be retrieved using [Layer.find].   ¿ÅH{¿ÅL  ¿ÅS
¿ÅV   ¿Å«m¿Ç$Q/// Whether the render object will pass its [size] to the [AnnotatedRegionLayer].   ¿ÇFt¿ÇJ  ¿ÇP
¿ÇV   ¿Ç˜Ån¿É  ¿É¿É  ¿É'¿É/  ¿Ç˜¿Ç¯  ê™Ç0ê”#/// How to behave during hit tests.  êÁÄñëqÄÖ/// Targets that defer to their children receive events within their bounds
/// only if one of their children is hit by the hit test. ëÇÄΩí9Ä∞/// Opaque targets can be hit by hit tests, causing them to both receive
/// events within their bounds and prevent targets visually behind them from
/// also receiving events. íDÄìíÃÄÉ/// Translucent targets both receive events within their bounds and permit
/// targets visually behind them to also receive events.    ¿èÄ ¿π$/// Where to paint a box decoration.  ¿–>¿1/// Paint the box decoration behind the children. ¿C¿L6/// Paint the box decoration in front of the children.        	¿ çWÄø¿ çËÄà/// Signature for a function that creates a [Shader] for a given [Rect].
///
/// Used by [RenderShaderMask] and the [ShaderMask] widget.  ¿ é	¿ é   ¿s˚Äª¿tuq/// Signature for listening to [PointerDownEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿tû¿t∞   ¿t∏Äª¿u2q/// Signature for listening to [PointerMoveEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿u[¿um   ¿uuÄµ¿uÌo/// Signature for listening to [PointerUpEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿v¿v$   ¿v,Ä¡¿v®s/// Signature for listening to [PointerCancelEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿v”¿vÁ   ¿vÔÄ”¿wqy/// Signature for listening to [PointerPanZoomStartEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿w¢¿wº   ¿wƒÄ÷¿xGz/// Signature for listening to [PointerPanZoomUpdateEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿xy¿xî   ¿xúÄÕ¿yw/// Signature for listening to [PointerPanZoomEndEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿yK¿yc   ¿ykÄ¡¿yÁs/// Signature for listening to [PointerSignalEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿z¿z&   áâñà≠ÅÇ/// Implementation of [RenderProxyBox].
///
/// Use this mixin in situations where the proxying behavior
/// of [RenderProxyBox] is desired but inheriting from [RenderProxyBox] is
/// impractical (e.g. because you want to inherit from a different class).
///
/// If a class already inherits from [RenderProxyBox] and also uses this mixin,
/// you can safely delete the use of the mixin.à¡à¡   âÅâ  â'â5  ââäwä  ä7ä?  äääÜwäô  ä≤ä∫  äÜäáãwã  ã.ã6  ããã|wãè  ã©ã±  ã|ã}ã˜Äƒå  å+å9  ã˜ã¯åøÄñå–  å·åÒ  åøå¿çYÄ¶çj   çYçZéÄÍéïÄà/// Calculate the size the [RenderProxyBox] would have under the given
/// [BoxConstraints] for the case where it does not have a child. é´éª   éÒÄùè  èè$  è-è>  éÒéÚèíOè£  è∑è≈  èÀè‘  èíèìèÂÄ¡èˆ  è¸ê  êê  èÂèÊàïàñ¿ {Ìé‚¿ }.Å:/// Implementation of [RenderAnimatedOpacity] and [RenderSliverAnimatedOpacity].
///
/// This mixin allows the logic of animating opacity to be used with different
/// layout models, e.g. the way that [RenderAnimatedOpacity] uses it for [RenderBox]
/// and [RenderSliverAnimatedOpacity] uses it for [RenderSliver].¿ }I¿ }I ¿ }Ü¿ }ã  ¿ }Ò!¿ }˜  ¿ ÄÊ¿ Ä˘  ¿ É∂¿ Éº  ¿ }ñX¿ }´   ¿ }ñ¿ }ó¿ ~˜ÅÏ¿ ÄŒÅ¨/// The animation that drives this render object's opacity.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// To change the opacity of a child in a static manner, not animated,
/// consider [RenderOpacity] instead.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ ÅÅ(¿ Å	  ¿ Å¿ Å$   ¿ Ç1ÅÇ¿ ÉÄÅ5/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ É◊Ä±¿ É€  ¿ ÉÚ
¿ É¯   ¿ ~Ä‹¿ ~/  ¿ ~F)¿ ~h  ¿ ~¿ ~¿ ÑåÄª¿ Ñù  ¿ Ñ§¿ Ñ≥  ¿ Ñå¿ Ñç¿ ÖK_¿ Ö\   ¿ ÖK¿ ÖL¿ ÖÆÇ¿ Ö≥    ¿ á¬v¿ á”  ¿ áﬂ¿ áÌ  ¿ á¬¿ á√¿ à<Äë¿ àM  ¿ àS¿ àd  ¿ àl¿ àt  ¿ à<¿ à=¿ à—ÄÆ¿ à‚  ¿ à¸¿ â  ¿ à—¿ à“¿ âÉÅJ¿ âî  ¿ â®&¿ â≈  ¿ âÉ¿ âÑ ¿ Ó€H¿ ÓÁ ¿ Ó˚¿ Ô ¿ Ô¿ Ô
¿ Ô¿ Ô¿ Ô¿ Ô¿ Ô¿ Ô"¿ Ô  ì∏ <ÄÜÄ§Ä•ÄÊÄÁÅÅ:ÅbÅãÅ≥Å¥Å«Å‹Å˘ÇÇÇ<ÇRÇfÇvÇäÇúÇùÇ›Ç·É*ÉxÉ«ÑÑÑ^ÑØÑ˛ÖÖÖ$Ö(ÖxÖâÖ˝ÜÜ%ÜmÜ∫ÜÃÜÛááááá:á>á{á∆àààeàïàßâââ=âââ¨â◊â˛äää	ääHääÉäÑäêä√ä˙ä˛äˇãã>ãuãyãzãÜãπããÙãıååDå|å∏åºåΩå…åˇçRçVçWçcç|ç¡çç¸é ééJééé…éÍéÓéÔé˚èKèãèèèêèúè‚è„èÔê&êOêhêvê|ê£êßê©ê™êŒêÂë3ëoëëÄëÀíí7íAíBíèí íŸí€í‹ìì5ìì≤ì∏ì¸î"îTîjîîÄî—ïïïLïRïôïµï∂ï¬ñ
ñ&ñIñ°ñ„óó ó&ó<ó@óAóMóòóôó•óÍòòròvòxòyò™òÆò˝ôFôñô£ôßô˜ö@ö]öëö«öÕõõ5õKõ~õπõúúúFúåúµúÈùù<ùJùPùtùãùèùêùúùœû)ûWû]ûûû∫ûÓü)ü/üAüEüFüRüÖüﬂ†††T†p†§†ﬂ†Â†˜†˚†¸°°;°ó°∆°Ã¢¢+¢`¢ù¢£¢∂¢∫¢ª¢«¢˙£V£Ö£ã£Õ£Í§§\§b§u§y§z§Ü§ü§ÿ§Ò•I•c•p•ø•≈•…• •÷¶¶%¶t¶Å¶–¶÷¶⁄¶€¶Áß'ßRßbß{ß≠ß≈ßÚ®)®1®D®N®R®S®_®§®œ©8©<©>©?©x©ª©ø™™W™¢™Ò´
´´Y´ü´Ø´ﬂ¨0¨e¨k¨≤¨∆¨€¨Ò≠≠@≠`≠Å≠û≠Ω≠“≠”Æ(ÆLÆ`ÆÆôÆ∑Æ≈ÆÀÆ‚Æ˘Æ˝Æ˛ØUØ{ØêØ∞Ø ØÈØ˜Ø˝∞∞,∞0∞1∞r∞ç∞≥±±F±∂±Ω±¡±¬≤$≤=≤è≤æ≤ƒ≥≥≥	≥≥K≥d≥Ñ≥π≥¿≥ƒ≥≈≥—≥Í¥¥#¥U¥\¥`¥a¥m¥≤¥›µ6µëµïµóµòµ”µ◊∂#∂r∂¿∂ƒ∑∑\∑î∑ò∑Â∏3∏Ç∏…∏Õππjπª∫	∫W∫•∫ÛªAªéª‘ººEºÇºàºÀº·º˜ΩΩ:Ω_ΩÇΩóΩòΩ¬Ω»ææ_æâæ†æ¬æ€æ˜øø&ø,øFø]øaøbønø°øºø‡øÊøˇ¿ @1¿ @7¿ @G¿ @K¿ @L¿ @X¿ @ã¿ @¶¿ @ ¿ @–¿ @È¿ A¿ A!¿ A1¿ A5¿ A6¿ AB¿ Au¿ Aè¿ A≤¿ A∏¿ A—¿ B¿ B	¿ B¿ B¿ B¿ B*¿ B]¿ Bw¿ Bö¿ B†¿ Bπ¿ BÎ¿ BÒ¿ C¿ C¿ C¿ C=¿ Ck¿ C{¿ C∆¿ C‚¿ D¿ Do¿ D¿¿ E¿ E0¿ E;¿ EC¿ EV¿ E`¿ Ea¿ EÄ¿ E£¿ E©¿ E™¿ E”¿ EÊ¿ EÁ¿ F4¿ FÄ¿ Fó¿ F±¿ F÷¿ F„¿ G	¿ G.¿ G4¿ G5¿ GÉ¿ GÕ¿ H¿ H0¿ H1¿ HY¿ H}¿ H¢¿ H®¿ H©¿ H”¿ H˘¿ I¿ I$¿ I%¿ IM¿ Iq¿ Iñ¿ Iú¿ Iù¿ I«¿ IÌ¿ J¿ J¿ J¿ JP¿ JT¿ JU¿ Ja¿ Jó¿ J¬¿ J∆¿ J«¿ J”¿ JÏ¿ K¿ K/¿ K`¿ Kf¿ Kj¿ Kk¿ Kw¿ Kº¿ KÁ¿ L'¿ L+¿ L-¿ L.¿ Lj¿ Ln¿ Lª¿ M¿ M?¿ MC¿ Mè¿ Mﬂ¿ N+¿ Nu¿ N¬¿ NÍ¿ NÓ¿ O>¿ Oä¿ O»¿ OÃ¿ P¿ Pg¿ P∂¿ PÕ¿ P—¿ Pﬂ¿ P„¿ Q2¿ Qy¿ Q«¿ Q⁄¿ R&¿ Ri¿ R∂¿ RÍ¿ S¿ Sn¿ St¿ Sƒ¿ SÂ¿ S˛¿ T¿ T-¿ TC¿ Tx¿ TØ¿ TŒ¿ TÔ¿ U¿ U¿ UP¿ UV¿ U~¿ U•¿ Uª¿ U‹¿ V¿ V%¿ V3¿ V9¿ VQ¿ Vh¿ Vl¿ Vm¿ Vπ¿ Vø¿ VÁ¿ W¿ W'¿ WI¿ Ws¿ Wì¿ W°¿ Wß¿ W¿¿ W◊¿ W€¿ W‹¿ X¿ X1¿ XI¿ X]¿ Xc¿ Xå¿ Xê¿ Xë¿ Xù¿ X–¿ X˝¿ Y¿ Y¿ Y¿ YA¿ YZ¿ Yl¿ Yr¿ Y∞¿ Y⁄¿ Yﬁ¿ Yﬂ¿ YÎ¿ Z¿ Z7¿ ZI¿ ZO¿ Zj¿ Z£¿ Z©¿ Z≈¿ [¿ [0¿ [4¿ [5¿ [A¿ [t¿ [ç¿ [ü¿ [•¿ [¿¿ [˘¿ [ˇ¿ \¿ \Z¿ \Ü¿ \ä¿ \ã¿ \Ï¿ ]¿ ]-¿ ]~¿ ]û¿ ]Ô¿ ]˜¿ ^¿ ^j¿ ^ã¿ ^ﬂ¿ ^Á¿ _¿ _#¿ _F¿ _L¿ _P¿ _Q¿ _]¿ _ì¿ _¨¿ _·¿ `¿ `¿ `¿ `¿ `¿ `2¿ `K¿ `}¿ `ù¿ `§¿ `®¿ `©¿ `µ¿ `˙¿ a%¿ aa¿ aü¿ a£¿ a•¿ a¶¿ a€¿ aﬂ¿ b-¿ b}¿ b≤¿ b∂¿ c¿ cR¿ c†¿ cÎ¿ d9¿ db¿ df¿ d≥¿ e¿ eP¿ eg¿ ek¿ ey¿ e}¿ eÃ¿ f¿ fc¿ fv¿ f≈¿ g	¿ gX¿ gç¿ g¬¿ h¿ h-¿ hC¿ hX¿ hY¿ he¿ hò¿ h±¿ h√¿ h…¿ hÂ¿ i#¿ i)¿ iF¿ iv¿ iz¿ i{¿ iá¿ i∫¿ i”¿ iÂ¿ iÎ¿ j¿ jE¿ jK¿ jh¿ jò¿ jú¿ jù¿ j©¿ j‹¿ k	¿ k¿ k¿ ko¿ kà¿ k±¿ l¿ l$¿ l_¿ lg¿ lñ¿ l£¿ l∆¿ lÃ¿ l–¿ l—¿ l›¿ m¿ m,¿ ma¿ mÅ¿ mà¿ må¿ mç¿ mô¿ m≤¿ mÀ¿ m˝¿ n¿ n$¿ n(¿ n*¿ n+¿ nV¿ nZ¿ n™¿ nﬂ¿ n„¿ o.¿ ox¿ o¿¿ p¿ p=¿ pr¿ px¿ pΩ¿ pœ¿ pÈ¿ q¿ q(¿ qY¿ qt¿ q≠¿ q‰¿ q˘¿ q˙¿ r¿ rH¿ rI¿ rU¿ rç¿ ré¿ rú¿ rù¿ r“¿ rÿ¿ s(¿ sA¿ sG¿ sk¿ sq¿ sµ¿ s¸¿ t¿ t/¿ tB¿ t`¿ tä¿ tß¿ tµ¿ tª¿ t˜¿ u ¿ u6¿ uk¿ u£¿ uÀ¿ u—¿ u˜¿ v9¿ v[¿ va¿ ve¿ vf¿ v¨¿ v≤¿ v¿ vˆ¿ w¿ wM¿ wm¿ wò¿ wƒ¿ w“¿ wÿ¿ w˝¿ x¿ x!¿ x"¿ x.¿ xT¿ xv¿ xç¿ xë¿ xí¿ xû¿ xÒ¿ y,¿ yF¿ yX¿ y\¿ y]¿ yi¿ y†¿ y»¿ y÷¿ y‹¿ y˛¿ z¿ z¿ z¿ zO¿ zì¿ z™¿ z∞¿ z¥¿ zµ¿ z¡¿ {¿ {1¿ {i¿ {Ê¿ {Í¿ {Ï¿ {Ì¿ |>¿ |B¿ |ë¿ |Ê¿ }(¿ }Ñ¿ }ì¿ }î¿ }†¿ }Ô¿ ~¿ ~¿ ~!¿ ~t¿ ~∂¿ ~◊¿ ~¿ ~Ù¿ ~ı¿ 3¿ 9¿ â¿ ¢¿ ®¿ Ò¿ Ä¿ Ä¿ Äo¿ Ä∂¿ Ä‰¿ Å¿ Å,¿ ÅI¿ ÅW¿ Å]¿ ÅÖ¿ Å≥¿ Åπ¿ Åœ¿ Å„¿ Ç¿ Ç¿ Ç*¿ Ç.¿ Ç/¿ Çu¿ Ç{¿ Çπ¿ Çø¿ Çÿ¿ Çﬁ¿ É.¿ Éu¿ É¥¿ É’¿ Ñ ¿ Ñ,¿ Ñ:¿ Ñ@¿ Ñe¿ ÑÖ¿ Ñâ¿ Ñä¿ Ññ¿ Ñª¿ Ñ‘¿ Ñ˝¿ ÖD¿ ÖH¿ ÖI¿ ÖU¿ Ög¿ Öì¿ Öß¿ Ö´¿ Ö¨¿ Ö∆¿ ÖË¿ Ü"¿ Ü@¿ ÜÑ¿ Üµ¿ á¿ á/¿ á7¿ á_¿ áâ¿ á≠¿ áµ¿ áª¿ áø¿ á¿¿ áÃ¿ áı¿ à¿ à5¿ à9¿ à:¿ àF¿ à}¿ àî¿ à¢¿ à®¿ à ¿ àŒ¿ àœ¿ à€¿ â¿ â_¿ âv¿ â|¿ âÄ¿ âÅ¿ âç¿ â“¿ â˝¿ äM¿ ä ¿ äŒ¿ ä–¿ ä—¿ ã¿ ã¿ ãm¿ ãô¿ ã˘¿ å.¿ å4¿ åc¿ å}¿ å•¿ åŒ¿ å‰¿ å˙¿ ç¿ çP¿ çT¿ çV¿ çW¿ ç†¿ ç§¿ ç‡¿ é¿ é¿ éQ¿ éU¿ é§¿ éŸ¿ è	¿ èa¿ èg¿ èÆ¿ è√¿ èŸ¿ ê¿ ê3¿ ê\¿ ê{¿ êê¿ êë¿ êù¿ êﬁ¿ êﬂ¿ ë¿ ë#¿ ër¿ ëª¿ ë¡¿ í¿ í¿ íi¿ í°¿ íŸ¿ í˚¿ ì(¿ ìL¿ ìZ¿ ì`¿ ì}¿ ìì¿ ìó¿ ìò¿ ì‹¿ ì‚¿ î1¿ î|¿ î•¿ îΩ¿ î‡¿ îˇ¿ ï¿ ï¿ ï+¿ ïA¿ ïE¿ ïF¿ ïR¿ ïÜ¿ ïá¿ ïì¿ ï ¿ ï„¿ ñ¿ ñ&¿ ñ3¿ ñj¿ ñç¿ ñØ¿ ñÂ¿ ñ˜¿ ó#¿ ó8¿ óD¿ óQ¿ óe¿ ók¿ óo¿ óq¿ ór¿ ó¿¿ óƒ¿ ò¿ ò(¿ ò\¿ ò}¿ òÉ¿ ò±¿ òÔ¿ ô¿ ôî¿ ô¨¿ ô ¿ ôﬁ¿ ôﬂ¿ ôÎ¿ ö4¿ ö5¿ öÖ¿ öñ¿ öú¿ öÈ¿ ö¸¿ õ$¿ õ>¿ õc¿ õ¿ õç¿ õì¿ õ®¿ õæ¿ õ¬¿ õ√¿ ú¿ ú+¿ ú1¿ úi¿ úí¿ ú™¿ úÕ¿ úÏ¿ ú˙¿ ù ¿ ù¿ ù.¿ ù2¿ ù3¿ ù?¿ ùs¿ ùt¿ ùÄ¿ ù∑¿ ù–¿ ù¿ û¿ û6¿ û[¿ ûë¿ û£¿ ûœ¿ û‰¿ û¿ û˝¿ ü¿ ü¿ ü¿ ü¿ ü¿ üK¿ üO¿ üò¿ ü©¿ ü≠¿ ü˛¿ †¿ †K¿ †ó¿ †®¿ †¨¿ †˜¿ °E¿ °ñ¿ °Ê¿ °Í¿ °¯¿ °¸¿ ¢E¿ ¢ê¿ ¢Ÿ¿ £"¿ £q¿ £¶¿ £∆¿ £Ã¿ §¿ §_¿ §`¿ §}¿ §~¿ §¡¿ §«¿ •¿ •f¿ •}¿ •â¿ •÷¿ •◊¿ ¶'¿ ¶X¿ ¶^¿ ¶≠¿ ¶˝¿ ß¿ ß ¿ ßs¿ ßt¿ ßø¿ ß„¿ ß˚¿ ß¸¿ ®A¿ ®Ñ¿ ®∏¿ ®æ¿ ©¿ ©I¿ ©å¿ ©”¿ ™¿ ™¿ ™a¿ ™≤¿ ´¿ ´T¿ ´Z¿ ´¢¿ ´Ò¿ ´˛¿ ¨¿ ¨R¿ ¨^¿ ¨d¿ ¨™¿ ¨ˆ¿ ≠*¿ ≠f¿ ≠g¿ ≠s¿ ≠¥¿ ≠∂¿ ≠∑¿ ≠˛¿ Æ5¿ Æ\¿ Æb¿ Æè¿ Æï¿ Æ›¿ Ø,¿ Øy¿ Øº¿ ØŸ¿ ØÚ¿ ∞
¿ ∞¿ ∞¿ ∞P¿ ∞k¿ ∞l¿ ∞¥¿ ∞∫¿ ±¿ ±,¿ ±R¿ ±S¿ ±à¿ ±î¿ ±∞¿ ≤¿ ≤¿ ≤¿ ≤¿ ≤H¿ ≤Ä¿ ≤ì¿ ≤ô¿ ≤Í¿ ≥¿ ≥O¿ ≥S¿ ≥U¿ ≥V¿ ≥ì¿ ≥©¿ ≥ø¿ ≥ﬁ¿ ¥¿ ¥!¿ ¥F¿ ¥[¿ ¥\¿ ¥ö¿ ¥«¿ ¥Â¿ µ¿ µ5¿ µC¿ µI¿ µ|¿ µó¿ µÕ¿ ∂¿ ∂=¿ ∂l¿ ∂Ñ¿ ∂ä¿ ∂û¿ ∂–¿ ∂ˇ¿ ∑¿ ∑	¿ ∑
¿ ∑¿ ∑;¿ ∑T¿ ∑¿ ∑É¿ ∑Ñ¿ ∑ê¿ ∑¢¿ ∑–¿ ∑‰¿ ∑Ë¿ ∑È¿ ∏¿ ∏¿ ∏+¿ ∏K¿ ∏O¿ ∏P¿ ∏f¿ ∏r¿ ∏s¿ ∏ù¿ ∏æ¿ ∏‡¿ ∏˝¿ π¿ π¿ π¿ π5¿ π6¿ πB¿ π[¿ πå¿ πß¿ π¬¿ π÷¿ π‹¿ π‡¿ π·¿ π¯¿ ∫/¿ ∫3¿ ∫4¿ ∫@¿ ∫{¿ ∫ó¿ ∫≠¿ ∫¬¿ ∫‹¿ ∫˜¿ ª¿ ªl¿ ªr¿ ªv¿ ªw¿ ªç¿ ª®¿ ª¥¿ ªÙ¿ º¿ º"¿ ºI¿ º`¿ ºÑ¿ º˚¿ Ω'¿ ΩD¿ ΩN¿ Ωj¿ Ωí¿ Ω¥¿ Ω“¿ ΩÁ¿ æ¿ æ)¿ æG¿ æV¿ æc¿ æµ¿ æø¿ æ”¿ æÊ¿ æ¿ æÙ¿ æı¿ ø¿ ø¿ ø/¿ øF¿ ø[¿ ø_¿ øa¿ øb¿ øâ¿ øç¿ ø€¿ ¿,¿ ¿B¿ ¿y¿ ¿õ¿ ¿°¿ ¿Ò¿ ¡¿ ¡¿ ¡H¿ ¡x¿ ¡ã¿ ¡ú¿ ¡Ø¿ ¡«¿ ¡Õ¿ ¡Œ¿ ¡⁄¿ ¬	¿ ¬
¿ ¬¿ ¬^¿ ¬z¿ ¬è¿ ¬¨¿ ¬‘¿ ¬Í¿ ¬Ú¿ ¬¯¿ √.¿ √2¿ √3¿ √?¿ √v¿ √è¿ √∂¿ √Õ¿ √Û¿ ƒ¿ ƒ!¿ ƒ3¿ ƒJ¿ ƒp¿ ƒù¿ ƒ®¿ ƒ∑¿ ƒ„¿ ƒ˘¿ ≈¿ ≈¿ ≈"¿ ≈(¿ ≈,¿ ≈-¿ ≈9¿ ≈y¿ ≈â¿ ≈§¿ ≈”¿ ≈¸¿ ∆C¿ ∆¿¿ ∆ ¿ ∆“¿ ∆Â¿ ∆Ô¿ ∆Û¿ ∆ı¿ ∆ˆ¿ «%¿ «)¿ «y¿ ««¿ «›¿ »¿ »@¿ »F¿ »ñ¿ »≤¿ »∏¿ »¯¿ »˛¿ …G¿ …w¿ …ã¿ …ú¿ …◊¿ …Í¿  ¿  $¿  I¿  p¿  q¿  °¿  ß¿  Ú¿ À¿ À¿ ÀI¿ ÀÉ¿ À©¿ À⁄¿ À¸¿ Ã
¿ Ã¿ Ã+¿ ÃA¿ ÃE¿ ÃF¿ ÃÖ¿ Ãª¿ Ã‹¿ Õ¿ Õ+¿ Õ9¿ Õ?¿ Õ[¿ Õq¿ Õu¿ Õv¿ ÕÇ¿ Õ‡¿ Õ·¿ ÕÌ¿ Œ5¿ ŒQ¿ Œf¿ ŒÉ¿ Œ´¿ Œ¡¿ Œ…¿ Œœ¿ œ¿ œ	¿ œ
¿ œ¿ œM¿ œf¿ œç¿ œ§¿ œÀ¿ œÁ¿ œ˘¿ –¿ –'¿ –>¿ –d¿ –í¿ –ù¿ –¨¿ –ÿ¿ –Ó¿ –ˆ¿ —¿ —¿ —¿ —!¿ —"¿ —.¿ —n¿ —~¿ —ô¿ —»¿ —Ò¿ “9¿ “¥¿ “æ¿ “∆¿ “Ÿ¿ “„¿ “Á¿ “È¿ “Í¿ ”¿ ”¿ ”_¿ ”®¿ ”Ú¿ ‘)¿ ‘L¿ ‘R¿ ‘¢¿ ‘ø¿ ‘≈¿ ’¿ ’>¿ ’Q¿ ’b¿ ’u¿ ’ç¿ ’ì¿ ’î¿ ’©¿ ’¬¿ ’√¿ ’‰¿ ÷¿ ÷¿ ÷P¿ ÷V¿ ÷n¿ ÷r¿ ÷s¿ ÷¿ ÷Æ¿ ÷Ø¿ ÷ª¿ ◊¿ ◊¿ ◊1¿ ◊Z¿ ◊¶¿ ◊»¿ ◊¯¿ ÿ)¿ ÿ0¿ ÿe¿ ÿ°¿ ÿµ¿ ÿª¿ ÿÒ¿ ÿı¿ ÿˆ¿ Ÿ¿ Ÿ9¿ ŸR¿ Ÿy¿ Ÿê¿ Ÿ∂¿ Ÿ“¿ Ÿ‰¿ Ÿˆ¿ ⁄¿ ⁄-¿ ⁄S¿ ⁄Ä¿ ⁄ã¿ ⁄ö¿ ⁄∆¿ ⁄‹¿ ⁄‰¿ ⁄Ò¿ €¿ €¿ €¿ €¿ €¿ €\¿ €l¿ €á¿ €∂¿ €ﬂ¿ ‹4¿ ‹«¿ ‹—¿ ‹Ÿ¿ ‹Ï¿ ‹ˆ¿ ‹˙¿ ‹¸¿ ‹˝¿ ›¿ ›#¿ ›h¿ ›©¿ ›≠¿ ›Î¿ ﬁ	¿ ﬁ¿ ﬁG¿ ﬁá¿ ﬁ ¿ ﬂ¿ ﬂ¿ ﬂ"¿ ﬂs¿ ﬂ¿¿ ‡¿ ‡#¿ ‡)¿ ‡r¿ ‡¢¿ ‡µ¿ ‡∆¿ ‡Ÿ¿ ‡Ò¿ ‡˜¿ ‡¯¿ ·¿ ·D¿ ·E¿ ·Q¿ ·ô¿ ·µ¿ · ¿ ·Á¿ ‚¿ ‚%¿ ‚-¿ ‚3¿ ‚i¿ ‚m¿ ‚n¿ ‚z¿ ‚±¿ ‚ ¿ ‚Ò¿ „¿ „.¿ „J¿ „\¿ „z¿ „å¿ „£¿ „…¿ „ˆ¿ ‰¿ ‰¿ ‰<¿ ‰R¿ ‰Z¿ ‰g¿ ‰{¿ ‰Å¿ ‰Ö¿ ‰Ü¿ ‰í¿ ‰“¿ ‰‚¿ ‰˝¿ Â,¿ ÂU¿ Âú¿ Â—¿ Â€¿ Â„¿ Âˆ¿ Ê ¿ Ê¿ Ê¿ Ê¿ ÊK¿ ÊO¿ Ê†¿ Ê÷¿ Á ¿ Ám¿ Áß¿ Áƒ¿ Áﬁ¿ Á˝¿ Ë¿ Ë7¿ Ë[¿ Ën¿ Ëè¿ ËÆ¿ Ë≈¿ ËË¿ ËÈ¿ È8¿ È>¿ È_¿ Èe¿ È≥¿ È·¿ Í¿ Í¿ Í<¿ ÍV¿ Ít¿ ÍÇ¿ Íà¿ Íƒ¿ Í‹¿ Î¿ Î<¿ ÎB¿ ÎX¿ Î\¿ Î]¿ Îu¿ Îû¿ Î¥¿ Î’¿ Îı¿ Ï¿ Ï	¿ Ï#¿ Ï9¿ Ï=¿ Ï>¿ ÏZ¿ Ïw¿ Ïá¿ Ï¢¿ Ïº¿ Ï ¿ Ï–¿ Ï‰¿ Ï˙¿ Ï˛¿ Ïˇ¿ Ì¿ ÌR¿ ÌÑ¿ Ì¶¿ Ì™¿ Ì´¿ Ì∑¿ Ì˝¿ Ó)¿ Óf¿ Óö¿ Ó‘¿ Óÿ¿ Ó⁄¿ Ó€¿ Ô%¿ Ô&¿ Ôk¿ Ôz¿ Ô~¿ Ô¬¿ ¿ 0¿ 6¿ U¿ [¿ ¶¿ Ó¿ Ò¿ Ò¿ Ò+¿ ÒT¿ Òl¿ Òå¿ Òß¿ Ò¡¿ ÒÚ¿ Ú¿ Ú*¿ ÚO¿ ÚP¿ Ún¿ Út¿ Ú√¿ Ú€¿ Ú˚¿ Û¿ Û,¿ ÛF¿ ÛT¿ ÛZ¿ Ûn¿ ÛÑ¿ Ûà¿ Ûâ¿ Ûπ¿ Ûø¿ Ù
¿ Ù%¿ Ù+¿ Ùv¿ Ù|¿ Ù∂¿ ÙÈ¿ ı¿ ı2¿ ıS¿ ıa¿ ıg¿ ıÇ¿ ıò¿ ıú¿ ıù¿ ı©¿ ıƒ¿ ıŸ¿ ˆ¿ ˆ¿ ˆ8¿ ˆz¿ ˆñ¿ ˆﬁ¿ ˆ‰¿ ˆË¿ ˆÈ¿ ˆı¿ ˜=¿ ˜Y¿ ˜n¿ ˜ã¿ ˜≥¿ ˜…¿ ˜—¿ ˜◊¿ ¯¿ ¯¿ ¯¿ ¯¿ ¯U¿ ¯n¿ ¯Ç¿ ¯ê¿ ¯ñ¿ ¯ó¿ ¯™¿ ¯ﬁ¿ ˘ ¿ ˘>¿ ˘N¿ ˘o¿ ˘é¿ ˘≤¿ ˘À¿ ˘ﬂ¿ ˙¿ ˙0¿ ˙_¿ ˙l¿ ˙v¿ ˙î¿ ˙ú¿ ˙Ø¿ ˙π¿ ˙∫¿ ˙‰¿ ˚¿ ˚)¿ ˚D¿ ˚Y¿ ˚l¿ ˚â¿ ˚í¿ ˚ò¿ ˚‰¿ ˚˛¿ ¸¿ ¸+¿ ¸J¿ ¸S¿ ¸Y¿ ¸|¿ ¸î¿ ¸¢¿ ¸º¿ ¸ ¿ ¸˚¿ ˝¿ ˝T¿ ˝£¿ ˝Ú¿ ˛6¿ ˛s¿ ˛}¿ ˛£¿ ˛¨¿ ˛÷¿ ˛¯¿ ˛ˇ¿ ˇ ¿ ˇ¿ ˇ:¿ ˇM¿ ˇW¿ ˇ[¿ ˇ\¿ ˇh¿ ˇÆ¿ ˇ⁄¿ ¿ t¿ x¿ z¿ {¿ ¿¿ ƒ¿¿¿¿¿j¿z¿Ω¿‰¿Í¿#¿)¿w¿±¿…¿⁄¿
¿"¿=¿W¿à¿©¿™¿∂¿ˆ¿˜¿¿K¿g¿|¿ô¿¡¿◊¿ﬂ¿Â¿¿¿ ¿,¿c¿|¿ê¿û¿§¿•¿∏¿Â¿¿5¿E¿f¿Ö¿®¿¿¿‘¿¯¿%¿T¿a¿k¿â¿ë¿§¿Æ¿Ø¿Ÿ¿¿N¿ô¿ÿ¿	¿	.¿	R¿	m¿	v¿	è¿	£¿	∏¿	À¿	Ë¿	Ò¿	˜¿
C¿
]¿
t¿
à¿
ß¿
∞¿
∂¿
ÿ¿
¿
˛¿¿&¿W¿t¿∞¿ˇ¿N¿í¿œ¿Ÿ¿ˇ¿¿1¿S¿Z¿[¿k¿ï¿®¿≤¿∂¿∑¿√¿	¿5¿à¿å¿é¿è¿¥¿Œ¿¿¿¿J¿X¿Z¿[¿û¿–¿Ô¿ı¿C¿Ç¿à¿◊¿¿¿=¿~¿ø¿’¿ˆ¿¿:¿O¿P¿h¿i¿â¿è¿±¿›¿˜¿¿<¿J¿P¿i¿~¿ó¿≠¿±¿≤¿˝¿-¿M¿x¿ñ¿§¿™¿¡¿◊¿€¿‹¿'¿k¿Ö¿ã¿Œ¿¿N¿s¿£¿∆¿‘¿⁄¿ˆ¿¿¿¿¿/¿H¿]¿q¿∂¿ˇ¿K¿ó¿“¿Ë¿Ï¿Ì¿˘¿¿{¿¿Ä¿å¿√¿¿Y¿é¿©¿ª¿Û¿¿¿X¿j¿©¿„¿K¿i¿≈¿%¿Ç¿ë¿¿Ä¿é¿ò¿≠¿π¿€¿ˇ¿¿¿/¿d¿®¿ ¿Ó¿ˆ¿¸¿  ¿ ¿ ¿ R¿ }¿ ƒ¿!!¿!%¿!'¿!(¿!`¿!è¿!»¿!Œ¿!ˇ¿"¿"3¿"G¿"i¿"ã¿"Æ¿"–¿"Ê¿"¸¿#¿#<¿#d¿#å¿#¶¿#™¿#´¿#˚¿$3¿$9¿$à¿$À¿$Ï¿$ˇ¿%¿%9¿%G¿%M¿%b¿%x¿%ò¿%ú¿%ù¿%·¿%Á¿&3¿&}¿&É¿&”¿'¿'c¿'≤¿'Ò¿(B¿(t¿(ï¿(¡¿(‡¿(Ó¿(Ù¿)¿)"¿)B¿)F¿)G¿)É¿)â¿)ÿ¿*¿*F¿*g¿*ì¿*∂¿*ƒ¿* ¿*Ê¿*¸¿+¿+ ¿+!¿+-¿+{¿+|¿+…¿,¿,5¿,;¿,ã¿,‹¿,ˆ¿,˜¿-¿-]¿-|¿-Ç¿-Œ¿.¿.B¿.å¿.´¿.π¿.ø¿.Â¿.˚¿/¿/¿/ ¿/r¿/x¿/∏¿/Ó¿0¿0;¿0^¿0l¿0r¿0Æ¿0 ¿1¿1*¿10¿1F¿1J¿1K¿1|¿1ì¿1≤¿1»¿1Ë¿1Ï¿1Ì¿20¿2Q¿2s¿2â¿2©¿2≠¿2Æ¿2Ò¿3¿34¿3J¿3j¿3n¿3o¿3≤¿3”¿3ı¿4¿4+¿4/¿40¿4r¿4≥¿4◊¿4Ì¿5¿5¿5¿5A¿5t¿5î¿5™¿5 ¿5Œ¿5œ¿5Ù¿6@¿6x¿6ë¿6ó¿6∆¿6·¿7¿7¿72¿7W¿7é¿7∆¿7Ã¿7Ó¿8¿8N¿8T¿8o¿8£¿8©¿8º¿8¿¿8¡¿8Õ¿9¿9L¿9â¿9«¿9·¿:¿:¿:¿:*¿:z¿:π¿:‚¿;#¿;=¿;y¿;ª¿;ƒ¿;À¿;œ¿;–¿;‹¿<¿<,¿<b¿<Ö¿<“¿<ı¿=J¿=é¿=ƒ¿=Ô¿>	¿>¿>)¿>R¿>p¿>Ñ¿>õ¿>¥¿?¿?¿?#¿?Y¿?q¿?{¿?ä¿?Í¿@.¿@k¿@ë¿@∫¿@≈¿@Ó¿A9¿Ae¿Av¿AØ¿Aπ¿AÒ¿B¿B3¿BJ¿BX¿B`¿Bf¿Bj¿Bk¿Bw¿B∏¿BÊ¿BÍ¿BÎ¿B˜¿C<¿Cg¿CÆ¿CÒ¿DE¿D™¿E¿E¿E¿E¿EM¿E|¿E∞¿E∂¿EÚ¿F¿F'¿F[¿F}¿Fì¿F∂¿F…¿FË¿G¿G4¿GI¿GJ¿Gk¿Gl¿GÄ¿G¶¿G¥¿G∫¿Gı¿G˘¿G˙¿H¿H8¿HN¿HR¿HS¿Hz¿Hç¿H™¿Hø¿H⁄¿HÛ¿I¿I(¿ID¿I\¿Ir¿Ix¿I|¿I}¿I≈¿Iﬂ¿IÓ¿J¿J!¿J/¿J5¿JV¿Jh¿J™¿J√¿J–¿JÈ¿K¿K¿K¿K¿KE¿KK¿Kõ¿KÏ¿L¿L"¿La¿Lâ¿L∫¿L⁄¿M¿M$¿M2¿M8¿MP¿Mg¿MÇ¿MÜ¿Má¿M√¿M…¿N¿NP¿NÜ¿Nß¿N”¿Nˆ¿O¿O
¿O&¿O=¿OX¿O\¿O]¿Oû¿Oü¿O´¿O·¿O˙¿PD¿PE¿Pë¿Pﬂ¿Q+¿QL¿Qq¿QÉ¿Q‰¿R¿R¿R&¿R2¿RP¿R|¿Rº¿R»¿R‚¿RÍ¿RÎ¿S ¿S¿Sf¿Sÿ¿T¿T0¿TK¿Te¿TÑ¿T¢¿Tº¿U¿U¿U'¿UJ¿UP¿UT¿UU¿Ua¿Uz¿Uì¿U÷¿UÎ¿V
¿VQ¿V≈¿W ¿W¿W8¿WR¿Wq¿Wè¿W©¿X¿X	¿X"¿X/¿XR¿XX¿X\¿X]¿Xy¿Xê¿Xë¿X«¿XÕ¿Y¿Y,¿YN¿Yo¿Yë¿YÆ¿Y∆¿YË¿YÓ¿YÚ¿YÛ¿Z¿Z-¿ZD¿ZH¿ZI¿Ze¿ZÉ¿Zë¿Zó¿Zò¿Z±¿Z”¿Z˙¿[¿[¿[C¿[á¿[—¿\¿\Ä¿\Ë¿]O¿]Å¿]ﬁ¿^¿^;¿^Ü¿^å¿^ê¿^ë¿^Ê¿_1¿_P¿_t¿_é¿_û¿_≥¿_»¿`¿`¿`+¿`]¿`c¿`t¿`x¿`y¿`Ö¿`º¿`¸¿a
¿a¿a(¿aC¿a¿a£¿aΩ¿aÕ¿aÈ¿b¿bV¿bz¿bÉ¿bê¿b…¿bœ¿b”¿b‘¿b‡¿c0¿cj¿c~¿cÑ¿cú¿c≈¿c‚¿c¸¿d8¿dz¿dÉ¿dä¿dé¿dè¿dõ¿d¡¿d„¿e¿e¿e¿e%¿ef¿eÖ¿e†¿e≠¿e«¿eÓ¿eÙ¿e¯¿e˘¿f¿fJ¿fu¿f´¿fˇ¿gd¿gh¿gj¿gk¿gØ¿g≥¿h¿hL¿hÉ¿há¿hƒ¿i¿i$¿i_¿i£¿i©¿i‹¿i¸¿j¿j@¿jV¿jy¿jé¿jè¿jÿ¿jﬁ¿k-¿kf¿kê¿kß¿k…¿kÍ¿k¯¿k˛¿l¿l.¿lN¿lR¿lS¿l_¿lß¿lÍ¿m'¿me¿m¿m∑¿mª¿mº¿n	¿nR¿nu¿n{¿nÀ¿o¿o6¿o7¿oC¿oì¿o≤¿oÿ¿o¯¿pF¿pX¿pr¿pÆ¿p¿p˘¿q ¿q¿q¿q¿qH¿qg¿qÄ¿q£¿q‘¿r¿r¿r¿r¿r¿r'¿rh¿rÅ¿r§¿r»¿rœ¿r”¿r‘¿r‡¿s%¿sP¿sù¿sÙ¿s¯¿s˙¿s˚¿t5¿t9¿tm¿t∑¿t∏¿tÚ¿tˆ¿u*¿ut¿uu¿u≠¿u±¿uÂ¿v+¿v,¿vh¿vl¿v†¿vÓ¿vÔ¿w1¿w5¿wi¿w√¿wƒ¿x¿x¿x?¿xõ¿xú¿x‹¿x‡¿y¿yj¿yk¿yß¿y´¿yﬂ¿z-¿z.¿zh¿zl¿z¥¿{ ¿{¿{T¿{ö¿{≈¿{…¿|	¿|¿|\¿|§¿|Ì¿|Û¿}=¿}W¿}o¿}á¿}ù¿}∂¿}–¿}¿~¿~/¿~I¿~]¿~n¿~t¿~u¿~ø¿¿ ¿K¿L¿ú¿«¿»¿Ä¿Ä5¿Ä\¿Ä]¿Ä´¿Äÿ¿ÄŸ¿Å)¿ÅY¿Åà¿Åâ¿ÅŒ¿Ç	¿Ç
¿Ç3¿Çp¿Çq¿Çò¿Çœ¿Ç–¿É¿É;¿É<¿ÉH¿ÉÉ¿É£¿Éß¿É®¿É¥¿ÉÒ¿Ñ¿ÑB¿Ñk¿Ñq¿Ññ¿Ñø¿Ñ≈¿ÑË¿Ö¿Ö¿Ö;¿Öe¿Ök¿Öí¿ÖΩ¿Ö√¿Ö¿Ü!¿Ü'¿ÜU¿Üá¿Üç¿Ü∏¿ÜÁ¿ÜÌ¿á¿á?¿áE¿áI¿áJ¿áV¿áõ¿á∆¿áÚ¿à¿à ¿à?¿à^¿ày¿àö¿àΩ¿àÏ¿â¿âH¿âk¿ât¿âç¿âï¿âô¿âõ¿âú¿âÍ¿âÓ¿ä:¿äá¿ä•¿ä©¿ä¯¿ãH¿ãi¿ãm¿ã∞¿ã¥¿å¿å
¿å¿å¿å^¿åz¿å‡¿ç)¿ç/¿ç{¿ç ¿çÎ¿é¿é¿é%¿é6¿éb¿éà¿é†¿é±¿é¿è	¿è>¿èW¿èö¿èõ¿èß¿èÔ¿ê0¿ê4¿ê5¿êA¿ê~¿ê™¿ê„¿ë¿ë¿ë¿ë¿ë]¿ëÆ¿ë…¿ëœ¿í¿í`¿í®¿í„¿íÈ¿ì:¿ìÖ¿ì™¿ì∞¿ìÕ¿ìÎ¿ì˚¿î¿î2¿îI¿îñ¿îÆ¿î¥¿î∏¿îπ¿î·¿îÁ¿ï ¿ïT¿ïÑ¿ï ¿ïÍ¿ñ¿ñR¿ñj¿ñp¿ñt¿ñu¿ñÅ¿ñß¿ñ®¿ñÛ¿ó
¿ó¿óT¿óz¿ó{¿óá¿ó´¿ó¨¿ó∏¿ó›¿óÙ¿ò¿ò2¿òI¿òç¿ò ¿ò‚¿òË¿òÏ¿òÌ¿ò˘¿ô3¿ôQ¿ôR¿ô^¿ôÉ¿ôú¿ôæ¿ô¬¿ô√¿ôœ¿ô·¿ö,¿öá¿öØ¿ö“¿öÊ¿öÍ¿öÎ¿ö˜¿õ2¿õR¿õV¿õW¿õc¿õ®¿õ”¿õˇ¿ú¿ú-¿úG¿úa¿úy¿úÇ¿úõ¿ú£¿ù¿ùa¿ùÒ¿ùı¿ù˜¿ù¯¿û+¿û/¿û{¿û«¿ü¿ü`¿üÆ¿üˇ¿†¿†¿†m¿†ª¿°¿°[¿°¶¿°ˆ¿¢D¿¢á¿¢ã¿¢—¿£¿£j¿£π¿§ ¿§M¿§Ç¿§≥¿§Ò¿§Ú¿§˛¿•$¿•%¿•o¿•¿•Ö¿•’¿¶¿¶¿¶h¿¶ñ¿¶ú¿¶Í¿ß#¿ßr¿ß¡¿ß„¿ßÈ¿ßˇ¿®¿®L¿®n¿®t¿®Ç¿®Ø¿®”¿®Ÿ¿®Î¿©$¿©,¿©2¿©e¿©ê¿©ñ¿©¡¿™:¿™u¿™“¿´¿´2¿´<¿´B¿´T¿´Å¿´£¿´ø¿´⁄¿´˚¿¨#¿¨w¿¨à¿¨ó¿¨§¿¨Æ¿¨∂¿¨¿¿¨“¿¨ÿ¿¨Ë¿¨Ó¿≠3¿≠É¿≠Ω¿≠€¿Æ¿Æb¿Æf¿Æg¿Æ±¿Æœ¿Æ’¿Ø%¿Øa¿Øg¿Øº¿ØÍ¿Ø¿∞>¿∞w¿∞∆¿±¿±7¿±=¿±è¿±ﬁ¿±‰¿±˙¿≤ ¿≤G¿≤s¿≤y¿≤á¿≤Ω¿≤Í¿≤¿≥¿≥M¿≥U¿≥[¿≥†¿≥À¿≥—¿≥¿¥i¿¥¢¿¥Á¿¥Ò¿¥˜¿µ	¿µ6¿µX¿µt¿µè¿µ∞¿µ⁄¿∂.¿∂?¿∂N¿∂[¿∂e¿∂m¿∂w¿∂â¿∂è¿∂ü¿∂•¿∂Ó¿∑B¿∑x¿∑ñ¿∑—¿∏!¿∏%¿∏&¿∏v¿∏≈¿π¿π^¿πd¿π±¿πΩ¿π√¿∫¿∫^¿∫s¿∫¥¿∫Ÿ¿∫⁄¿ª)¿ªw¿ª√¿º¿ºX¿ºé¿ºî¿º·¿ºÌ¿ºÛ¿ΩD¿Ωè¿Ωß¿ΩÍ¿æ¿æ¿æ]¿æs¿æy¿æƒ¿æ·¿æÒ¿ø¿ø<¿øO¿øY¿ø]¿ø^¿øj¿ø—¿ø·¿¿¿¿6¿¿E¿¿n¿¿v¿¿â¿¿ì¿¿ó¿¿ò¿¿§¿¿È¿¡¿¡3¿¡C¿¡`¿¡ß¿¬¿¬¿¬ì¿¬≥¿¬˚¿√S¿√x¿√‡¿ƒ¿ƒS¿ƒy¿≈¿≈;¿≈•¿≈⁄¿∆;¿∆L¿∆∞¿∆∫¿«U¿«ñ¿«û¿«±¿«ª¿«‘¿»A¿»G¿»K¿»M¿»N¿»à¿»å¿»€¿…*¿…{¿…§¿…®¿…›¿…·¿…Ô¿…Û¿ A¿ o¿ ¢¿ ‚¿ Ë¿À¿À0¿ÀF¿À`¿Àq¿À¡¿À¸¿Ã¿Ã¿Ã<¿Ãk¿ÃÄ¿ÃÅ¿Ã¡¿Ã«¿Õ¿Õe¿Õk¿Õ¢¿Õƒ¿Õ÷¿ÕÛ¿Œ¿Œ¿Œ%¿Œ<¿Œa¿ŒÉ¿Œâ¿Œç¿Œé¿ŒÓ¿ŒÙ¿œ+¿œ1¿œÄ¿œè¿œ›¿–¿–¿–O¿–k¿–í¿–π¿–«¿–Õ¿–Ì¿—¿—¿—¿—¿—f¿—©¿—≠¿—Æ¿—∫¿—˙¿“!¿“/¿“5¿“c¿“g¿“h¿“t¿“ª¿“Ì¿”>¿”[¿”©¿”≠¿”Æ¿”∫¿”ˇ¿‘*¿‘p¿‘Ñ¿‘•¿‘¬¿‘ﬁ¿’9¿’B¿’I¿’M¿’O¿’P¿’†¿’Ô¿÷¿÷5¿÷^¿÷q¿÷ã¿÷°¿÷æ¿÷”¿÷‘¿◊¿◊¿◊b¿◊≥¿◊‡¿◊Ê¿ÿ#¿ÿE¿ÿW¿ÿt¿ÿí¿ÿ†¿ÿ¶¿ÿΩ¿ÿÍ¿ÿÓ¿ÿÔ¿ÿ˚¿Ÿ.¿ŸB¿ŸT¿ŸZ¿Ÿç¿Ÿë¿Ÿí¿Ÿû¿Ÿ—¿ŸÂ¿Ÿ˜¿Ÿ˝¿⁄0¿⁄4¿⁄5¿⁄A¿⁄t¿⁄à¿⁄ö¿⁄†¿⁄”¿⁄◊¿⁄ÿ¿⁄‰¿€¿€+¿€=¿€C¿€v¿€z¿€{¿€á¿€ ¿€ﬁ¿€Ò¿€˜¿‹3¿‹7¿‹8¿‹D¿‹j¿‹k¿‹w¿‹≠¿‹¡¿‹‰¿‹Í¿›¿›¿›¿›+¿›D¿›Z¿›u¿›y¿›z¿›Ü¿›ü¿›≥¿›’¿›‚¿›ˇ¿ﬁ¿ﬁ	¿ﬁ
¿ﬁ¿ﬁ^¿ﬁ°¿ﬁ•¿ﬁ¶¿ﬁ≤¿ﬁÿ¿ﬁ˙¿ﬂ¿ﬂ¿ﬂ¿ﬂ!¿ﬂX¿ﬂl¿ﬂz¿ﬂÄ¿ﬂ¢¿ﬂ¶¿ﬂß¿ﬂ≥¿ﬂÛ¿‡¿‡¿‡¿‡I¿‡M¿‡N¿‡Z¿‡ü¿‡ ¿·¿·¿·¿· ¿·R¿·k¿·ç¿·ì¿·±¿·—¿·Ë¿‚?¿‚H¿‚O¿‚S¿‚U¿‚V¿‚î¿‚ò¿‚„¿„/¿„Ä¿„Õ¿„ı¿„˘¿‰.¿‰2¿‰@¿‰D¿‰é¿‰ÿ¿Â¿ÂS¿ÂY¿Âä¿Â¢¿Â∏¿Â”¿Â‰¿Ê4¿Êo¿Êu¿Êí¿Ê±¿Ê‡¿Êı¿Êˆ¿Á<¿ÁB¿Áç¿Á‹¿ÁÏ¿ÁÚ¿Ë)¿ËM¿Ë`¿Ë~¿Ëù¿Ë´¿Ë±¿Ë…¿ËÓ¿È¿È¿È¿È¿Èk¿ÈÅ¿Èá¿Èæ¿Èƒ¿Í¿Í"¿Íp¿Í©¿Í≠¿Í‚¿Í˛¿Î%¿ÎL¿ÎZ¿Î`¿ÎÄ¿Î†¿Î§¿Î•¿Î±¿Î˘¿Ï¿Ï0¿Ïe¿Ïi¿Ïj¿Ïv¿Ï∂¿Ï›¿ÏÎ¿ÏÒ¿Ì¿Ì#¿Ì$¿Ì0¿Ìw¿Ì©¿Ì˙¿Ó¿Óe¿Ói¿Ój¿Óv¿Óª¿ÓÊ¿Ô-¿ÔA¿Ôb¿Ô¿Ôö¿ÔÛ¿Ô¸¿¿¿	¿
¿9¿=¿é¿ﬂ¿Ò*¿ÒO¿Òê¿Ò ¿Ò–¿Ú¿Ú-¿Ú@¿ÚT¿Úe¿Úk¿Úl¿Úü¿Ú≥¿Ú¥¿Ú¿¿Û¿Û0¿Ûx¿Û|¿Û~¿Û¿Û∆¿Û‚¿Ù2¿Ù}¿ÙÉ¿Ù«¿ÙÈ¿Ù˙¿ı¿ıD¿ı{¿ı∞¿ıÕ¿ı·¿ı¯¿ˆ¿ˆT¿ˆâ¿ˆä¿ˆŸ¿˜¿˜	¿˜W¿˜§¿˜≈¿˜À¿¯¿¯_¿¯Æ¿¯¯¿˘C¿˘a¿˘ú¿˘√¿˘ı¿˙1¿˙?¿˙E¿˙`¿˙Ä¿˙Ñ¿˙Ö¿˙ª¿˙Ê¿˚¿˚-¿˚H¿˚V¿˚\¿˚à¿˚ú¿˚≈¿˚Á¿˚Ì¿˚Ò¿˚Ú¿¸E¿¸Ç¿¸¨¿¸·¿˝¿˝¿˝¿˝H¿˝b¿˝ã¿˝≠¿˝≥¿˝∑¿˝∏¿˝¯¿˛L¿˛Ç¿˛√¿˛Ô¿˛˝¿ˇ¿ˇ@¿ˇe¿ˇé¿ˇ∞¿ˇ∂¿ˇ∫¿ˇª¿ˇÍ¿ :¿ n¿ ≠¿ ◊¿ Â¿ Î¿&¿I¿r¿î¿ö¿û¿ü¿‚¿)¿i¿®¿æ¿’¿÷¿‚¿)¿[¿\¿ú¿∏¿æ¿
¿2¿8¿b¿õ¿◊¿ﬂ¿¿Q¿Y¿_¿á¿Ω¿Û¿˚¿3¿m¿u¿{¿¿Ä¿∞¿Û¿˜¿¯¿¿H¿Ü¿∑¿˝¿>¿H¿N¿R¿S¿z¿§¿·¿	¿	X¿	ô¿	£¿	©¿	≠¿	Æ¿	“¿	˙¿
9¿
h¿
Æ¿
Ô¿
˘¿
ˇ¿¿¿*¿R¿ê¿ø¿¿F¿P¿V¿Z¿[¿g¿¨¿◊¿¿#¿P¿è¿ ¿—¿Ì¿¿¿U¿Y¿[¿\¿ô¿”¿¿¿M¿S¿æ¿›¿Û¿ ¿<¿a¿Ñ¿ß¿…¿È¿¿I¿w¿ü¿¡¿ÿ¿¿¿¿U¿ä¿≠¿€¿˚¿	¿¿(¿R¿r¿v¿w¿æ¿¿3¿9¿ç¿‹¿¯¿¿/¿M¿k¿y¿¿ó¿∑¿ª¿º¿	¿L¿R¿¢¿Ú¿¿R¿ñ¿∫¿¿¿ı¿E¿y¿Ø¿À¿Ú¿¿(¿.¿O¿o¿s¿t¿¿¿€¿·¿-¿{¿√¿ı¿¿4¿Z¿h¿n¿ç¿≠¿±¿≤¿ˆ¿¸¿B¿}¿†¿“¿Ï¿¿7¿E¿K¿j¿ä¿é¿è¿À¿¿=¿à¿”¿
¿¿¿Z¿~¿≈¿…¿ ¿ ¿ 9¿ Ä¿ Ñ¿ Ö¿ Ω¿ ‡¿!¿!3¿!F¿!~¿!Ç¿!É¿!ª¿!ﬁ¿"¿"6¿"I¿"Å¿"Ö¿"Ü¿"–¿"Û¿#8¿#<¿#=¿#c¿#â¿#∏¿#Á¿$¿$¿$]¿$j¿$p¿$∂¿$‚¿%¿%H¿%ã¿%¡¿%‚¿&¿&0¿&>¿&D¿&`¿&Ä¿&Ñ¿&Ö¿&ë¿&—¿&Ì¿&˚¿'¿'/¿'3¿'4¿'@¿'á¿'π¿'‰¿(¿(M¿(Y¿(¬¿)
¿)¿)¿)h¿)±¿)∏¿)π¿)‡¿*¿*¿*;¿*i¿*o¿*î¿*»¿*Œ¿*ı¿+#¿+)¿+Q¿+Ç¿+à¿+Æ¿+€¿+·¿,¿,.¿,4¿,Z¿,á¿,ç¿,∏¿,Ô¿,ı¿-¿-H¿-N¿-w¿-™¿-∞¿-ÿ¿.	¿.¿.8¿.k¿.q¿.ò¿.«¿.Õ¿/¿/V¿/\¿/Ñ¿/µ¿/ª¿/‰¿0¿0¿0C¿0p¿0v¿0õ¿0∆¿0Ã¿0¿1"¿1(¿1L¿1~¿1Ñ¿1±¿1ı¿1˚¿2(¿2l¿2r¿2ï¿2≈¿2À¿2Ú¿3¿3%¿3{¿3≥¿3π¿3‰¿4¿4¿4I¿4|¿4Ç¿4¨¿4ﬂ¿4Â¿5¿5M¿5S¿5Ö¿5«¿5Õ¿5Ó¿6¿6 ¿6G¿6s¿6y¿6ß¿6‰¿6Í¿77¿7Ü¿7»¿7Ì¿8¿8¿8@¿8n¿8t¿8ù¿8«¿8Õ¿8˘¿9)¿9/¿9\¿9é¿9î¿9æ¿9Í¿9¿:¿:L¿:R¿:|¿:®¿:Æ¿:ÿ¿;¿;
¿;0¿;T¿;Z¿;¿;°¿;ß¿;Œ¿;Ù¿;˙¿<8¿<å¿<í¿<—¿='¿=-¿=f¿=∞¿=∂¿=¿><¿>B¿>p¿>§¿>™¿>”¿>˝¿?¿?>¿?å¿?í¿?Õ¿@¿@!¿@W¿@¢¿@®¿@¨¿@≠¿@ƒ¿@„¿@Á¿@Ë¿A¿A*¿A.¿A/¿AJ¿Am¿Aq¿Ar¿Aê¿A∂¿A∫¿Aª¿A⁄¿B¿B¿B¿B"¿BF¿BJ¿BK¿Bi¿Bè¿Bì¿Bî¿B∞¿B‘¿Bÿ¿BŸ¿Bı¿C¿C¿C¿C6¿CV¿CZ¿C[¿Cr¿Cë¿Cï¿Cñ¿CØ¿C–¿C‘¿C’¿D¿D`¿Dd¿De¿D™¿DÚ¿Dˆ¿D˜¿E6¿Ex¿E|¿E}¿EΩ¿F ¿F¿F¿F<¿Fm¿Fq¿Fr¿Fò¿Fø¿F√¿Fƒ¿FÒ¿G&¿G*¿G+¿GX¿Gç¿Gë¿Gì¿Gî¿G„¿Gˇ¿H¿HR¿HÜ¿H∫¿I	¿I¿I/¿IE¿I_¿I|¿Ië¿Ií¿Iﬂ¿J/¿JQ¿Jc¿JÄ¿Jû¿J¨¿J≤¿J…¿JÈ¿JÌ¿JÓ¿J˙¿KA¿Ks¿K∂¿K∫¿Kª¿K«¿L¿L7¿L|¿LÄ¿LÇ¿LÉ¿L∆¿M	¿M¿M!¿Mh¿MØ¿M·¿N¿Nc¿N†¿N°¿N≠¿NÙ¿O&¿O1¿OS¿OÉ¿Oá¿Oâ¿Oä¿Oº¿O¿¿P¿P+¿P/¿Pv¿P±¿PÁ¿Q0¿QK¿Qa¿Q|¿Qõ¿Q∞¿Q±¿Qˆ¿R¿R-¿RK¿Rj¿Rx¿R~¿Rñ¿R∂¿R∫¿Rª¿R«¿S¿S¿S*¿S0¿S^¿Sb¿Sc¿So¿S¥¿Sﬂ¿T&¿T*¿T,¿T-¿Tj¿Tn¿T∏¿U¿U3¿U]¿Ua¿Uo¿Us¿U∂¿UÏ¿V<¿VW¿Vm¿VÖ¿Vú¿V±¿V≤¿VÂ¿W ¿W¿W'¿WA¿WO¿WU¿Wi¿Wâ¿Wç¿Wé¿Wö¿W·¿X¿X5¿X9¿X:¿XF¿Xã¿X∂¿XÙ¿X¯¿X˙¿X˚¿Y/¿Y3¿YA¿YE¿YÉ¿Yƒ¿Yı¿Z.¿Z4¿ZW¿Zm¿Zä¿Z†¿Zµ¿Z ¿ZÀ¿[¿[7¿[=¿[ä¿[»¿[Á¿[˙¿\¿\2¿\@¿\F¿\c¿\v¿\ù¿\À¿\—¿\Á¿\Î¿\Ï¿\¯¿]#¿]$¿]r¿]¿¿^¿^¿^ ¿^,¿^E¿^`¿^Ä¿^ú¿^†¿^°¿^≠¿^‰¿^˝¿_4¿_A¿_~¿_ê¿_¶¿_¡¿_«¿` ¿`¿`:¿`M¿`W¿`[¿`\¿`h¿`≠¿`ÿ¿a¿a¿a ¿a!¿ao¿a¢¿a¶¿aÚ¿aˆ¿bA¿bí¿b¶¿b™¿b∏¿bº¿b¸¿c?¿cr¿c≠¿c≥¿cÌ¿d¿d"¿dD¿de¿dï¿d«¿d›¿dÚ¿e¿e8¿e]¿eÜ¿eõ¿eú¿e‚¿f¿f7¿fJ¿fh¿fÇ¿fê¿fñ¿f©¿fø¿f√¿fƒ¿g¿gF¿gL¿gù¿gﬂ¿gÂ¿h6¿hÖ¿hπ¿hÎ¿i¿i*¿iP¿i^¿id¿iÉ¿iô¿iù¿iû¿iÎ¿j¿j5¿jG¿jd¿jÄ¿jé¿jî¿j©¿jø¿j√¿jƒ¿k¿k,¿k2¿kw¿kº¿l¿lM¿lú¿l›¿m¿mH¿m]¿mc¿mä¿mπ¿m‘¿m˙¿n¿n*¿n0¿nK¿na¿ne¿nf¿n≤¿nÏ¿nÚ¿o4¿o:¿oa¿oî¿o±¿oŸ¿o˝¿p¿p¿p.¿pD¿pH¿pI¿pU¿pg¿py¿pç¿pë¿pí¿pû¿p…¿p ¿q ¿q¿qI¿qJ¿qö¿q†¿q¿r!¿rp¿rä¿r¨¿rË¿rÏ¿rÌ¿r˘¿sA¿sÇ¿s∂¿s ¿s–¿t¿tH¿tÜ¿t†¿tÿ¿t‹¿t›¿tÈ¿u9¿ub¿uä¿u§¿u‡¿v"¿v+¿v2¿v6¿v7¿vC¿vz¿v®¿v¥¿w¿wd¿wØ¿w⁄¿w·¿x¿x1¿xå¿x•¿x¬¿x÷¿y¿y/¿yO¿yX¿ye¿yq¿yà¿y∂¿yÂ¿z¿z¿z%¿z3¿zF¿zY¿zÜ¿z‰¿{¿{&¿{?¿{X¿{a¿{h¿{x¿{¢¿{µ¿{ø¿{√¿{ƒ¿{–¿|¿|@¿|D¿|E¿|Q¿|ñ¿|¡¿}¿}X¿}õ¿}ı¿}˘¿}˚¿}¸¿~K¿~O¿~]¿~a¿~•¿~Í¿1¿2¿y¿ã¿ë¿ﬁ¿Ä¿Ä¿ÄE¿Ä_¿Äu¿Äé¿Ä§¿Äª¿Ä“¿ÄÁ¿ÄË¿Å!¿Å:¿ÅF¿Åa¿Å¿Åç¿Åì¿Å™¿Å¿¿Åƒ¿Å≈¿Ç¿Ç5¿ÇD¿Ç^¿Çy¿Çá¿Çç¿Ç°¿Ç∑¿Çª¿Çº¿Ç»¿ÇÙ¿Çı¿É¿É8¿Éí¿É’¿É‚¿Ñ¿Ñ(¿Ñ/¿Ñb¿Ñf¿Ñh    .RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBase_transparentPaintRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegion Ω‡